{"version":3,"sources":["/./node_modules/primeng/components/common/shared.js","/./node_modules/primeng/components/dom/domhandler.js","/./node_modules/primeng/components/dropdown/dropdown.js","/./node_modules/primeng/components/paginator/paginator.js","/./node_modules/primeng/components/table/table.js","/./node_modules/primeng/components/utils/objectutils.js","/./node_modules/primeng/table.js"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,aAAa,mBAAO,CAAC,iEAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,kC;;;;;;;;;;;;ACzTa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,2DAA2D;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,2DAA2D;AACngBAAgB;AAChiEAAiE,iCAAiC;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,sC;;;;;;;;;;;;ACzba;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,iFAAwB;AAClD,aAAa,mBAAO,CAAC,iEAAe;AACpC,mBAAmB,mBAAO,CAAC,mFAAqB;AAChD,eAAe,mBAAO,CAAC,uEAAiB;AACxC,eAAe,mBAAO,CAAC,4EAAkB;AACzC,mBAAmB,mBAAO,CAAC,8EAAmB;AAC9C,oBAAoB,mBAAO,CAAC,oFAAsB;AAClD,cAAc,mBAAO,CAAC,oEAAgB;AACtC;AACA;AACA,gDAAgD,iBAAiB,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iKAAiK,0BAA0B,6BAA6B,oUAAoU,6CAA6C,uBAAuB,gEAAgE,WAAW,kBAAkB;AAC7rB,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACbqCAAqC,EAAE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,YAAY;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAA4C;AACjmIAAmI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kCAAkC;AAC5E,kFAAkF,2CAA2C;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD,mCAAmC,0FAA0F;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbuCAAuC,gBAAgB;AACvD;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA,gEAAgE,gBAAgB;AAChF;AACA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,wOAAwO,myBAAmyB,aAAa,uHAAuH,sBAAsB,0FAA0F,oHAAoH,4GAA4G,gBAAgB,wFAAwF,WAAW,0BAA0B,0EAA0E,gJAAgJ,4CAA4C,sBAAsB,66BAA66B,2BAA2B,0FAA0F,sxCAAsxC,yBAAyB,6FAA6F,WAAW,oBAAoB,uIAAuI,WAAW,0DAA0D,0OAA0O,WAAW,4DAA4D,oOAAoO,suBAAsuB,uBAAuB,6LAA6L,eAAe,eAAe,eAAe,cAAc,cAAc,0rBAA0rB,oBAAoB;AACt0N;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB,uFAAuF,sBAAsB;AAC7G,uFAAuF,sBAAsB;AAC7G;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,oC;;;;;;;;;;;;ACz+Ba;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,cAAc,mBAAO,CAAC,oEAAgB;AACtC,iBAAiB,mBAAO,CAAC,oFAAsB;AAC/C,eAAe,mBAAO,CAAC,4EAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,YAAY,KAAK,WAAW;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0DAA0D,gBAAgB;AAC1E;AACA;AACA,gDAAgD,kDAAkD;AAClG;AACA;AACA,gDAAgD,iCAAiC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,mCAAmC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC,2BAA2B,WAAW;AACtC,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+YAA+Y,WAAW,0BAA0B,2HAA2H,mBAAmB,8QAA8Q,kCAAkC,gaAAga,kCAAkC,keAAke,6CAA6C,KAAK,UAAU,4RAA4R,iCAAiC,6YAA6Y,iCAAiC,khBAAkhB,WAAW,0BAA0B;AACpnG,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;;;;;ACpRa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,iEAAe;AACpC,eAAe,mBAAO,CAAC,uEAAiB;AACxC,eAAe,mBAAO,CAAC,4EAAkB;AACzC,kBAAkB,mBAAO,CAAC,wFAAwB;AAClD,mBAAmB,mBAAO,CAAC,8EAAmB;AAC9C,oBAAoB,mBAAO,CAAC,oFAAsB;AAClD,aAAa,mBAAO,CAAC,iEAAe;AACpC,aAAa,mBAAO,CAAC,gDAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,YAAY,KAAK,WAAW;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbsDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iDAAiD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mDAAmD;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+BAA+B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,8BAA8B,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA,iDAAiD,iEAAiE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wFAAwF;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iEAAiE;AACtH;AACA;AACA;AACA;AACA,mDAAmD,wFAAwF;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,8BAA8B,EAAE;AACvH;AACA,qDAAqD,iEAAiE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,wFAAwF;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,2EAA2E;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6DAA6D;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,wDAAwD;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,4BAA4B,EAAE;AACzG;AACA;AACA;AACA;AACA,uCAAuC,wDAAwD;AAC/F;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gGAAgG;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gGAAgG;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,8BAA8B,EAAE;AACvG;AACA,qCAAqC,6FAA6F;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6FAA6F;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,uCAAuC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oCAAoC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4BAA4B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4BAA4B,cAAc;AAC1C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6DAA6D;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbuCAAuC,mEAAmE,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,iDAAiD,EAAE;AACzG,oDAAoD,iDAAiD,EAAE;AACvG;AACA;AACA;AACA,sDAAsD,oDAAoD,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,4DAA4D,EAAE;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAguCAAuC,gBAAgB;AACvD;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA,gDAAgD,gBAAgB;AAChE;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClE;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sHAAsH,8SAA8S,46CAA46C,UAAU,mBAAmB,mJAAmJ,WAAW,mBAAmB,0MAA0M,UAAU,mBAAmB,weAAwe,mBAAmB,gMAAgM,yDAAyD;AACz/F;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kYAAkY,WAAW,8JAA8J,ibAAib,WAAW,mMAAmM,qKAAqK,WAAW,gGAAgG,+NAA+N,WAAW,mCAAmC;AACvsD,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA,wCAAwC,gBAAgB;AACxD;AACA;AACA;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8bAA8b,UAAU,mBAAmB,4MAA4M,UAAU,mBAAmB,0UAA0U,WAAW,yDAAyD,mQAAmQ,mFAAmF,gMAAgM,UAAU,mBAAmB,uVAAuV,kHAAkH,4MAA4M,WAAW,iBAAiB,kqBAAkqB,UAAU,mBAAmB,4MAA4M,UAAU,mBAAmB;AAC9tG,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,4FAA4F;AACxL,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qCAAqC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,qCAAqC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qCAAqC;AACpF;AACA;AACA;AACA;AACA;AACA,6CAA6C,qCAAqC;AAClaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA,uVAAuV,+HAA+H,mFAAmF,0BAA0B;AACnkB,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA,qVAAqV,0HAA0H,8EAA8E,sBAAsB;AACnjB,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6VAA6V,+HAA+H,8EAA8E,sBAAsB;AAChkB,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,iC;;;;;;;;;;;;ACjkHa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,qBAAqB;AAClE;AACA,mDAAmD,sBAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mBAAmB;AAC5D;AACA,kCAAkC,yDAAyD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,uC;;;;;;;;;;;;ACpLA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,kFAA0B,G","file":"default~desktop-desktop-module~his-his-module~spark-rdd-spark-rdd-module~user-user-module-es5.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar core_2 = require(\"@angular/core\");\nvar Header = /** @class */ (function () {\n    function Header() {\n    }\n    Header = __decorate([\n        core_2.Component({\n            selector: 'p-header',\n            template: '<ng-content></ng-content>'\n        })\n    ], Header);\n    return Header;\n}());\nexports.Header = Header;\nvar Footer = /** @class */ (function () {\n    function Footer() {\n    }\n    Footer = __decorate([\n        core_2.Component({\n            selector: 'p-footer',\n            template: '<ng-content></ng-content>'\n        })\n    ], Footer);\n    return Footer;\n}());\nexports.Footer = Footer;\nvar PrimeTemplate = /** @class */ (function () {\n    function PrimeTemplate(template) {\n        this.template = template;\n    }\n    PrimeTemplate.prototype.getType = function () {\n        return this.name;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], PrimeTemplate.prototype, \"type\", void 0);\n    __decorate([\n        core_1.Input('pTemplate'),\n        __metadata(\"design:type\", String)\n    ], PrimeTemplate.prototype, \"name\", void 0);\n    PrimeTemplate = __decorate([\n        core_1.Directive({\n            selector: '[pTemplate]',\n            host: {}\n        }),\n        __metadata(\"design:paramtypes\", [core_1.TemplateRef])\n    ], PrimeTemplate);\n    return PrimeTemplate;\n}());\nexports.PrimeTemplate = PrimeTemplate;\n/* Deprecated */\nvar Column = /** @class */ (function () {\n    function Column() {\n        this.filterType = 'text';\n        this.exportable = true;\n        this.resizable = true;\n        this.sortFunction = new core_1.EventEmitter();\n    }\n    Column.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.templates.forEach(function (item) {\n            switch (item.getType()) {\n                case 'header':\n                    _this.headerTemplate = item.template;\n                    break;\n                case 'body':\n                    _this.bodyTemplate = item.template;\n                    break;\n                case 'footer':\n                    _this.footerTemplate = item.template;\n                    break;\n                case 'filter':\n                    _this.filterTemplate = item.template;\n                    break;\n                case 'editor':\n                    _this.editorTemplate = item.template;\n                    break;\n                default:\n                    _this.bodyTemplate = item.template;\n                    break;\n            }\n        });\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"field\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"colId\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"sortField\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"filterField\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"header\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"footer\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Column.prototype, \"sortable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Column.prototype, \"editable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Column.prototype, \"filter\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"filterMatchMode\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"filterType\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Column.prototype, \"excludeGlobalFilter\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Column.prototype, \"rowspan\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Column.prototype, \"colspan\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"scope\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Column.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Column.prototype, \"exportable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Column.prototype, \"headerStyle\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"headerStyleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Column.prototype, \"bodyStyle\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"bodyStyleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Column.prototype, \"footerStyle\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"footerStyleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Column.prototype, \"hidden\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Column.prototype, \"expander\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"selectionMode\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Column.prototype, \"filterPlaceholder\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Column.prototype, \"filterMaxlength\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Column.prototype, \"frozen\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Column.prototype, \"resizable\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Column.prototype, \"sortFunction\", void 0);\n    __decorate([\n        core_1.ContentChildren(PrimeTemplate),\n        __metadata(\"design:type\", core_1.QueryList)\n    ], Column.prototype, \"templates\", void 0);\n    __decorate([\n        core_1.ContentChild(core_1.TemplateRef, { static: false }),\n        __metadata(\"design:type\", core_1.TemplateRef)\n    ], Column.prototype, \"template\", void 0);\n    Column = __decorate([\n        core_2.Component({\n            selector: 'p-column',\n            template: ''\n        })\n    ], Column);\n    return Column;\n}());\nexports.Column = Column;\n/* Deprecated */\nvar Row = /** @class */ (function () {\n    function Row() {\n    }\n    __decorate([\n        core_1.ContentChildren(Column),\n        __metadata(\"design:type\", core_1.QueryList)\n    ], Row.prototype, \"columns\", void 0);\n    Row = __decorate([\n        core_2.Component({\n            selector: 'p-row',\n            template: \"\"\n        })\n    ], Row);\n    return Row;\n}());\nexports.Row = Row;\n/* Deprecated */\nvar HeaderColumnGroup = /** @class */ (function () {\n    function HeaderColumnGroup() {\n    }\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], HeaderColumnGroup.prototype, \"frozen\", void 0);\n    __decorate([\n        core_1.ContentChildren(Row),\n        __metadata(\"design:type\", core_1.QueryList)\n    ], HeaderColumnGroup.prototype, \"rows\", void 0);\n    HeaderColumnGroup = __decorate([\n        core_2.Component({\n            selector: 'p-headerColumnGroup',\n            template: \"\"\n        })\n    ], HeaderColumnGroup);\n    return HeaderColumnGroup;\n}());\nexports.HeaderColumnGroup = HeaderColumnGroup;\n/* Deprecated */\nvar FooterColumnGroup = /** @class */ (function () {\n    function FooterColumnGroup() {\n    }\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], FooterColumnGroup.prototype, \"frozen\", void 0);\n    __decorate([\n        core_1.ContentChildren(Row),\n        __metadata(\"design:type\", core_1.QueryList)\n    ], FooterColumnGroup.prototype, \"rows\", void 0);\n    FooterColumnGroup = __decorate([\n        core_2.Component({\n            selector: 'p-footerColumnGroup',\n            template: \"\"\n        })\n    ], FooterColumnGroup);\n    return FooterColumnGroup;\n}());\nexports.FooterColumnGroup = FooterColumnGroup;\nvar SharedModule = /** @class */ (function () {\n    function SharedModule() {\n    }\n    SharedModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule],\n            exports: [Header, Footer, Column, PrimeTemplate, Row, HeaderColumnGroup, FooterColumnGroup],\n            declarations: [Header, Footer, Column, PrimeTemplate, Row, HeaderColumnGroup, FooterColumnGroup]\n        })\n    ], SharedModule);\n    return SharedModule;\n}());\nexports.SharedModule = SharedModule;\n//# sourceMappingURL=shared.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DomHandler = /** @class */ (function () {\n    function DomHandler() {\n    }\n    DomHandler.addClass = function (element, className) {\n        if (element.classList)\n            element.classList.add(className);\n        else\n            element.className += ' ' + className;\n    };\n    DomHandler.addMultipleClasses = function (element, className) {\n        if (element.classList) {\n            var styles = className.split(' ');\n            for (var i = 0; i < styles.length; i++) {\n                element.classList.add(styles[i]);\n            }\n        }\n        else {\n            var styles = className.split(' ');\n            for (var i = 0; i < styles.length; i++) {\n                element.className += ' ' + styles[i];\n            }\n        }\n    };\n    DomHandler.removeClass = function (element, className) {\n        if (element.classList)\n            element.classList.remove(className);\n        else\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    };\n    DomHandler.hasClass = function (element, className) {\n        if (element.classList)\n            return element.classList.contains(className);\n        else\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n    };\n    DomHandler.siblings = function (element) {\n        return Array.prototype.filter.call(element.parentNode.children, function (child) {\n            return child !== element;\n        });\n    };\n    DomHandler.find = function (element, selector) {\n        return Array.from(element.querySelectorAll(selector));\n    };\n    DomHandler.findSingle = function (element, selector) {\n        if (element) {\n            return element.querySelector(selector);\n        }\n        return null;\n    };\n    DomHandler.index = function (element) {\n        var children = element.parentNode.childNodes;\n        var num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    };\n    DomHandler.indexWithinGroup = function (element, attributeName) {\n        var children = element.parentNode.childNodes;\n        var num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    };\n    DomHandler.relativePosition = function (element, target) {\n        var elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        var targetHeight = target.offsetHeight;\n        var targetOffset = target.getBoundingClientRect();\n        var viewport = this.getViewport();\n        var top, left;\n        if ((targetOffset.top + targetHeight + elementDimensions.height) > viewport.height) {\n            top = -1 * (elementDimensions.height);\n            if (targetOffset.top + top < 0) {\n                top = -1 * targetOffset.top;\n            }\n        }\n        else {\n            top = targetHeight;\n        }\n        if (elementDimensions.width > viewport.width) {\n            // element wider then viewport and cannot fit on screen (align at left side of viewport)\n            left = targetOffset.left * -1;\n        }\n        else if ((targetOffset.left + elementDimensions.width) > viewport.width) {\n            // element wider then viewport but can be fit on screen (align at right side of viewport)\n            left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\n        }\n        else {\n            // element fits on screen (align with target)\n            left = 0;\n        }\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    };\n    DomHandler.absolutePosition = function (element, target) {\n        var elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        var elementOuterHeight = elementDimensions.height;\n        var elementOuterWidth = elementDimensions.width;\n        var targetOuterHeight = target.offsetHeight;\n        var targetOuterWidth = target.offsetWidth;\n        var targetOffset = target.getBoundingClientRect();\n        var windowScrollTop = this.getWindowScrollTop();\n        var windowScrollLeft = this.getWindowScrollLeft();\n        var viewport = this.getViewport();\n        var top, left;\n        if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n            top = targetOffset.top + windowScrollTop - elementOuterHeight;\n            if (top < 0) {\n                top = windowScrollTop;\n            }\n        }\n        else {\n            top = targetOuterHeight + targetOffset.top + windowScrollTop;\n        }\n        if (targetOffset.left + elementOuterWidth > viewport.width)\n            left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);\n        else\n            left = targetOffset.left + windowScrollLeft;\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    };\n    DomHandler.getHiddenElementOuterHeight = function (element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        var elementHeight = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementHeight;\n    };\n    DomHandler.getHiddenElementOuterWidth = function (element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        var elementWidth = element.offsetWidth;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementWidth;\n    };\n    DomHandler.getHiddenElementDimensions = function (element) {\n        var dimensions = {};\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        dimensions.width = element.offsetWidth;\n        dimensions.height = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return dimensions;\n    };\n    DomHandler.scrollInView = function (container, item) {\n        var borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n        var borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n        var paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n        var paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n        var containerRect = container.getBoundingClientRect();\n        var itemRect = item.getBoundingClientRect();\n        var offset = (itemRect.top + document.body.scrollTop) - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n        var scroll = container.scrollTop;\n        var elementHeight = container.clientHeight;\n        var itemHeight = this.getOuterHeight(item);\n        if (offset < 0) {\n            container.scrollTop = scroll + offset;\n        }\n        else if ((offset + itemHeight) > elementHeight) {\n            container.scrollTop = scroll + offset - elementHeight + itemHeight;\n        }\n    };\n    DomHandler.fadeIn = function (element, duration) {\n        element.style.opacity = 0;\n        var last = +new Date();\n        var opacity = 0;\n        var tick = function () {\n            opacity = +element.style.opacity.replace(\",\", \".\") + (new Date().getTime() - last) / duration;\n            element.style.opacity = opacity;\n            last = +new Date();\n            if (+opacity < 1) {\n                (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n            }\n        };\n        tick();\n    };\n    DomHandler.fadeOut = function (element, ms) {\n        var opacity = 1, interval = 50, duration = ms, gap = interval / duration;\n        var fading = setInterval(function () {\n            opacity = opacity - gap;\n            if (opacity <= 0) {\n                opacity = 0;\n                clearInterval(fading);\n            }\n            element.style.opacity = opacity;\n        }, interval);\n    };\n    DomHandler.getWindowScrollTop = function () {\n        var doc = document.documentElement;\n        return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    };\n    DomHandler.getWindowScrollLeft = function () {\n        var doc = document.documentElement;\n        return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    };\n    DomHandler.matches = function (element, selector) {\n        var p = Element.prototype;\n        var f = p['matches'] || p.webkitMatchesSelector || p['mozMatchesSelector'] || p['msMatchesSelector'] || function (s) {\n            return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n        };\n        return f.call(element, selector);\n    };\n    DomHandler.getOuterWidth = function (el, margin) {\n        var width = el.offsetWidth;\n        if (margin) {\n            var style = getComputedStyle(el);\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n        }\n        return width;\n    };\n    DomHandler.getHorizontalPadding = function (el) {\n        var style = getComputedStyle(el);\n        return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    };\n    DomHandler.getHorizontalMargin = function (el) {\n        var style = getComputedStyle(el);\n        return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    };\n    DomHandler.innerWidth = function (el) {\n        var width = el.offsetWidth;\n        var style = getComputedStyle(el);\n        width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    };\n    DomHandler.width = function (el) {\n        var width = el.offsetWidth;\n        var style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    };\n    DomHandler.getInnerHeight = function (el) {\n        var height = el.offsetHeight;\n        var style = getComputedStyle(el);\n        height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n        return height;\n    };\n    DomHandler.getOuterHeight = function (el, margin) {\n        var height = el.offsetHeight;\n        if (margin) {\n            var style = getComputedStyle(el);\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n        }\n        return height;\n    };\n    DomHandler.getHeight = function (el) {\n        var height = el.offsetHeight;\n        var style = getComputedStyle(el);\n        height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n        return height;\n    };\n    DomHandler.getWidth = function (el) {\n        var width = el.offsetWidth;\n        var style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n        return width;\n    };\n    DomHandler.getViewport = function () {\n        var win = window, d = document, e = d.documentElement, g = d.getElementsByTagName('body')[0], w = win.innerWidth || e.clientWidth || g.clientWidth, h = win.innerHeight || e.clientHeight || g.clientHeight;\n        return { width: w, height: h };\n    };\n    DomHandler.getOffset = function (el) {\n        var rect = el.getBoundingClientRect();\n        return {\n            top: rect.top + document.body.scrollTop,\n            left: rect.left + document.body.scrollLeft\n        };\n    };\n    DomHandler.replaceElementWith = function (element, replacementElement) {\n        var parentNode = element.parentNode;\n        if (!parentNode)\n            throw \"Can't replace element\";\n        return parentNode.replaceChild(replacementElement, element);\n    };\n    DomHandler.getUserAgent = function () {\n        return navigator.userAgent;\n    };\n    DomHandler.isIE = function () {\n        var ua = window.navigator.userAgent;\n        var msie = ua.indexOf('MSIE ');\n        if (msie > 0) {\n            // IE 10 or older => return version number\n            return true;\n        }\n        var trident = ua.indexOf('Trident/');\n        if (trident > 0) {\n            // IE 11 => return version number\n            var rv = ua.indexOf('rv:');\n            return true;\n        }\n        var edge = ua.indexOf('Edge/');\n        if (edge > 0) {\n            // Edge (IE 12+) => return version number\n            return true;\n        }\n        // other browser\n        return false;\n    };\n    DomHandler.isIOS = function () {\n        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n    };\n    DomHandler.isAndroid = function () {\n        return /(android)/i.test(navigator.userAgent);\n    };\n    DomHandler.appendChild = function (element, target) {\n        if (this.isElement(target))\n            target.appendChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.appendChild(element);\n        else\n            throw 'Cannot append ' + target + ' to ' + element;\n    };\n    DomHandler.removeChild = function (element, target) {\n        if (this.isElement(target))\n            target.removeChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.removeChild(element);\n        else\n            throw 'Cannot remove ' + element + ' from ' + target;\n    };\n    DomHandler.isElement = function (obj) {\n        return (typeof HTMLElement === \"object\" ? obj instanceof HTMLElement :\n            obj && typeof obj === \"object\" && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === \"string\");\n    };\n    DomHandler.calculateScrollbarWidth = function (el) {\n        if (el) {\n            var style = getComputedStyle(el);\n            return (el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth));\n        }\n        else {\n            if (this.calculatedScrollbarWidth !== null)\n                return this.calculatedScrollbarWidth;\n            var scrollDiv = document.createElement(\"div\");\n            scrollDiv.className = \"ui-scrollbar-measure\";\n            document.body.appendChild(scrollDiv);\n            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            this.calculatedScrollbarWidth = scrollbarWidth;\n            return scrollbarWidth;\n        }\n    };\n    DomHandler.calculateScrollbarHeight = function () {\n        if (this.calculatedScrollbarHeight !== null)\n            return this.calculatedScrollbarHeight;\n        var scrollDiv = document.createElement(\"div\");\n        scrollDiv.className = \"ui-scrollbar-measure\";\n        document.body.appendChild(scrollDiv);\n        var scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n        document.body.removeChild(scrollDiv);\n        this.calculatedScrollbarWidth = scrollbarHeight;\n        return scrollbarHeight;\n    };\n    DomHandler.invokeElementMethod = function (element, methodName, args) {\n        element[methodName].apply(element, args);\n    };\n    DomHandler.clearSelection = function () {\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            }\n            else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n                window.getSelection().removeAllRanges();\n            }\n        }\n        else if (document['selection'] && document['selection'].empty) {\n            try {\n                document['selection'].empty();\n            }\n            catch (error) {\n                //ignore IE bug\n            }\n        }\n    };\n    DomHandler.getBrowser = function () {\n        if (!this.browser) {\n            var matched = this.resolveUserAgent();\n            this.browser = {};\n            if (matched.browser) {\n                this.browser[matched.browser] = true;\n                this.browser['version'] = matched.version;\n            }\n            if (this.browser['chrome']) {\n                this.browser['webkit'] = true;\n            }\n            else if (this.browser['webkit']) {\n                this.browser['safari'] = true;\n            }\n        }\n        return this.browser;\n    };\n    DomHandler.resolveUserAgent = function () {\n        var ua = navigator.userAgent.toLowerCase();\n        var match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(webkit)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(msie) ([\\w.]+)/.exec(ua) ||\n            ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) ||\n            [];\n        return {\n            browser: match[1] || \"\",\n            version: match[2] || \"0\"\n        };\n    };\n    DomHandler.isInteger = function (value) {\n        if (Number.isInteger) {\n            return Number.isInteger(value);\n        }\n        else {\n            return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n        }\n    };\n    DomHandler.isHidden = function (element) {\n        return element.offsetParent === null;\n    };\n    DomHandler.getFocusableElements = function (element) {\n        var focusableElements = DomHandler.find(element, \"button:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden]), \\n                [href][clientHeight][clientWidth]:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden]), \\n                input:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden]), select:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden]), \\n                textarea:not([tabindex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden]), [tabIndex]:not([tabIndex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden]), \\n                [contenteditable]:not([tabIndex = \\\"-1\\\"]):not([disabled]):not([style*=\\\"display:none\\\"]):not([hidden])\");\n        var visibleFocusableElements = [];\n        for (var _i = 0, focusableElements_1 = focusableElements; _i < focusableElements_1.length; _i++) {\n            var focusableElement = focusableElements_1[_i];\n            if (getComputedStyle(focusableElement).display != \"none\" && getComputedStyle(focusableElement).visibility != \"hidden\")\n                visibleFocusableElements.push(focusableElement);\n        }\n        return visibleFocusableElements;\n    };\n    DomHandler.zindex = 1000;\n    DomHandler.calculatedScrollbarWidth = null;\n    DomHandler.calculatedScrollbarHeight = null;\n    return DomHandler;\n}());\nexports.DomHandler = DomHandler;\n//# sourceMappingURL=domhandler.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar scrolling_1 = require(\"@angular/cdk/scrolling\");\nvar core_1 = require(\"@angular/core\");\nvar animations_1 = require(\"@angular/animations\");\nvar common_1 = require(\"@angular/common\");\nvar shared_1 = require(\"../common/shared\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar objectutils_1 = require(\"../utils/objectutils\");\nvar forms_1 = require(\"@angular/forms\");\nexports.DROPDOWN_VALUE_ACCESSOR = {\n    provide: forms_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return Dropdown; }),\n    multi: true\n};\nvar DropdownItem = /** @class */ (function () {\n    function DropdownItem() {\n        this.onClick = new core_1.EventEmitter();\n    }\n    DropdownItem.prototype.onOptionClick = function (event) {\n        this.onClick.emit({\n            originalEvent: event,\n            option: this.option\n        });\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], DropdownItem.prototype, \"option\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DropdownItem.prototype, \"selected\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DropdownItem.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], DropdownItem.prototype, \"visible\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], DropdownItem.prototype, \"itemSize\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", core_1.TemplateRef)\n    ], DropdownItem.prototype, \"template\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], DropdownItem.prototype, \"onClick\", void 0);\n    DropdownItem = __decorate([\n        core_1.Component({\n            selector: 'p-dropdownItem',\n            template: \"\\n        <li (click)=\\\"onOptionClick($event)\\\" role=\\\"option\\\"\\n            [attr.aria-label]=\\\"option.label\\\"\\n            [ngStyle]=\\\"{'height': itemSize + 'px'}\\\"\\n            [ngClass]=\\\"{'ui-dropdown-item ui-corner-all':true,\\n                                                'ui-state-highlight': selected,\\n                                                'ui-state-disabled':(option.disabled),\\n                                                'ui-dropdown-item-empty': !option.label||option.label.length === 0}\\\">\\n            <span *ngIf=\\\"!template\\\">{{option.label||'empty'}}</span>\\n            <ng-container *ngTemplateOutlet=\\\"template; context: {$implicit: option}\\\"></ng-container>\\n        </li>\\n    \"\n        })\n    ], DropdownItem);\n    return DropdownItem;\n}());\nexports.DropdownItem = DropdownItem;\nvar Dropdown = /** @class */ (function () {\n    function Dropdown(el, renderer, cd, zone) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.zone = zone;\n        this.scrollHeight = '200px';\n        this.filterBy = 'label';\n        this.resetFilterOnHide = false;\n        this.dropdownIcon = 'pi pi-chevron-down';\n        this.autoDisplayFirst = true;\n        this.emptyFilterMessage = 'No results found';\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.showTransitionOptions = '225ms ease-out';\n        this.hideTransitionOptions = '195ms ease-in';\n        this.onChange = new core_1.EventEmitter();\n        this.onFocus = new core_1.EventEmitter();\n        this.onBlur = new core_1.EventEmitter();\n        this.onClick = new core_1.EventEmitter();\n        this.onShow = new core_1.EventEmitter();\n        this.onHide = new core_1.EventEmitter();\n        this.onModelChange = function () { };\n        this.onModelTouched = function () { };\n    }\n    Object.defineProperty(Dropdown.prototype, \"autoWidth\", {\n        get: function () {\n            return this._autoWidth;\n        },\n        set: function (_autoWidth) {\n            this._autoWidth = _autoWidth;\n            console.log(\"Setting autoWidth has no effect as automatic width calculation is removed for better perfomance.\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Dropdown.prototype, \"disabled\", {\n        get: function () {\n            return this._disabled;\n        },\n        set: function (_disabled) {\n            if (_disabled)\n                this.focused = false;\n            this._disabled = _disabled;\n            this.cd.detectChanges();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Dropdown.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.templates.forEach(function (item) {\n            switch (item.getType()) {\n                case 'item':\n                    _this.itemTemplate = item.template;\n                    break;\n                case 'selectedItem':\n                    _this.selectedItemTemplate = item.template;\n                    break;\n                case 'group':\n                    _this.groupTemplate = item.template;\n                    break;\n                default:\n                    _this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    };\n    Dropdown.prototype.ngOnInit = function () {\n        this.optionsToDisplay = this.options;\n        this.updateSelectedOption(null);\n    };\n    Object.defineProperty(Dropdown.prototype, \"options\", {\n        get: function () {\n            return this._options;\n        },\n        set: function (val) {\n            var opts = this.optionLabel ? objectutils_1.ObjectUtils.generateSelectItems(val, this.optionLabel) : val;\n            this._options = opts;\n            this.optionsToDisplay = this._options;\n            this.updateSelectedOption(this.value);\n            this.optionsChanged = true;\n            if (this.filterValue && this.filterValue.length) {\n                this.activateFilter();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Dropdown.prototype.ngAfterViewInit = function () {\n        if (this.editable) {\n            this.updateEditableLabel();\n        }\n    };\n    Object.defineProperty(Dropdown.prototype, \"label\", {\n        get: function () {\n            return (this.selectedOption ? this.selectedOption.label : null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Dropdown.prototype.updateEditableLabel = function () {\n        if (this.editableInputViewChild && this.editableInputViewChild.nativeElement) {\n            this.editableInputViewChild.nativeElement.value = (this.selectedOption ? this.selectedOption.label : this.value || '');\n        }\n    };\n    Dropdown.prototype.onItemClick = function (event, index) {\n        var _this = this;\n        var option = event.option;\n        this.itemClick = true;\n        if (this.virtualScroll) {\n            this.virtualScrollSelectedIndex = index;\n        }\n        if (!option.disabled) {\n            this.selectItem(event, option);\n            this.focusViewChild.nativeElement.focus();\n            this.filled = true;\n        }\n        setTimeout(function () {\n            _this.hide();\n        }, 150);\n    };\n    Dropdown.prototype.selectItem = function (event, option) {\n        if (this.selectedOption != option) {\n            this.selectedOption = option;\n            this.value = option.value;\n            this.onModelChange(this.value);\n            this.updateEditableLabel();\n            this.onChange.emit({\n                originalEvent: event.originalEvent,\n                value: this.value\n            });\n        }\n    };\n    Dropdown.prototype.ngAfterViewChecked = function () {\n        var _this = this;\n        if (this.optionsChanged && this.overlayVisible) {\n            this.optionsChanged = false;\n            this.zone.runOutsideAngular(function () {\n                setTimeout(function () {\n                    _this.alignOverlay();\n                }, 1);\n            });\n        }\n        if (this.selectedOptionUpdated && this.itemsWrapper) {\n            var selectedItem = domhandler_1.DomHandler.findSingle(this.overlay, 'li.ui-state-highlight');\n            if (selectedItem) {\n                domhandler_1.DomHandler.scrollInView(this.itemsWrapper, domhandler_1.DomHandler.findSingle(this.overlay, 'li.ui-state-highlight'));\n            }\n            this.selectedOptionUpdated = false;\n        }\n    };\n    Dropdown.prototype.writeValue = function (value) {\n        if (this.filter) {\n            this.resetFilter();\n        }\n        this.value = value;\n        this.updateSelectedOption(value);\n        this.updateEditableLabel();\n        this.updateFilledState();\n        this.cd.markForCheck();\n    };\n    Dropdown.prototype.resetFilter = function () {\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n            this.filterValue = null;\n            this.filterViewChild.nativeElement.value = '';\n        }\n        this.optionsToDisplay = this.options;\n    };\n    Dropdown.prototype.updateSelectedOption = function (val) {\n        this.selectedOption = this.findOption(val, this.optionsToDisplay);\n        if (this.autoDisplayFirst && !this.placeholder && !this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length && !this.editable) {\n            this.selectedOption = this.optionsToDisplay[0];\n        }\n        this.selectedOptionUpdated = true;\n    };\n    Dropdown.prototype.registerOnChange = function (fn) {\n        this.onModelChange = fn;\n    };\n    Dropdown.prototype.registerOnTouched = function (fn) {\n        this.onModelTouched = fn;\n    };\n    Dropdown.prototype.setDisabledState = function (val) {\n        this.disabled = val;\n    };\n    Dropdown.prototype.onMouseclick = function (event) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.onClick.emit(event);\n        this.selfClick = true;\n        this.clearClick = domhandler_1.DomHandler.hasClass(event.target, 'ui-dropdown-clear-icon');\n        if (!this.itemClick && !this.clearClick) {\n            this.focusViewChild.nativeElement.focus();\n            if (this.overlayVisible)\n                this.hide();\n            else\n                this.show();\n            this.cd.detectChanges();\n        }\n    };\n    Dropdown.prototype.onEditableInputClick = function (event) {\n        this.itemClick = true;\n        this.bindDocumentClickListener();\n    };\n    Dropdown.prototype.onEditableInputFocus = function (event) {\n        this.focused = true;\n        this.hide();\n        this.onFocus.emit(event);\n    };\n    Dropdown.prototype.onEditableInputChange = function (event) {\n        this.value = event.target.value;\n        this.updateSelectedOption(this.value);\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n    };\n    Dropdown.prototype.show = function () {\n        this.overlayVisible = true;\n    };\n    Dropdown.prototype.onOverlayAnimationStart = function (event) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                this.itemsWrapper = domhandler_1.DomHandler.findSingle(this.overlay, '.ui-dropdown-items-wrapper');\n                this.appendOverlay();\n                if (this.autoZIndex) {\n                    this.overlay.style.zIndex = String(this.baseZIndex + (++domhandler_1.DomHandler.zindex));\n                }\n                this.alignOverlay();\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                if (this.options && this.options.length) {\n                    if (!this.virtualScroll) {\n                        var selectedListItem = domhandler_1.DomHandler.findSingle(this.itemsWrapper, '.ui-dropdown-item.ui-state-highlight');\n                        if (selectedListItem) {\n                            domhandler_1.DomHandler.scrollInView(this.itemsWrapper, selectedListItem);\n                        }\n                    }\n                }\n                if (this.filterViewChild && this.filterViewChild.nativeElement) {\n                    this.filterViewChild.nativeElement.focus();\n                }\n                this.onShow.emit(event);\n                break;\n            case 'void':\n                this.onOverlayHide();\n                break;\n        }\n    };\n    Dropdown.prototype.scrollToSelectedVirtualScrollElement = function (event) {\n        var _this = this;\n        if (!this.virtualAutoScrolled) {\n            if (this.filter && !this.resetFilterOnHide) {\n                var index = this.optionsToDisplay.findIndex(function (option) { return option.value === _this.value; });\n                if (event == 0 && index > 0) {\n                    this.viewPort.scrollToIndex(index, 'auto');\n                }\n            }\n            else {\n                if (event == 0 && this.virtualScrollSelectedIndex > 0) {\n                    this.viewPort.scrollToIndex(this.virtualScrollSelectedIndex, 'auto');\n                }\n            }\n            this.virtualAutoScrolled = true;\n        }\n    };\n    Dropdown.prototype.appendOverlay = function () {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                domhandler_1.DomHandler.appendChild(this.overlay, this.appendTo);\n            this.overlay.style.minWidth = domhandler_1.DomHandler.getWidth(this.containerViewChild.nativeElement) + 'px';\n        }\n    };\n    Dropdown.prototype.restoreOverlayAppend = function () {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    };\n    Dropdown.prototype.hide = function () {\n        this.overlayVisible = false;\n        if (this.filter && this.resetFilterOnHide) {\n            this.resetFilter();\n        }\n        if (this.virtualScroll) {\n            this.virtualAutoScrolled = false;\n        }\n        this.cd.markForCheck();\n        this.onHide.emit(event);\n    };\n    Dropdown.prototype.alignOverlay = function () {\n        if (this.overlay) {\n            if (this.appendTo)\n                domhandler_1.DomHandler.absolutePosition(this.overlay, this.containerViewChild.nativeElement);\n            else\n                domhandler_1.DomHandler.relativePosition(this.overlay, this.containerViewChild.nativeElement);\n        }\n    };\n    Dropdown.prototype.onInputFocus = function (event) {\n        this.focused = true;\n        this.onFocus.emit(event);\n    };\n    Dropdown.prototype.onInputBlur = function (event) {\n        this.focused = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    };\n    Dropdown.prototype.findPrevEnabledOption = function (index) {\n        var prevEnabledOption;\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\n            for (var i = (index - 1); 0 <= i; i--) {\n                var option = this.optionsToDisplay[i];\n                if (option.disabled) {\n                    continue;\n                }\n                else {\n                    prevEnabledOption = option;\n                    break;\n                }\n            }\n            if (!prevEnabledOption) {\n                for (var i = this.optionsToDisplay.length - 1; i >= index; i--) {\n                    var option = this.optionsToDisplay[i];\n                    if (option.disabled) {\n                        continue;\n                    }\n                    else {\n                        prevEnabledOption = option;\n                        break;\n                    }\n                }\n            }\n        }\n        return prevEnabledOption;\n    };\n    Dropdown.prototype.findNextEnabledOption = function (index) {\n        var nextEnabledOption;\n        if (this.optionsToDisplay && this.optionsToDisplay.length) {\n            for (var i = (index + 1); index < (this.optionsToDisplay.length - 1); i++) {\n                var option = this.optionsToDisplay[i];\n                if (option.disabled) {\n                    continue;\n                }\n                else {\n                    nextEnabledOption = option;\n                    break;\n                }\n            }\n            if (!nextEnabledOption) {\n                for (var i = 0; i < index; i++) {\n                    var option = this.optionsToDisplay[i];\n                    if (option.disabled) {\n                        continue;\n                    }\n                    else {\n                        nextEnabledOption = option;\n                        break;\n                    }\n                }\n            }\n        }\n        return nextEnabledOption;\n    };\n    Dropdown.prototype.onKeydown = function (event, search) {\n        if (this.readonly || !this.optionsToDisplay || this.optionsToDisplay.length === null) {\n            return;\n        }\n        switch (event.which) {\n            //down\n            case 40:\n                if (!this.overlayVisible && event.altKey) {\n                    this.show();\n                }\n                else {\n                    if (this.group) {\n                        var selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\n                        if (selectedItemIndex !== -1) {\n                            var nextItemIndex = selectedItemIndex.itemIndex + 1;\n                            if (nextItemIndex < (this.optionsToDisplay[selectedItemIndex.groupIndex].items.length)) {\n                                this.selectItem(event, this.optionsToDisplay[selectedItemIndex.groupIndex].items[nextItemIndex]);\n                                this.selectedOptionUpdated = true;\n                            }\n                            else if (this.optionsToDisplay[selectedItemIndex.groupIndex + 1]) {\n                                this.selectItem(event, this.optionsToDisplay[selectedItemIndex.groupIndex + 1].items[0]);\n                                this.selectedOptionUpdated = true;\n                            }\n                        }\n                        else {\n                            this.selectItem(event, this.optionsToDisplay[0].items[0]);\n                        }\n                    }\n                    else {\n                        var selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\n                        var nextEnabledOption = this.findNextEnabledOption(selectedItemIndex);\n                        if (nextEnabledOption) {\n                            this.selectItem(event, nextEnabledOption);\n                            this.selectedOptionUpdated = true;\n                        }\n                    }\n                }\n                event.preventDefault();\n                break;\n            //up\n            case 38:\n                if (this.group) {\n                    var selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\n                    if (selectedItemIndex !== -1) {\n                        var prevItemIndex = selectedItemIndex.itemIndex - 1;\n                        if (prevItemIndex >= 0) {\n                            this.selectItem(event, this.optionsToDisplay[selectedItemIndex.groupIndex].items[prevItemIndex]);\n                            this.selectedOptionUpdated = true;\n                        }\n                        else if (prevItemIndex < 0) {\n                            var prevGroup = this.optionsToDisplay[selectedItemIndex.groupIndex - 1];\n                            if (prevGroup) {\n                                this.selectItem(event, prevGroup.items[prevGroup.items.length - 1]);\n                                this.selectedOptionUpdated = true;\n                            }\n                        }\n                    }\n                }\n                else {\n                    var selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\n                    var prevEnabledOption = this.findPrevEnabledOption(selectedItemIndex);\n                    if (prevEnabledOption) {\n                        this.selectItem(event, prevEnabledOption);\n                        this.selectedOptionUpdated = true;\n                    }\n                }\n                event.preventDefault();\n                break;\n            //space\n            case 32:\n            case 32:\n                if (!this.overlayVisible) {\n                    this.show();\n                    event.preventDefault();\n                }\n                break;\n            //enter\n            case 13:\n                if (!this.filter || (this.optionsToDisplay && this.optionsToDisplay.length > 0)) {\n                    this.hide();\n                }\n                event.preventDefault();\n                break;\n            //escape and tab\n            case 27:\n            case 9:\n                this.hide();\n                break;\n            //search item based on keyboard input\n            default:\n                if (search) {\n                    this.search(event);\n                }\n                break;\n        }\n    };\n    Dropdown.prototype.search = function (event) {\n        var _this = this;\n        if (this.searchTimeout) {\n            clearTimeout(this.searchTimeout);\n        }\n        var char = String.fromCharCode(event.keyCode);\n        this.previousSearchChar = this.currentSearchChar;\n        this.currentSearchChar = char;\n        if (this.previousSearchChar === this.currentSearchChar)\n            this.searchValue = this.currentSearchChar;\n        else\n            this.searchValue = this.searchValue ? this.searchValue + char : char;\n        var newOption;\n        if (this.group) {\n            var searchIndex = this.selectedOption ? this.findOptionGroupIndex(this.selectedOption.value, this.optionsToDisplay) : { groupIndex: 0, itemIndex: 0 };\n            newOption = this.searchOptionWithinGroup(searchIndex);\n        }\n        else {\n            var searchIndex = this.selectedOption ? this.findOptionIndex(this.selectedOption.value, this.optionsToDisplay) : -1;\n            newOption = this.searchOption(++searchIndex);\n        }\n        if (newOption) {\n            this.selectItem(event, newOption);\n            this.selectedOptionUpdated = true;\n        }\n        this.searchTimeout = setTimeout(function () {\n            _this.searchValue = null;\n        }, 250);\n    };\n    Dropdown.prototype.searchOption = function (index) {\n        var option;\n        if (this.searchValue) {\n            option = this.searchOptionInRange(index, this.optionsToDisplay.length);\n            if (!option) {\n                option = this.searchOptionInRange(0, index);\n            }\n        }\n        return option;\n    };\n    Dropdown.prototype.searchOptionInRange = function (start, end) {\n        for (var i = start; i < end; i++) {\n            var opt = this.optionsToDisplay[i];\n            if (opt.label.toLowerCase().startsWith(this.searchValue.toLowerCase())) {\n                return opt;\n            }\n        }\n        return null;\n    };\n    Dropdown.prototype.searchOptionWithinGroup = function (index) {\n        var option;\n        if (this.searchValue) {\n            for (var i = index.groupIndex; i < this.optionsToDisplay.length; i++) {\n                for (var j = (index.groupIndex === i) ? (index.itemIndex + 1) : 0; j < this.optionsToDisplay[i].items.length; j++) {\n                    var opt = this.optionsToDisplay[i].items[j];\n                    if (opt.label.toLowerCase().startsWith(this.searchValue.toLowerCase())) {\n                        return opt;\n                    }\n                }\n            }\n            if (!option) {\n                for (var i = 0; i <= index.groupIndex; i++) {\n                    for (var j = 0; j < ((index.groupIndex === i) ? index.itemIndex : this.optionsToDisplay[i].items.length); j++) {\n                        var opt = this.optionsToDisplay[i].items[j];\n                        if (opt.label.toLowerCase().startsWith(this.searchValue.toLowerCase())) {\n                            return opt;\n                        }\n                    }\n                }\n            }\n        }\n        return null;\n    };\n    Dropdown.prototype.findOptionIndex = function (val, opts) {\n        var index = -1;\n        if (opts) {\n            for (var i = 0; i < opts.length; i++) {\n                if ((val == null && opts[i].value == null) || objectutils_1.ObjectUtils.equals(val, opts[i].value, this.dataKey)) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    Dropdown.prototype.findOptionGroupIndex = function (val, opts) {\n        var groupIndex, itemIndex;\n        if (opts) {\n            for (var i = 0; i < opts.length; i++) {\n                groupIndex = i;\n                itemIndex = this.findOptionIndex(val, opts[i].items);\n                if (itemIndex !== -1) {\n                    break;\n                }\n            }\n        }\n        if (itemIndex !== -1) {\n            return { groupIndex: groupIndex, itemIndex: itemIndex };\n        }\n        else {\n            return -1;\n        }\n    };\n    Dropdown.prototype.findOption = function (val, opts, inGroup) {\n        if (this.group && !inGroup) {\n            var opt = void 0;\n            if (opts && opts.length) {\n                for (var _i = 0, opts_1 = opts; _i < opts_1.length; _i++) {\n                    var optgroup = opts_1[_i];\n                    opt = this.findOption(val, optgroup.items, true);\n                    if (opt) {\n                        break;\n                    }\n                }\n            }\n            return opt;\n        }\n        else {\n            var index = this.findOptionIndex(val, opts);\n            return (index != -1) ? opts[index] : null;\n        }\n    };\n    Dropdown.prototype.onFilter = function (event) {\n        var inputValue = event.target.value;\n        if (inputValue && inputValue.length) {\n            this.filterValue = inputValue;\n            this.activateFilter();\n        }\n        else {\n            this.filterValue = null;\n            this.optionsToDisplay = this.options;\n        }\n        this.optionsChanged = true;\n    };\n    Dropdown.prototype.activateFilter = function () {\n        var searchFields = this.filterBy.split(',');\n        if (this.options && this.options.length) {\n            if (this.group) {\n                var filteredGroups = [];\n                for (var _i = 0, _a = this.options; _i < _a.length; _i++) {\n                    var optgroup = _a[_i];\n                    var filteredSubOptions = objectutils_1.ObjectUtils.filter(optgroup.items, searchFields, this.filterValue);\n                    if (filteredSubOptions && filteredSubOptions.length) {\n                        filteredGroups.push({\n                            label: optgroup.label,\n                            value: optgroup.value,\n                            items: filteredSubOptions\n                        });\n                    }\n                }\n                this.optionsToDisplay = filteredGroups;\n            }\n            else {\n                this.optionsToDisplay = objectutils_1.ObjectUtils.filter(this.options, searchFields, this.filterValue);\n            }\n            this.optionsChanged = true;\n        }\n    };\n    Dropdown.prototype.applyFocus = function () {\n        if (this.editable)\n            domhandler_1.DomHandler.findSingle(this.el.nativeElement, '.ui-dropdown-label.ui-inputtext').focus();\n        else\n            domhandler_1.DomHandler.findSingle(this.el.nativeElement, 'input[readonly]').focus();\n    };\n    Dropdown.prototype.focus = function () {\n        this.applyFocus();\n    };\n    Dropdown.prototype.bindDocumentClickListener = function () {\n        var _this = this;\n        if (!this.documentClickListener) {\n            this.documentClickListener = this.renderer.listen('document', 'click', function () {\n                if (!_this.selfClick && !_this.itemClick) {\n                    _this.hide();\n                    _this.unbindDocumentClickListener();\n                }\n                _this.clearClickState();\n                _this.cd.markForCheck();\n            });\n        }\n    };\n    Dropdown.prototype.clearClickState = function () {\n        this.selfClick = false;\n        this.itemClick = false;\n    };\n    Dropdown.prototype.unbindDocumentClickListener = function () {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    };\n    Dropdown.prototype.bindDocumentResizeListener = function () {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    };\n    Dropdown.prototype.unbindDocumentResizeListener = function () {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    };\n    Dropdown.prototype.onWindowResize = function () {\n        if (!domhandler_1.DomHandler.isAndroid()) {\n            this.hide();\n        }\n    };\n    Dropdown.prototype.updateFilledState = function () {\n        this.filled = (this.selectedOption != null);\n    };\n    Dropdown.prototype.clear = function (event) {\n        this.clearClick = true;\n        this.value = null;\n        this.onModelChange(this.value);\n        this.onChange.emit({\n            originalEvent: event,\n            value: this.value\n        });\n        this.updateSelectedOption(this.value);\n        this.updateEditableLabel();\n        this.updateFilledState();\n    };\n    Dropdown.prototype.onOverlayHide = function () {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.overlay = null;\n        this.itemsWrapper = null;\n    };\n    Dropdown.prototype.ngOnDestroy = function () {\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"scrollHeight\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Dropdown.prototype, \"filter\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"name\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Dropdown.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Dropdown.prototype, \"panelStyle\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"panelStyleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Dropdown.prototype, \"readonly\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Dropdown.prototype, \"required\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Dropdown.prototype, \"editable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Dropdown.prototype, \"appendTo\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Dropdown.prototype, \"tabindex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"placeholder\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"filterPlaceholder\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"inputId\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"selectId\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"dataKey\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"filterBy\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Dropdown.prototype, \"autofocus\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Dropdown.prototype, \"resetFilterOnHide\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"dropdownIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"optionLabel\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Dropdown.prototype, \"autoDisplayFirst\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Dropdown.prototype, \"group\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Dropdown.prototype, \"showClear\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"emptyFilterMessage\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Dropdown.prototype, \"virtualScroll\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Dropdown.prototype, \"itemSize\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Dropdown.prototype, \"autoZIndex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Dropdown.prototype, \"baseZIndex\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"showTransitionOptions\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"hideTransitionOptions\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Dropdown.prototype, \"ariaFilterLabel\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Dropdown.prototype, \"onChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Dropdown.prototype, \"onFocus\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Dropdown.prototype, \"onBlur\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Dropdown.prototype, \"onClick\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Dropdown.prototype, \"onShow\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Dropdown.prototype, \"onHide\", void 0);\n    __decorate([\n        core_1.ViewChild('container', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], Dropdown.prototype, \"containerViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('filter', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], Dropdown.prototype, \"filterViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('in', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], Dropdown.prototype, \"focusViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild(scrolling_1.CdkVirtualScrollViewport, { static: false }),\n        __metadata(\"design:type\", scrolling_1.CdkVirtualScrollViewport)\n    ], Dropdown.prototype, \"viewPort\", void 0);\n    __decorate([\n        core_1.ViewChild('editableInput', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], Dropdown.prototype, \"editableInputViewChild\", void 0);\n    __decorate([\n        core_1.ContentChildren(shared_1.PrimeTemplate),\n        __metadata(\"design:type\", core_1.QueryList)\n    ], Dropdown.prototype, \"templates\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], Dropdown.prototype, \"autoWidth\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], Dropdown.prototype, \"disabled\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], Dropdown.prototype, \"options\", null);\n    Dropdown = __decorate([\n        core_1.Component({\n            selector: 'p-dropdown',\n            template: \"\\n         <div #container [ngClass]=\\\"{'ui-dropdown ui-widget ui-state-default ui-corner-all ui-helper-clearfix':true,\\n            'ui-state-disabled':disabled, 'ui-dropdown-open':overlayVisible, 'ui-state-focus':focused, 'ui-dropdown-clearable': showClear && !disabled}\\\"\\n            (click)=\\\"onMouseclick($event)\\\" [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #in [attr.id]=\\\"inputId\\\" type=\\\"text\\\" [attr.aria-label]=\\\"selectedOption ? selectedOption.label : ' '\\\" readonly (focus)=\\\"onInputFocus($event)\\\" aria-haspopup=\\\"listbox\\\"\\n                    (blur)=\\\"onInputBlur($event)\\\" (keydown)=\\\"onKeydown($event, true)\\\" [disabled]=\\\"disabled\\\" [attr.tabindex]=\\\"tabindex\\\" [attr.autofocus]=\\\"autofocus\\\">\\n            </div>\\n            <div class=\\\"ui-helper-hidden-accessible ui-dropdown-hidden-select\\\">\\n                <select [attr.required]=\\\"required\\\" [attr.name]=\\\"name\\\" tabindex=\\\"-1\\\" aria-hidden=\\\"true\\\">\\n                    <option *ngIf=\\\"placeholder\\\" value=\\\"\\\">{{placeholder}}</option>\\n                    <option *ngIf=\\\"selectedOption\\\" [value]=\\\"selectedOption.value\\\" [selected]=\\\"true\\\">{{selectedOption.label}}</option>\\n                </select>\\n            </div>\\n            <label [ngClass]=\\\"{'ui-dropdown-label ui-inputtext ui-corner-all':true,'ui-dropdown-label-empty':(label == null || label.length === 0)}\\\" *ngIf=\\\"!editable && (label != null)\\\">\\n                <ng-container *ngIf=\\\"!selectedItemTemplate\\\">{{label||'empty'}}</ng-container>\\n                <ng-container *ngTemplateOutlet=\\\"selectedItemTemplate; context: {$implicit: selectedOption}\\\"></ng-container>\\n            </label>\\n            <label [ngClass]=\\\"{'ui-dropdown-label ui-inputtext ui-corner-all ui-placeholder':true,'ui-dropdown-label-empty': (placeholder == null || placeholder.length === 0)}\\\" *ngIf=\\\"!editable && (label == null)\\\">{{placeholder||'empty'}}</label>\\n            <input #editableInput type=\\\"text\\\" [attr.aria-label]=\\\"selectedOption ? selectedOption.label : ' '\\\" class=\\\"ui-dropdown-label ui-inputtext ui-corner-all\\\" *ngIf=\\\"editable\\\" [disabled]=\\\"disabled\\\" [attr.placeholder]=\\\"placeholder\\\"\\n                        (click)=\\\"onEditableInputClick($event)\\\" (input)=\\\"onEditableInputChange($event)\\\" (focus)=\\\"onEditableInputFocus($event)\\\" (blur)=\\\"onInputBlur($event)\\\">\\n            <i class=\\\"ui-dropdown-clear-icon pi pi-times\\\" (click)=\\\"clear($event)\\\" *ngIf=\\\"value != null && showClear && !disabled\\\"></i>\\n            <div class=\\\"ui-dropdown-trigger ui-state-default ui-corner-right\\\">\\n                <span class=\\\"ui-dropdown-trigger-icon ui-clickable\\\" [ngClass]=\\\"dropdownIcon\\\"></span>\\n            </div>\\n            <div *ngIf=\\\"overlayVisible\\\" [ngClass]=\\\"'ui-dropdown-panel  ui-widget ui-widget-content ui-corner-all ui-shadow'\\\" [@overlayAnimation]=\\\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\\\" (@overlayAnimation.start)=\\\"onOverlayAnimationStart($event)\\\" [ngStyle]=\\\"panelStyle\\\" [class]=\\\"panelStyleClass\\\">\\n                <div *ngIf=\\\"filter\\\" class=\\\"ui-dropdown-filter-container\\\" (click)=\\\"$event.stopPropagation()\\\">\\n                    <input #filter type=\\\"text\\\" autocomplete=\\\"off\\\" [value]=\\\"filterValue||''\\\" class=\\\"ui-dropdown-filter ui-inputtext ui-widget ui-state-default ui-corner-all\\\" [attr.placeholder]=\\\"filterPlaceholder\\\"\\n                    (keydown.enter)=\\\"$event.preventDefault()\\\" (keydown)=\\\"onKeydown($event, false)\\\" (input)=\\\"onFilter($event)\\\" [attr.aria-label]=\\\"ariaFilterLabel\\\">\\n                    <span class=\\\"ui-dropdown-filter-icon pi pi-search\\\"></span>\\n                </div>\\n                <div class=\\\"ui-dropdown-items-wrapper\\\" [style.max-height]=\\\"virtualScroll ? 'auto' : (scrollHeight||'auto')\\\">\\n                    <ul class=\\\"ui-dropdown-items ui-dropdown-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\\\" role=\\\"listbox\\\">\\n                        <ng-container *ngIf=\\\"group\\\">\\n                            <ng-template ngFor let-optgroup [ngForOf]=\\\"optionsToDisplay\\\">\\n                                <li class=\\\"ui-dropdown-item-group\\\">\\n                                    <span *ngIf=\\\"!groupTemplate\\\">{{optgroup.label||'empty'}}</span>\\n                                    <ng-container *ngTemplateOutlet=\\\"groupTemplate; context: {$implicit: optgroup}\\\"></ng-container>\\n                                </li>\\n                                <ng-container *ngTemplateOutlet=\\\"itemslist; context: {$implicit: optgroup.items, selectedOption: selectedOption}\\\"></ng-container>\\n                            </ng-template>\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"!group\\\">\\n                            <ng-container *ngTemplateOutlet=\\\"itemslist; context: {$implicit: optionsToDisplay, selectedOption: selectedOption}\\\"></ng-container>\\n                        </ng-container>\\n                        <ng-template #itemslist let-options let-selectedOption=\\\"selectedOption\\\">\\n\\n                            <ng-container *ngIf=\\\"!virtualScroll; else virtualScrollList\\\">\\n                                <ng-template ngFor let-option let-i=\\\"index\\\" [ngForOf]=\\\"options\\\">\\n                                    <p-dropdownItem [option]=\\\"option\\\" [selected]=\\\"selectedOption == option\\\" \\n                                                    (onClick)=\\\"onItemClick($event,i)\\\"\\n                                                    [template]=\\\"itemTemplate\\\"></p-dropdownItem>\\n                                </ng-template>\\n                            </ng-container>\\n                            <ng-template #virtualScrollList>\\n                                <cdk-virtual-scroll-viewport (scrolledIndexChange)=\\\"scrollToSelectedVirtualScrollElement($event)\\\" #viewport [ngStyle]=\\\"{'height': scrollHeight}\\\" [itemSize]=\\\"itemSize\\\" *ngIf=\\\"virtualScroll && optionsToDisplay && optionsToDisplay.length\\\">\\n                                    <ng-container *cdkVirtualFor=\\\"let option of options; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\\\">         \\n                                        <p-dropdownItem [option]=\\\"option\\\" [selected]=\\\"selectedOption == option\\\"\\n                                                                   (onClick)=\\\"onItemClick($event,i)\\\"\\n                                                                   [template]=\\\"itemTemplate\\\"></p-dropdownItem>\\n                                    </ng-container>\\n                                </cdk-virtual-scroll-viewport>\\n                            </ng-template>\\n                        </ng-template>\\n                        <li *ngIf=\\\"filter && optionsToDisplay && optionsToDisplay.length === 0\\\" class=\\\"ui-dropdown-empty-message\\\">{{emptyFilterMessage}}</li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n    \",\n            animations: [\n                animations_1.trigger('overlayAnimation', [\n                    animations_1.state('void', animations_1.style({\n                        transform: 'translateY(5%)',\n                        opacity: 0\n                    })),\n                    animations_1.state('visible', animations_1.style({\n                        transform: 'translateY(0)',\n                        opacity: 1\n                    })),\n                    animations_1.transition('void => visible', animations_1.animate('{{showTransitionParams}}')),\n                    animations_1.transition('visible => void', animations_1.animate('{{hideTransitionParams}}'))\n                ])\n            ],\n            host: {\n                '[class.ui-inputwrapper-filled]': 'filled',\n                '[class.ui-inputwrapper-focus]': 'focused'\n            },\n            providers: [exports.DROPDOWN_VALUE_ACCESSOR]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.Renderer2, core_1.ChangeDetectorRef, core_1.NgZone])\n    ], Dropdown);\n    return Dropdown;\n}());\nexports.Dropdown = Dropdown;\nvar DropdownModule = /** @class */ (function () {\n    function DropdownModule() {\n    }\n    DropdownModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule, shared_1.SharedModule, scrolling_1.ScrollingModule],\n            exports: [Dropdown, shared_1.SharedModule, scrolling_1.ScrollingModule],\n            declarations: [Dropdown, DropdownItem]\n        })\n    ], DropdownModule);\n    return DropdownModule;\n}());\nexports.DropdownModule = DropdownModule;\n//# sourceMappingURL=dropdown.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar forms_1 = require(\"@angular/forms\");\nvar dropdown_1 = require(\"../dropdown/dropdown\");\nvar shared_1 = require(\"../common/shared\");\nvar Paginator = /** @class */ (function () {\n    function Paginator(cd) {\n        this.cd = cd;\n        this.pageLinkSize = 5;\n        this.onPageChange = new core_1.EventEmitter();\n        this.alwaysShow = true;\n        this.dropdownScrollHeight = '200px';\n        this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n        this._totalRecords = 0;\n        this._first = 0;\n        this._rows = 0;\n    }\n    Paginator.prototype.ngOnInit = function () {\n        this.updatePaginatorState();\n    };\n    Object.defineProperty(Paginator.prototype, \"totalRecords\", {\n        get: function () {\n            return this._totalRecords;\n        },\n        set: function (val) {\n            this._totalRecords = val;\n            this.updatePageLinks();\n            this.updatePaginatorState();\n            this.updateFirst();\n            this.updateRowsPerPageOptions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Paginator.prototype, \"first\", {\n        get: function () {\n            return this._first;\n        },\n        set: function (val) {\n            this._first = val;\n            this.updatePageLinks();\n            this.updatePaginatorState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Paginator.prototype, \"rows\", {\n        get: function () {\n            return this._rows;\n        },\n        set: function (val) {\n            this._rows = val;\n            this.updatePageLinks();\n            this.updatePaginatorState();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Paginator.prototype, \"rowsPerPageOptions\", {\n        get: function () {\n            return this._rowsPerPageOptions;\n        },\n        set: function (val) {\n            this._rowsPerPageOptions = val;\n            this.updateRowsPerPageOptions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Paginator.prototype.updateRowsPerPageOptions = function () {\n        if (this.rowsPerPageOptions) {\n            this.rowsPerPageItems = [];\n            for (var _i = 0, _a = this.rowsPerPageOptions; _i < _a.length; _i++) {\n                var opt = _a[_i];\n                if (typeof opt == 'object' && opt['showAll']) {\n                    this.rowsPerPageItems.push({ label: opt['showAll'], value: this.totalRecords });\n                }\n                else {\n                    this.rowsPerPageItems.push({ label: String(opt), value: opt });\n                }\n            }\n        }\n    };\n    Paginator.prototype.isFirstPage = function () {\n        return this.getPage() === 0;\n    };\n    Paginator.prototype.isLastPage = function () {\n        return this.getPage() === this.getPageCount() - 1;\n    };\n    Paginator.prototype.getPageCount = function () {\n        return Math.ceil(this.totalRecords / this.rows) || 1;\n    };\n    Paginator.prototype.calculatePageLinkBoundaries = function () {\n        var numberOfPages = this.getPageCount(), visiblePages = Math.min(this.pageLinkSize, numberOfPages);\n        //calculate range, keep current in middle if necessary\n        var start = Math.max(0, Math.ceil(this.getPage() - ((visiblePages) / 2))), end = Math.min(numberOfPages - 1, start + visiblePages - 1);\n        //check when approaching to last page\n        var delta = this.pageLinkSize - (end - start + 1);\n        start = Math.max(0, start - delta);\n        return [start, end];\n    };\n    Paginator.prototype.updatePageLinks = function () {\n        this.pageLinks = [];\n        var boundaries = this.calculatePageLinkBoundaries(), start = boundaries[0], end = boundaries[1];\n        for (var i = start; i <= end; i++) {\n            this.pageLinks.push(i + 1);\n        }\n    };\n    Paginator.prototype.changePage = function (p) {\n        var pc = this.getPageCount();\n        if (p >= 0 && p < pc) {\n            this.first = this.rows * p;\n            var state = {\n                page: p,\n                first: this.first,\n                rows: this.rows,\n                pageCount: pc\n            };\n            this.updatePageLinks();\n            this.onPageChange.emit(state);\n            this.updatePaginatorState();\n        }\n    };\n    Paginator.prototype.updateFirst = function () {\n        var _this = this;\n        var page = this.getPage();\n        if (page > 0 && (this.first >= this.totalRecords)) {\n            Promise.resolve(null).then(function () { return _this.changePage(page - 1); });\n        }\n    };\n    Paginator.prototype.getPage = function () {\n        return Math.floor(this.first / this.rows);\n    };\n    Paginator.prototype.changePageToFirst = function (event) {\n        if (!this.isFirstPage()) {\n            this.changePage(0);\n        }\n        event.preventDefault();\n    };\n    Paginator.prototype.changePageToPrev = function (event) {\n        this.changePage(this.getPage() - 1);\n        event.preventDefault();\n    };\n    Paginator.prototype.changePageToNext = function (event) {\n        this.changePage(this.getPage() + 1);\n        event.preventDefault();\n    };\n    Paginator.prototype.changePageToLast = function (event) {\n        if (!this.isLastPage()) {\n            this.changePage(this.getPageCount() - 1);\n        }\n        event.preventDefault();\n    };\n    Paginator.prototype.onPageLinkClick = function (event, page) {\n        this.changePage(page);\n        event.preventDefault();\n    };\n    Paginator.prototype.onRppChange = function (event) {\n        this.changePage(this.getPage());\n    };\n    Paginator.prototype.updatePaginatorState = function () {\n        this.paginatorState = {\n            page: this.getPage(),\n            pageCount: this.getPageCount(),\n            rows: this.rows,\n            first: this.first,\n            totalRecords: this.totalRecords\n        };\n    };\n    Object.defineProperty(Paginator.prototype, \"currentPageReport\", {\n        get: function () {\n            return this.currentPageReportTemplate\n                .replace(\"{currentPage}\", (this.getPage() + 1).toString())\n                .replace(\"{totalPages}\", this.getPageCount().toString());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Paginator.prototype, \"pageLinkSize\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Paginator.prototype, \"onPageChange\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Paginator.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Paginator.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Paginator.prototype, \"alwaysShow\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", core_1.TemplateRef)\n    ], Paginator.prototype, \"templateLeft\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", core_1.TemplateRef)\n    ], Paginator.prototype, \"templateRight\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Paginator.prototype, \"dropdownAppendTo\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Paginator.prototype, \"dropdownScrollHeight\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Paginator.prototype, \"currentPageReportTemplate\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Paginator.prototype, \"showCurrentPageReport\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], Paginator.prototype, \"totalRecords\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], Paginator.prototype, \"first\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], Paginator.prototype, \"rows\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], Paginator.prototype, \"rowsPerPageOptions\", null);\n    Paginator = __decorate([\n        core_1.Component({\n            selector: 'p-paginator',\n            template: \"\\n        <div [class]=\\\"styleClass\\\" [ngStyle]=\\\"style\\\" [ngClass]=\\\"'ui-paginator ui-widget ui-widget-header ui-unselectable-text ui-helper-clearfix'\\\"\\n            *ngIf=\\\"alwaysShow ? true : (pageLinks && pageLinks.length > 1)\\\">\\n            <div class=\\\"ui-paginator-left-content\\\" *ngIf=\\\"templateLeft\\\">\\n                <ng-container *ngTemplateOutlet=\\\"templateLeft; context: {$implicit: paginatorState}\\\"></ng-container>\\n            </div>\\n            <span class=\\\"ui-paginator-current\\\" *ngIf=\\\"showCurrentPageReport\\\">{{currentPageReport}}</span>\\n            <a [attr.tabindex]=\\\"isFirstPage() ? null : '0'\\\" class=\\\"ui-paginator-first ui-paginator-element ui-state-default ui-corner-all\\\"\\n                    (click)=\\\"changePageToFirst($event)\\\" (keydown.enter)=\\\"changePageToFirst($event)\\\" [ngClass]=\\\"{'ui-state-disabled':isFirstPage()}\\\" [tabindex]=\\\"isFirstPage() ? -1 : null\\\">\\n                <span class=\\\"ui-paginator-icon pi pi-step-backward\\\"></span>\\n            </a>\\n            <a tabindex=\\\"0\\\" [attr.tabindex]=\\\"isFirstPage() ? null : '0'\\\" class=\\\"ui-paginator-prev ui-paginator-element ui-state-default ui-corner-all\\\"\\n                    (click)=\\\"changePageToPrev($event)\\\" (keydown.enter)=\\\"changePageToPrev($event)\\\" [ngClass]=\\\"{'ui-state-disabled':isFirstPage()}\\\" [tabindex]=\\\"isFirstPage() ? -1 : null\\\">\\n                <span class=\\\"ui-paginator-icon pi pi-caret-left\\\"></span>\\n            </a>\\n            <span class=\\\"ui-paginator-pages\\\">\\n                <a tabindex=\\\"0\\\" *ngFor=\\\"let pageLink of pageLinks\\\" class=\\\"ui-paginator-page ui-paginator-element ui-state-default ui-corner-all\\\"\\n                    (click)=\\\"onPageLinkClick($event, pageLink - 1)\\\" (keydown.enter)=\\\"onPageLinkClick($event, pageLink - 1)\\\" [ngClass]=\\\"{'ui-state-active': (pageLink-1 == getPage())}\\\">{{pageLink}}</a>\\n            </span>\\n            <a [attr.tabindex]=\\\"isLastPage() ? null : '0'\\\" class=\\\"ui-paginator-next ui-paginator-element ui-state-default ui-corner-all\\\"\\n                    (click)=\\\"changePageToNext($event)\\\" (keydown.enter)=\\\"changePageToNext($event)\\\" [ngClass]=\\\"{'ui-state-disabled':isLastPage()}\\\" [tabindex]=\\\"isLastPage() ? -1 : null\\\">\\n                <span class=\\\"ui-paginator-icon pi pi-caret-right\\\"></span>\\n            </a>\\n            <a [attr.tabindex]=\\\"isLastPage() ? null : '0'\\\" class=\\\"ui-paginator-last ui-paginator-element ui-state-default ui-corner-all\\\"\\n                    (click)=\\\"changePageToLast($event)\\\" (keydown.enter)=\\\"changePageToLast($event)\\\" [ngClass]=\\\"{'ui-state-disabled':isLastPage()}\\\" [tabindex]=\\\"isLastPage() ? -1 : null\\\">\\n                <span class=\\\"ui-paginator-icon pi pi-step-forward\\\"></span>\\n            </a>\\n            <p-dropdown [options]=\\\"rowsPerPageItems\\\" [(ngModel)]=\\\"rows\\\" *ngIf=\\\"rowsPerPageOptions\\\" \\n                (onChange)=\\\"onRppChange($event)\\\" [appendTo]=\\\"dropdownAppendTo\\\" [scrollHeight]=\\\"dropdownScrollHeight\\\"></p-dropdown>\\n            <div class=\\\"ui-paginator-right-content\\\" *ngIf=\\\"templateRight\\\">\\n                <ng-container *ngTemplateOutlet=\\\"templateRight; context: {$implicit: paginatorState}\\\"></ng-container>\\n            </div>\\n        </div>\\n    \"\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\n    ], Paginator);\n    return Paginator;\n}());\nexports.Paginator = Paginator;\nvar PaginatorModule = /** @class */ (function () {\n    function PaginatorModule() {\n    }\n    PaginatorModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule, dropdown_1.DropdownModule, forms_1.FormsModule, shared_1.SharedModule],\n            exports: [Paginator, dropdown_1.DropdownModule, forms_1.FormsModule, shared_1.SharedModule],\n            declarations: [Paginator]\n        })\n    ], PaginatorModule);\n    return PaginatorModule;\n}());\nexports.PaginatorModule = PaginatorModule;\n//# sourceMappingURL=paginator.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar shared_1 = require(\"../common/shared\");\nvar paginator_1 = require(\"../paginator/paginator\");\nvar domhandler_1 = require(\"../dom/domhandler\");\nvar objectutils_1 = require(\"../utils/objectutils\");\nvar core_2 = require(\"@angular/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar TableService = /** @class */ (function () {\n    function TableService() {\n        this.sortSource = new rxjs_1.Subject();\n        this.selectionSource = new rxjs_1.Subject();\n        this.contextMenuSource = new rxjs_1.Subject();\n        this.valueSource = new rxjs_1.Subject();\n        this.totalRecordsSource = new rxjs_1.Subject();\n        this.columnsSource = new rxjs_1.Subject();\n        this.sortSource$ = this.sortSource.asObservable();\n        this.selectionSource$ = this.selectionSource.asObservable();\n        this.contextMenuSource$ = this.contextMenuSource.asObservable();\n        this.valueSource$ = this.valueSource.asObservable();\n        this.totalRecordsSource$ = this.totalRecordsSource.asObservable();\n        this.columnsSource$ = this.columnsSource.asObservable();\n    }\n    TableService.prototype.onSort = function (sortMeta) {\n        this.sortSource.next(sortMeta);\n    };\n    TableService.prototype.onSelectionChange = function () {\n        this.selectionSource.next();\n    };\n    TableService.prototype.onContextMenu = function (data) {\n        this.contextMenuSource.next(data);\n    };\n    TableService.prototype.onValueChange = function (value) {\n        this.valueSource.next(value);\n    };\n    TableService.prototype.onTotalRecordsChange = function (value) {\n        this.totalRecordsSource.next(value);\n    };\n    TableService.prototype.onColumnsChange = function (columns) {\n        this.columnsSource.next(columns);\n    };\n    TableService = __decorate([\n        core_2.Injectable()\n    ], TableService);\n    return TableService;\n}());\nexports.TableService = TableService;\nvar Table = /** @class */ (function () {\n    function Table(el, zone, tableService, cd) {\n        this.el = el;\n        this.zone = zone;\n        this.tableService = tableService;\n        this.cd = cd;\n        this.pageLinks = 5;\n        this.alwaysShowPaginator = true;\n        this.paginatorPosition = 'bottom';\n        this.paginatorDropdownScrollHeight = '200px';\n        this.currentPageReportTemplate = '{currentPage} of {totalPages}';\n        this.defaultSortOrder = 1;\n        this.sortMode = 'single';\n        this.resetPageOnSort = true;\n        this.selectionChange = new core_1.EventEmitter();\n        this.contextMenuSelectionChange = new core_1.EventEmitter();\n        this.contextMenuSelectionMode = \"separate\";\n        this.rowTrackBy = function (index, item) { return item; };\n        this.lazy = false;\n        this.lazyLoadOnInit = true;\n        this.compareSelectionBy = 'deepEquals';\n        this.csvSeparator = ',';\n        this.exportFilename = 'download';\n        this.filters = {};\n        this.filterDelay = 300;\n        this.expandedRowKeys = {};\n        this.editingRowKeys = {};\n        this.rowExpandMode = 'multiple';\n        this.virtualScrollDelay = 150;\n        this.virtualRowHeight = 28;\n        this.columnResizeMode = 'fit';\n        this.loadingIcon = 'pi pi-spinner';\n        this.showLoader = true;\n        this.stateStorage = 'session';\n        this.editMode = 'cell';\n        this.onRowSelect = new core_1.EventEmitter();\n        this.onRowUnselect = new core_1.EventEmitter();\n        this.onPage = new core_1.EventEmitter();\n        this.onSort = new core_1.EventEmitter();\n        this.onFilter = new core_1.EventEmitter();\n        this.onLazyLoad = new core_1.EventEmitter();\n        this.onRowExpand = new core_1.EventEmitter();\n        this.onRowCollapse = new core_1.EventEmitter();\n        this.onContextMenuSelect = new core_1.EventEmitter();\n        this.onColResize = new core_1.EventEmitter();\n        this.onColReorder = new core_1.EventEmitter();\n        this.onRowReorder = new core_1.EventEmitter();\n        this.onEditInit = new core_1.EventEmitter();\n        this.onEditComplete = new core_1.EventEmitter();\n        this.onEditCancel = new core_1.EventEmitter();\n        this.onHeaderCheckboxToggle = new core_1.EventEmitter();\n        this.sortFunction = new core_1.EventEmitter();\n        this.firstChange = new core_1.EventEmitter();\n        this.rowsChange = new core_1.EventEmitter();\n        this.onStateSave = new core_1.EventEmitter();\n        this.onStateRestore = new core_1.EventEmitter();\n        this._value = [];\n        this._totalRecords = 0;\n        this._first = 0;\n        this.selectionKeys = {};\n        this._sortOrder = 1;\n        this.filterConstraints = {\n            startsWith: function (value, filter) {\n                if (filter === undefined || filter === null || filter.trim() === '') {\n                    return true;\n                }\n                if (value === undefined || value === null) {\n                    return false;\n                }\n                var filterValue = objectutils_1.ObjectUtils.removeAccents(filter.toString()).toLowerCase();\n                var stringValue = objectutils_1.ObjectUtils.removeAccents(value.toString()).toLowerCase();\n                return stringValue.slice(0, filterValue.length) === filterValue;\n            },\n            contains: function (value, filter) {\n                if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\n                    return true;\n                }\n                if (value === undefined || value === null) {\n                    return false;\n                }\n                var filterValue = objectutils_1.ObjectUtils.removeAccents(filter.toString()).toLowerCase();\n                var stringValue = objectutils_1.ObjectUtils.removeAccents(value.toString()).toLowerCase();\n                return stringValue.indexOf(filterValue) !== -1;\n            },\n            endsWith: function (value, filter) {\n                if (filter === undefined || filter === null || filter.trim() === '') {\n                    return true;\n                }\n                if (value === undefined || value === null) {\n                    return false;\n                }\n                var filterValue = objectutils_1.ObjectUtils.removeAccents(filter.toString()).toLowerCase();\n                var stringValue = objectutils_1.ObjectUtils.removeAccents(value.toString()).toLowerCase();\n                return stringValue.indexOf(filterValue, stringValue.length - filterValue.length) !== -1;\n            },\n            equals: function (value, filter) {\n                if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\n                    return true;\n                }\n                if (value === undefined || value === null) {\n                    return false;\n                }\n                if (value.getTime && filter.getTime)\n                    return value.getTime() === filter.getTime();\n                else\n                    return objectutils_1.ObjectUtils.removeAccents(value.toString()).toLowerCase() == objectutils_1.ObjectUtils.removeAccents(filter.toString()).toLowerCase();\n            },\n            notEquals: function (value, filter) {\n                if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\n                    return false;\n                }\n                if (value === undefined || value === null) {\n                    return true;\n                }\n                if (value.getTime && filter.getTime)\n                    return value.getTime() !== filter.getTime();\n                else\n                    return objectutils_1.ObjectUtils.removeAccents(value.toString()).toLowerCase() != objectutils_1.ObjectUtils.removeAccents(filter.toString()).toLowerCase();\n            },\n            in: function (value, filter) {\n                if (filter === undefined || filter === null || filter.length === 0) {\n                    return true;\n                }\n                if (value === undefined || value === null) {\n                    return false;\n                }\n                for (var i = 0; i < filter.length; i++) {\n                    if (filter[i] === value || (value.getTime && filter[i].getTime && value.getTime() === filter[i].getTime())) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            lt: function (value, filter) {\n                if (filter === undefined || filter === null) {\n                    return true;\n                }\n                if (value === undefined || value === null) {\n                    return false;\n                }\n                if (value.getTime && filter.getTime)\n                    return value.getTime() < filter.getTime();\n                else\n                    return value < filter;\n            },\n            lte: function (value, filter) {\n                if (filter === undefined || filter === null) {\n                    return true;\n                }\n                if (value === undefined || value === null) {\n                    return false;\n                }\n                if (value.getTime && filter.getTime)\n                    return value.getTime() <= filter.getTime();\n                else\n                    return value <= filter;\n            },\n            gt: function (value, filter) {\n                if (filter === undefined || filter === null) {\n                    return true;\n                }\n                if (value === undefined || value === null) {\n                    return false;\n                }\n                if (value.getTime && filter.getTime)\n                    return value.getTime() > filter.getTime();\n                else\n                    return value > filter;\n            },\n            gte: function (value, filter) {\n                if (filter === undefined || filter === null) {\n                    return true;\n                }\n                if (value === undefined || value === null) {\n                    return false;\n                }\n                if (value.getTime && filter.getTime)\n                    return value.getTime() >= filter.getTime();\n                else\n                    return value >= filter;\n            }\n        };\n    }\n    Table.prototype.ngOnInit = function () {\n        if (this.lazy && this.lazyLoadOnInit) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            if (this.restoringFilter) {\n                this.restoringFilter = false;\n            }\n        }\n        this.initialized = true;\n    };\n    Table.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.templates.forEach(function (item) {\n            switch (item.getType()) {\n                case 'caption':\n                    _this.captionTemplate = item.template;\n                    break;\n                case 'header':\n                    _this.headerTemplate = item.template;\n                    break;\n                case 'body':\n                    _this.bodyTemplate = item.template;\n                    break;\n                case 'loadingbody':\n                    _this.loadingBodyTemplate = item.template;\n                    break;\n                case 'footer':\n                    _this.footerTemplate = item.template;\n                    break;\n                case 'summary':\n                    _this.summaryTemplate = item.template;\n                    break;\n                case 'colgroup':\n                    _this.colGroupTemplate = item.template;\n                    break;\n                case 'rowexpansion':\n                    _this.expandedRowTemplate = item.template;\n                    break;\n                case 'frozenrows':\n                    _this.frozenRowsTemplate = item.template;\n                    break;\n                case 'frozenheader':\n                    _this.frozenHeaderTemplate = item.template;\n                    break;\n                case 'frozenbody':\n                    _this.frozenBodyTemplate = item.template;\n                    break;\n                case 'frozenfooter':\n                    _this.frozenFooterTemplate = item.template;\n                    break;\n                case 'frozencolgroup':\n                    _this.frozenColGroupTemplate = item.template;\n                    break;\n                case 'emptymessage':\n                    _this.emptyMessageTemplate = item.template;\n                    break;\n                case 'paginatorleft':\n                    _this.paginatorLeftTemplate = item.template;\n                    break;\n                case 'paginatorright':\n                    _this.paginatorRightTemplate = item.template;\n                    break;\n            }\n        });\n    };\n    Table.prototype.ngAfterViewInit = function () {\n        if (this.isStateful() && this.resizableColumns) {\n            this.restoreColumnWidths();\n        }\n    };\n    Object.defineProperty(Table.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (val) {\n            if (this.isStateful() && !this.stateRestored) {\n                this.restoreState();\n            }\n            this._value = val;\n            if (!this.lazy) {\n                this.totalRecords = (this._value ? this._value.length : 0);\n                if (this.sortMode == 'single' && this.sortField)\n                    this.sortSingle();\n                else if (this.sortMode == 'multiple' && this.multiSortMeta)\n                    this.sortMultiple();\n                else if (this.hasFilter()) //sort already filters\n                    this._filter();\n            }\n            if (this.virtualScroll && this.virtualScrollCallback) {\n                this.virtualScrollCallback();\n            }\n            this.tableService.onValueChange(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Table.prototype, \"columns\", {\n        get: function () {\n            return this._columns;\n        },\n        set: function (cols) {\n            this._columns = cols;\n            this.tableService.onColumnsChange(cols);\n            if (this._columns && this.isStateful() && this.reorderableColumns && !this.columnOrderStateRestored) {\n                this.restoreColumnOrder();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Table.prototype, \"first\", {\n        get: function () {\n            return this._first;\n        },\n        set: function (val) {\n            this._first = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Table.prototype, \"rows\", {\n        get: function () {\n            return this._rows;\n        },\n        set: function (val) {\n            this._rows = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Table.prototype, \"totalRecords\", {\n        get: function () {\n            return this._totalRecords;\n        },\n        set: function (val) {\n            this._totalRecords = val;\n            this.tableService.onTotalRecordsChange(this._totalRecords);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Table.prototype, \"sortField\", {\n        get: function () {\n            return this._sortField;\n        },\n        set: function (val) {\n            this._sortField = val;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Table.prototype, \"sortOrder\", {\n        get: function () {\n            return this._sortOrder;\n        },\n        set: function (val) {\n            this._sortOrder = val;\n            //avoid triggering lazy load prior to lazy initialization at onInit\n            if (!this.lazy || this.initialized) {\n                if (this.sortMode === 'single') {\n                    this.sortSingle();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Table.prototype, \"multiSortMeta\", {\n        get: function () {\n            return this._multiSortMeta;\n        },\n        set: function (val) {\n            this._multiSortMeta = val;\n            if (this.sortMode === 'multiple') {\n                this.sortMultiple();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Table.prototype, \"selection\", {\n        get: function () {\n            return this._selection;\n        },\n        set: function (val) {\n            this._selection = val;\n            if (!this.preventSelectionSetterPropagation) {\n                this.updateSelectionKeys();\n                this.tableService.onSelectionChange();\n            }\n            this.preventSelectionSetterPropagation = false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Table.prototype.updateSelectionKeys = function () {\n        if (this.dataKey && this._selection) {\n            this.selectionKeys = {};\n            if (Array.isArray(this._selection)) {\n                for (var _i = 0, _a = this._selection; _i < _a.length; _i++) {\n                    var data = _a[_i];\n                    this.selectionKeys[String(objectutils_1.ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.selectionKeys[String(objectutils_1.ObjectUtils.resolveFieldData(this._selection, this.dataKey))] = 1;\n            }\n        }\n    };\n    Table.prototype.onPageChange = function (event) {\n        this.first = event.first;\n        this.rows = event.rows;\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        this.onPage.emit({\n            first: this.first,\n            rows: this.rows\n        });\n        this.firstChange.emit(this.first);\n        this.rowsChange.emit(this.rows);\n        this.tableService.onValueChange(this.value);\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.anchorRowIndex = null;\n    };\n    Table.prototype.sort = function (event) {\n        var originalEvent = event.originalEvent;\n        if (this.sortMode === 'single') {\n            this._sortOrder = (this.sortField === event.field) ? this.sortOrder * -1 : this.defaultSortOrder;\n            this._sortField = event.field;\n            this.sortSingle();\n        }\n        if (this.sortMode === 'multiple') {\n            var metaKey = originalEvent.metaKey || originalEvent.ctrlKey;\n            var sortMeta = this.getSortMeta(event.field);\n            if (sortMeta) {\n                if (!metaKey) {\n                    this._multiSortMeta = [{ field: event.field, order: sortMeta.order * -1 }];\n                }\n                else {\n                    sortMeta.order = sortMeta.order * -1;\n                }\n            }\n            else {\n                if (!metaKey || !this.multiSortMeta) {\n                    this._multiSortMeta = [];\n                }\n                this.multiSortMeta.push({ field: event.field, order: this.defaultSortOrder });\n            }\n            this.sortMultiple();\n        }\n        if (this.isStateful()) {\n            this.saveState();\n        }\n        this.anchorRowIndex = null;\n    };\n    Table.prototype.sortSingle = function () {\n        var _this = this;\n        if (this.sortField && this.sortOrder) {\n            if (this.restoringSort) {\n                this.restoringSort = false;\n            }\n            else if (this.resetPageOnSort) {\n                this.first = 0;\n                this.firstChange.emit(this.first);\n            }\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        field: this.sortField,\n                        order: this.sortOrder\n                    });\n                }\n                else {\n                    this.value.sort(function (data1, data2) {\n                        var value1 = objectutils_1.ObjectUtils.resolveFieldData(data1, _this.sortField);\n                        var value2 = objectutils_1.ObjectUtils.resolveFieldData(data2, _this.sortField);\n                        var result = null;\n                        if (value1 == null && value2 != null)\n                            result = -1;\n                        else if (value1 != null && value2 == null)\n                            result = 1;\n                        else if (value1 == null && value2 == null)\n                            result = 0;\n                        else if (typeof value1 === 'string' && typeof value2 === 'string')\n                            result = value1.localeCompare(value2);\n                        else\n                            result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n                        return (_this.sortOrder * result);\n                    });\n                }\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            var sortMeta = {\n                field: this.sortField,\n                order: this.sortOrder\n            };\n            this.onSort.emit(sortMeta);\n            this.tableService.onSort(sortMeta);\n        }\n    };\n    Table.prototype.sortMultiple = function () {\n        var _this = this;\n        if (this.multiSortMeta) {\n            if (this.lazy) {\n                this.onLazyLoad.emit(this.createLazyLoadMetadata());\n            }\n            else if (this.value) {\n                if (this.customSort) {\n                    this.sortFunction.emit({\n                        data: this.value,\n                        mode: this.sortMode,\n                        multiSortMeta: this.multiSortMeta\n                    });\n                }\n                else {\n                    this.value.sort(function (data1, data2) {\n                        return _this.multisortField(data1, data2, _this.multiSortMeta, 0);\n                    });\n                }\n                if (this.hasFilter()) {\n                    this._filter();\n                }\n            }\n            this.onSort.emit({\n                multisortmeta: this.multiSortMeta\n            });\n            this.tableService.onSort(this.multiSortMeta);\n        }\n    };\n    Table.prototype.multisortField = function (data1, data2, multiSortMeta, index) {\n        var value1 = objectutils_1.ObjectUtils.resolveFieldData(data1, multiSortMeta[index].field);\n        var value2 = objectutils_1.ObjectUtils.resolveFieldData(data2, multiSortMeta[index].field);\n        var result = null;\n        if (value1 == null && value2 != null)\n            result = -1;\n        else if (value1 != null && value2 == null)\n            result = 1;\n        else if (value1 == null && value2 == null)\n            result = 0;\n        if (typeof value1 == 'string' || value1 instanceof String) {\n            if (value1.localeCompare && (value1 != value2)) {\n                return (multiSortMeta[index].order * value1.localeCompare(value2));\n            }\n        }\n        else {\n            result = (value1 < value2) ? -1 : 1;\n        }\n        if (value1 == value2) {\n            return (multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, multiSortMeta, index + 1)) : 0;\n        }\n        return (multiSortMeta[index].order * result);\n    };\n    Table.prototype.getSortMeta = function (field) {\n        if (this.multiSortMeta && this.multiSortMeta.length) {\n            for (var i = 0; i < this.multiSortMeta.length; i++) {\n                if (this.multiSortMeta[i].field === field) {\n                    return this.multiSortMeta[i];\n                }\n            }\n        }\n        return null;\n    };\n    Table.prototype.isSorted = function (field) {\n        if (this.sortMode === 'single') {\n            return (this.sortField && this.sortField === field);\n        }\n        else if (this.sortMode === 'multiple') {\n            var sorted = false;\n            if (this.multiSortMeta) {\n                for (var i = 0; i < this.multiSortMeta.length; i++) {\n                    if (this.multiSortMeta[i].field == field) {\n                        sorted = true;\n                        break;\n                    }\n                }\n            }\n            return sorted;\n        }\n    };\n    Table.prototype.handleRowClick = function (event) {\n        var target = event.originalEvent.target;\n        var targetNode = target.nodeName;\n        var parentNode = target.parentElement && target.parentElement.nodeName;\n        if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' ||\n            parentNode == 'INPUT' || parentNode == 'BUTTON' || parentNode == 'A' ||\n            (domhandler_1.DomHandler.hasClass(event.originalEvent.target, 'ui-clickable'))) {\n            return;\n        }\n        if (this.selectionMode) {\n            this.preventSelectionSetterPropagation = true;\n            if (this.isMultipleSelectionMode() && event.originalEvent.shiftKey && this.anchorRowIndex != null) {\n                domhandler_1.DomHandler.clearSelection();\n                if (this.rangeRowIndex != null) {\n                    this.clearSelectionRange(event.originalEvent);\n                }\n                this.rangeRowIndex = event.rowIndex;\n                this.selectRange(event.originalEvent, event.rowIndex);\n            }\n            else {\n                var rowData = event.rowData;\n                var selected = this.isSelected(rowData);\n                var metaSelection = this.rowTouched ? false : this.metaKeySelection;\n                var dataKeyValue = this.dataKey ? String(objectutils_1.ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n                this.anchorRowIndex = event.rowIndex;\n                this.rangeRowIndex = event.rowIndex;\n                if (metaSelection) {\n                    var metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;\n                    if (selected && metaKey) {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(null);\n                        }\n                        else {\n                            var selectionIndex_1 = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter(function (val, i) { return i != selectionIndex_1; });\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n                        this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });\n                    }\n                    else {\n                        if (this.isSingleSelectionMode()) {\n                            this._selection = rowData;\n                            this.selectionChange.emit(rowData);\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                        else if (this.isMultipleSelectionMode()) {\n                            if (metaKey) {\n                                this._selection = this.selection || [];\n                            }\n                            else {\n                                this._selection = [];\n                                this.selectionKeys = {};\n                            }\n                            this._selection = this.selection.concat([rowData]);\n                            this.selectionChange.emit(this.selection);\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                        this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                    }\n                }\n                else {\n                    if (this.selectionMode === 'single') {\n                        if (selected) {\n                            this._selection = null;\n                            this.selectionKeys = {};\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });\n                        }\n                        else {\n                            this._selection = rowData;\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys = {};\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                    else if (this.selectionMode === 'multiple') {\n                        if (selected) {\n                            var selectionIndex_2 = this.findIndexInSelection(rowData);\n                            this._selection = this.selection.filter(function (val, i) { return i != selectionIndex_2; });\n                            this.selectionChange.emit(this.selection);\n                            this.onRowUnselect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row' });\n                            if (dataKeyValue) {\n                                delete this.selectionKeys[dataKeyValue];\n                            }\n                        }\n                        else {\n                            this._selection = this.selection ? this.selection.concat([rowData]) : [rowData];\n                            this.selectionChange.emit(this.selection);\n                            this.onRowSelect.emit({ originalEvent: event.originalEvent, data: rowData, type: 'row', index: event.rowIndex });\n                            if (dataKeyValue) {\n                                this.selectionKeys[dataKeyValue] = 1;\n                            }\n                        }\n                    }\n                }\n            }\n            this.tableService.onSelectionChange();\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n        this.rowTouched = false;\n    };\n    Table.prototype.handleRowTouchEnd = function (event) {\n        this.rowTouched = true;\n    };\n    Table.prototype.handleRowRightClick = function (event) {\n        if (this.contextMenu) {\n            var rowData = event.rowData;\n            if (this.contextMenuSelectionMode === 'separate') {\n                this.contextMenuSelection = rowData;\n                this.contextMenuSelectionChange.emit(rowData);\n                this.onContextMenuSelect.emit({ originalEvent: event.originalEvent, data: rowData, index: event.rowIndex });\n                this.contextMenu.show(event.originalEvent);\n                this.tableService.onContextMenu(rowData);\n            }\n            else if (this.contextMenuSelectionMode === 'joint') {\n                this.preventSelectionSetterPropagation = true;\n                var selected = this.isSelected(rowData);\n                var dataKeyValue = this.dataKey ? String(objectutils_1.ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n                if (!selected) {\n                    if (this.isSingleSelectionMode()) {\n                        this.selection = rowData;\n                        this.selectionChange.emit(rowData);\n                    }\n                    else if (this.isMultipleSelectionMode()) {\n                        this.selection = [rowData];\n                        this.selectionChange.emit(this.selection);\n                    }\n                    if (dataKeyValue) {\n                        this.selectionKeys[dataKeyValue] = 1;\n                    }\n                }\n                this.contextMenu.show(event.originalEvent);\n                this.onContextMenuSelect.emit({ originalEvent: event, data: rowData, index: event.rowIndex });\n            }\n        }\n    };\n    Table.prototype.selectRange = function (event, rowIndex) {\n        var rangeStart, rangeEnd;\n        if (this.anchorRowIndex > rowIndex) {\n            rangeStart = rowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else if (this.anchorRowIndex < rowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = rowIndex;\n        }\n        else {\n            rangeStart = rowIndex;\n            rangeEnd = rowIndex;\n        }\n        if (this.lazy && this.paginator) {\n            rangeStart -= this.first;\n            rangeEnd -= this.first;\n        }\n        for (var i = rangeStart; i <= rangeEnd; i++) {\n            var rangeRowData = this.filteredValue ? this.filteredValue[i] : this.value[i];\n            if (!this.isSelected(rangeRowData)) {\n                this._selection = this.selection.concat([rangeRowData]);\n                var dataKeyValue = this.dataKey ? String(objectutils_1.ObjectUtils.resolveFieldData(rangeRowData, this.dataKey)) : null;\n                if (dataKeyValue) {\n                    this.selectionKeys[dataKeyValue] = 1;\n                }\n                this.onRowSelect.emit({ originalEvent: event, data: rangeRowData, type: 'row' });\n            }\n        }\n        this.selectionChange.emit(this.selection);\n    };\n    Table.prototype.clearSelectionRange = function (event) {\n        var rangeStart, rangeEnd;\n        if (this.rangeRowIndex > this.anchorRowIndex) {\n            rangeStart = this.anchorRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n        else if (this.rangeRowIndex < this.anchorRowIndex) {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.anchorRowIndex;\n        }\n        else {\n            rangeStart = this.rangeRowIndex;\n            rangeEnd = this.rangeRowIndex;\n        }\n        var _loop_1 = function (i) {\n            var rangeRowData = this_1.value[i];\n            var selectionIndex = this_1.findIndexInSelection(rangeRowData);\n            this_1._selection = this_1.selection.filter(function (val, i) { return i != selectionIndex; });\n            var dataKeyValue = this_1.dataKey ? String(objectutils_1.ObjectUtils.resolveFieldData(rangeRowData, this_1.dataKey)) : null;\n            if (dataKeyValue) {\n                delete this_1.selectionKeys[dataKeyValue];\n            }\n            this_1.onRowUnselect.emit({ originalEvent: event, data: rangeRowData, type: 'row' });\n        };\n        var this_1 = this;\n        for (var i = rangeStart; i <= rangeEnd; i++) {\n            _loop_1(i);\n        }\n    };\n    Table.prototype.isSelected = function (rowData) {\n        if (rowData && this.selection) {\n            if (this.dataKey) {\n                return this.selectionKeys[objectutils_1.ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined;\n            }\n            else {\n                if (this.selection instanceof Array)\n                    return this.findIndexInSelection(rowData) > -1;\n                else\n                    return this.equals(rowData, this.selection);\n            }\n        }\n        return false;\n    };\n    Table.prototype.findIndexInSelection = function (rowData) {\n        var index = -1;\n        if (this.selection && this.selection.length) {\n            for (var i = 0; i < this.selection.length; i++) {\n                if (this.equals(rowData, this.selection[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    Table.prototype.toggleRowWithRadio = function (event, rowData) {\n        this.preventSelectionSetterPropagation = true;\n        if (this.selection != rowData) {\n            this._selection = rowData;\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });\n            if (this.dataKey) {\n                this.selectionKeys = {};\n                this.selectionKeys[String(objectutils_1.ObjectUtils.resolveFieldData(rowData, this.dataKey))] = 1;\n            }\n        }\n        else {\n            this._selection = null;\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'radiobutton' });\n        }\n        this.tableService.onSelectionChange();\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    };\n    Table.prototype.toggleRowWithCheckbox = function (event, rowData) {\n        this.selection = this.selection || [];\n        var selected = this.isSelected(rowData);\n        var dataKeyValue = this.dataKey ? String(objectutils_1.ObjectUtils.resolveFieldData(rowData, this.dataKey)) : null;\n        this.preventSelectionSetterPropagation = true;\n        if (selected) {\n            var selectionIndex_3 = this.findIndexInSelection(rowData);\n            this._selection = this.selection.filter(function (val, i) { return i != selectionIndex_3; });\n            this.selectionChange.emit(this.selection);\n            this.onRowUnselect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                delete this.selectionKeys[dataKeyValue];\n            }\n        }\n        else {\n            this._selection = this.selection ? this.selection.concat([rowData]) : [rowData];\n            this.selectionChange.emit(this.selection);\n            this.onRowSelect.emit({ originalEvent: event.originalEvent, index: event.rowIndex, data: rowData, type: 'checkbox' });\n            if (dataKeyValue) {\n                this.selectionKeys[dataKeyValue] = 1;\n            }\n        }\n        this.tableService.onSelectionChange();\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    };\n    Table.prototype.toggleRowsWithCheckbox = function (event, check) {\n        this._selection = check ? this.filteredValue ? this.filteredValue.slice() : this.value.slice() : [];\n        this.preventSelectionSetterPropagation = true;\n        this.updateSelectionKeys();\n        this.selectionChange.emit(this._selection);\n        this.tableService.onSelectionChange();\n        this.onHeaderCheckboxToggle.emit({ originalEvent: event, checked: check });\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    };\n    Table.prototype.equals = function (data1, data2) {\n        return this.compareSelectionBy === 'equals' ? (data1 === data2) : objectutils_1.ObjectUtils.equals(data1, data2, this.dataKey);\n    };\n    Table.prototype.filter = function (value, field, matchMode) {\n        var _this = this;\n        if (this.filterTimeout) {\n            clearTimeout(this.filterTimeout);\n        }\n        if (!this.isFilterBlank(value)) {\n            this.filters[field] = { value: value, matchMode: matchMode };\n        }\n        else if (this.filters[field]) {\n            delete this.filters[field];\n        }\n        this.filterTimeout = setTimeout(function () {\n            _this._filter();\n            _this.filterTimeout = null;\n        }, this.filterDelay);\n        this.anchorRowIndex = null;\n    };\n    Table.prototype.filterGlobal = function (value, matchMode) {\n        this.filter(value, 'global', matchMode);\n    };\n    Table.prototype.isFilterBlank = function (filter) {\n        if (filter !== null && filter !== undefined) {\n            if ((typeof filter === 'string' && filter.trim().length == 0) || (filter instanceof Array && filter.length == 0))\n                return true;\n            else\n                return false;\n        }\n        return true;\n    };\n    Table.prototype._filter = function () {\n        if (!this.restoringFilter) {\n            this.first = 0;\n            this.firstChange.emit(this.first);\n        }\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            if (!this.value) {\n                return;\n            }\n            if (!this.hasFilter()) {\n                this.filteredValue = null;\n                if (this.paginator) {\n                    this.totalRecords = this.value ? this.value.length : 0;\n                }\n            }\n            else {\n                var globalFilterFieldsArray = void 0;\n                if (this.filters['global']) {\n                    if (!this.columns && !this.globalFilterFields)\n                        throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');\n                    else\n                        globalFilterFieldsArray = this.globalFilterFields || this.columns;\n                }\n                this.filteredValue = [];\n                for (var i = 0; i < this.value.length; i++) {\n                    var localMatch = true;\n                    var globalMatch = false;\n                    var localFiltered = false;\n                    for (var prop in this.filters) {\n                        if (this.filters.hasOwnProperty(prop) && prop !== 'global') {\n                            localFiltered = true;\n                            var filterMeta = this.filters[prop];\n                            var filterField = prop;\n                            var filterValue = filterMeta.value;\n                            var filterMatchMode = filterMeta.matchMode || 'startsWith';\n                            var dataFieldValue = objectutils_1.ObjectUtils.resolveFieldData(this.value[i], filterField);\n                            var filterConstraint = this.filterConstraints[filterMatchMode];\n                            if (!filterConstraint(dataFieldValue, filterValue)) {\n                                localMatch = false;\n                            }\n                            if (!localMatch) {\n                                break;\n                            }\n                        }\n                    }\n                    if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {\n                        for (var j = 0; j < globalFilterFieldsArray.length; j++) {\n                            var globalFilterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];\n                            globalMatch = this.filterConstraints[this.filters['global'].matchMode](objectutils_1.ObjectUtils.resolveFieldData(this.value[i], globalFilterField), this.filters['global'].value);\n                            if (globalMatch) {\n                                break;\n                            }\n                        }\n                    }\n                    var matches = void 0;\n                    if (this.filters['global']) {\n                        matches = localFiltered ? (localFiltered && localMatch && globalMatch) : globalMatch;\n                    }\n                    else {\n                        matches = localFiltered && localMatch;\n                    }\n                    if (matches) {\n                        this.filteredValue.push(this.value[i]);\n                    }\n                }\n                if (this.filteredValue.length === this.value.length) {\n                    this.filteredValue = null;\n                }\n                if (this.paginator) {\n                    this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\n                }\n            }\n        }\n        this.onFilter.emit({\n            filters: this.filters,\n            filteredValue: this.filteredValue || this.value\n        });\n        this.tableService.onValueChange(this.value);\n        if (this.isStateful() && !this.restoringFilter) {\n            this.saveState();\n        }\n        if (this.restoringFilter) {\n            this.restoringFilter = false;\n        }\n        this.cd.detectChanges();\n    };\n    Table.prototype.hasFilter = function () {\n        var empty = true;\n        for (var prop in this.filters) {\n            if (this.filters.hasOwnProperty(prop)) {\n                empty = false;\n                break;\n            }\n        }\n        return !empty;\n    };\n    Table.prototype.createLazyLoadMetadata = function () {\n        return {\n            first: this.first,\n            rows: this.virtualScroll ? this.rows * 2 : this.rows,\n            sortField: this.sortField,\n            sortOrder: this.sortOrder,\n            filters: this.filters,\n            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,\n            multiSortMeta: this.multiSortMeta\n        };\n    };\n    Table.prototype.reset = function () {\n        this._sortField = null;\n        this._sortOrder = this.defaultSortOrder;\n        this._multiSortMeta = null;\n        this.tableService.onSort(null);\n        this.filteredValue = null;\n        this.filters = {};\n        this.first = 0;\n        this.firstChange.emit(this.first);\n        if (this.lazy) {\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\n        }\n        else {\n            this.totalRecords = (this._value ? this._value.length : 0);\n        }\n    };\n    Table.prototype.exportCSV = function (options) {\n        var _this = this;\n        var data = this.filteredValue || this.value;\n        var csv = '\\ufeff';\n        if (options && options.selectionOnly) {\n            data = this.selection || [];\n        }\n        //headers\n        for (var i = 0; i < this.columns.length; i++) {\n            var column = this.columns[i];\n            if (column.exportable !== false && column.field) {\n                csv += '\"' + (column.header || column.field) + '\"';\n                if (i < (this.columns.length - 1)) {\n                    csv += this.csvSeparator;\n                }\n            }\n        }\n        //body\n        data.forEach(function (record, i) {\n            csv += '\\n';\n            for (var i_1 = 0; i_1 < _this.columns.length; i_1++) {\n                var column = _this.columns[i_1];\n                if (column.exportable !== false && column.field) {\n                    var cellData = objectutils_1.ObjectUtils.resolveFieldData(record, column.field);\n                    if (cellData != null) {\n                        if (_this.exportFunction) {\n                            cellData = _this.exportFunction({\n                                data: cellData,\n                                field: column.field\n                            });\n                        }\n                        else\n                            cellData = String(cellData).replace(/\"/g, '\"\"');\n                    }\n                    else\n                        cellData = '';\n                    csv += '\"' + cellData + '\"';\n                    if (i_1 < (_this.columns.length - 1)) {\n                        csv += _this.csvSeparator;\n                    }\n                }\n            }\n        });\n        var blob = new Blob([csv], {\n            type: 'text/csv;charset=utf-8;'\n        });\n        if (window.navigator.msSaveOrOpenBlob) {\n            navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\n        }\n        else {\n            var link = document.createElement(\"a\");\n            link.style.display = 'none';\n            document.body.appendChild(link);\n            if (link.download !== undefined) {\n                link.setAttribute('href', URL.createObjectURL(blob));\n                link.setAttribute('download', this.exportFilename + '.csv');\n                link.click();\n            }\n            else {\n                csv = 'data:text/csv;charset=utf-8,' + csv;\n                window.open(encodeURI(csv));\n            }\n            document.body.removeChild(link);\n        }\n    };\n    Table.prototype.updateEditingCell = function (cell, data, field) {\n        this.editingCell = cell;\n        this.editingCellData = data;\n        this.editingCellField = field;\n        this.bindDocumentEditListener();\n    };\n    Table.prototype.isEditingCellValid = function () {\n        return (this.editingCell && domhandler_1.DomHandler.find(this.editingCell, '.ng-invalid.ng-dirty').length === 0);\n    };\n    Table.prototype.bindDocumentEditListener = function () {\n        var _this = this;\n        if (!this.documentEditListener) {\n            this.documentEditListener = function (event) {\n                if (_this.editingCell && !_this.editingCellClick && _this.isEditingCellValid()) {\n                    domhandler_1.DomHandler.removeClass(_this.editingCell, 'ui-editing-cell');\n                    _this.editingCell = null;\n                    _this.onEditComplete.emit({ field: _this.editingCellField, data: _this.editingCellData });\n                    _this.editingCellField = null;\n                    _this.editingCellData = null;\n                    _this.unbindDocumentEditListener();\n                }\n                _this.editingCellClick = false;\n            };\n            document.addEventListener('click', this.documentEditListener);\n        }\n    };\n    Table.prototype.unbindDocumentEditListener = function () {\n        if (this.documentEditListener) {\n            document.removeEventListener('click', this.documentEditListener);\n            this.documentEditListener = null;\n        }\n    };\n    Table.prototype.initRowEdit = function (rowData) {\n        var dataKeyValue = String(objectutils_1.ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        this.editingRowKeys[dataKeyValue] = true;\n    };\n    Table.prototype.saveRowEdit = function (rowData, rowElement) {\n        if (domhandler_1.DomHandler.find(rowElement, '.ng-invalid.ng-dirty').length === 0) {\n            var dataKeyValue = String(objectutils_1.ObjectUtils.resolveFieldData(rowData, this.dataKey));\n            delete this.editingRowKeys[dataKeyValue];\n        }\n    };\n    Table.prototype.cancelRowEdit = function (rowData) {\n        var dataKeyValue = String(objectutils_1.ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        delete this.editingRowKeys[dataKeyValue];\n    };\n    Table.prototype.toggleRow = function (rowData, event) {\n        if (!this.dataKey) {\n            throw new Error('dataKey must be defined to use row expansion');\n        }\n        var dataKeyValue = String(objectutils_1.ObjectUtils.resolveFieldData(rowData, this.dataKey));\n        if (this.expandedRowKeys[dataKeyValue] != null) {\n            delete this.expandedRowKeys[dataKeyValue];\n            this.onRowCollapse.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n        else {\n            if (this.rowExpandMode === 'single') {\n                this.expandedRowKeys = {};\n            }\n            this.expandedRowKeys[dataKeyValue] = true;\n            this.onRowExpand.emit({\n                originalEvent: event,\n                data: rowData\n            });\n        }\n        if (event) {\n            event.preventDefault();\n        }\n        if (this.isStateful()) {\n            this.saveState();\n        }\n    };\n    Table.prototype.isRowExpanded = function (rowData) {\n        return this.expandedRowKeys[String(objectutils_1.ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    };\n    Table.prototype.isRowEditing = function (rowData) {\n        return this.editingRowKeys[String(objectutils_1.ObjectUtils.resolveFieldData(rowData, this.dataKey))] === true;\n    };\n    Table.prototype.isSingleSelectionMode = function () {\n        return this.selectionMode === 'single';\n    };\n    Table.prototype.isMultipleSelectionMode = function () {\n        return this.selectionMode === 'multiple';\n    };\n    Table.prototype.onColumnResizeBegin = function (event) {\n        var containerLeft = domhandler_1.DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        this.lastResizerHelperX = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft);\n        event.preventDefault();\n    };\n    Table.prototype.onColumnResize = function (event) {\n        var containerLeft = domhandler_1.DomHandler.getOffset(this.containerViewChild.nativeElement).left;\n        domhandler_1.DomHandler.addClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');\n        this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';\n        this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';\n        this.resizeHelperViewChild.nativeElement.style.left = (event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft) + 'px';\n        this.resizeHelperViewChild.nativeElement.style.display = 'block';\n    };\n    Table.prototype.onColumnResizeEnd = function (event, column) {\n        var delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;\n        var columnWidth = column.offsetWidth;\n        var minWidth = parseInt(column.style.minWidth || 15);\n        if (columnWidth + delta < minWidth) {\n            delta = minWidth - columnWidth;\n        }\n        var newColumnWidth = columnWidth + delta;\n        if (newColumnWidth >= minWidth) {\n            if (this.columnResizeMode === 'fit') {\n                var nextColumn = column.nextElementSibling;\n                while (!nextColumn.offsetParent) {\n                    nextColumn = nextColumn.nextElementSibling;\n                }\n                if (nextColumn) {\n                    var nextColumnWidth = nextColumn.offsetWidth - delta;\n                    var nextColumnMinWidth = nextColumn.style.minWidth || 15;\n                    if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {\n                        if (this.scrollable) {\n                            var scrollableView = this.findParentScrollableView(column);\n                            var scrollableBodyTable = domhandler_1.DomHandler.findSingle(scrollableView, 'table.ui-table-scrollable-body-table');\n                            var scrollableHeaderTable = domhandler_1.DomHandler.findSingle(scrollableView, 'table.ui-table-scrollable-header-table');\n                            var scrollableFooterTable = domhandler_1.DomHandler.findSingle(scrollableView, 'table.ui-table-scrollable-footer-table');\n                            var resizeColumnIndex = domhandler_1.DomHandler.index(column);\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                        }\n                        else {\n                            column.style.width = newColumnWidth + 'px';\n                            if (nextColumn) {\n                                nextColumn.style.width = nextColumnWidth + 'px';\n                            }\n                        }\n                    }\n                }\n            }\n            else if (this.columnResizeMode === 'expand') {\n                if (newColumnWidth > minWidth) {\n                    if (this.scrollable) {\n                        this.setScrollableItemsWidthOnExpandResize(column, newColumnWidth, delta);\n                    }\n                    else {\n                        this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';\n                        column.style.width = newColumnWidth + 'px';\n                        var containerWidth = this.tableViewChild.nativeElement.style.width;\n                        this.containerViewChild.nativeElement.style.width = containerWidth + 'px';\n                    }\n                }\n            }\n            this.onColResize.emit({\n                element: column,\n                delta: delta\n            });\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        }\n        this.resizeHelperViewChild.nativeElement.style.display = 'none';\n        domhandler_1.DomHandler.removeClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');\n    };\n    Table.prototype.setScrollableItemsWidthOnExpandResize = function (column, newColumnWidth, delta) {\n        var scrollableView = column ? this.findParentScrollableView(column) : this.containerViewChild.nativeElement;\n        var scrollableBody = domhandler_1.DomHandler.findSingle(scrollableView, '.ui-table-scrollable-body');\n        var scrollableHeader = domhandler_1.DomHandler.findSingle(scrollableView, '.ui-table-scrollable-header');\n        var scrollableFooter = domhandler_1.DomHandler.findSingle(scrollableView, '.ui-table-scrollable-footer');\n        var scrollableBodyTable = domhandler_1.DomHandler.findSingle(scrollableBody, 'table.ui-table-scrollable-body-table');\n        var scrollableHeaderTable = domhandler_1.DomHandler.findSingle(scrollableHeader, 'table.ui-table-scrollable-header-table');\n        var scrollableFooterTable = domhandler_1.DomHandler.findSingle(scrollableFooter, 'table.ui-table-scrollable-footer-table');\n        var scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n        var scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n        var isContainerInViewport = this.containerViewChild.nativeElement.offsetWidth >= scrollableBodyTableWidth;\n        var setWidth = function (container, table, width, isContainerInViewport) {\n            if (container && table) {\n                container.style.width = isContainerInViewport ? width + domhandler_1.DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto';\n                table.style.width = width + 'px';\n            }\n        };\n        setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n        setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n        setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n        if (column) {\n            var resizeColumnIndex = domhandler_1.DomHandler.index(column);\n            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n        }\n    };\n    Table.prototype.findParentScrollableView = function (column) {\n        if (column) {\n            var parent_1 = column.parentElement;\n            while (parent_1 && !domhandler_1.DomHandler.hasClass(parent_1, 'ui-table-scrollable-view')) {\n                parent_1 = parent_1.parentElement;\n            }\n            return parent_1;\n        }\n        else {\n            return null;\n        }\n    };\n    Table.prototype.resizeColGroup = function (table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n        if (table) {\n            var colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n            if (colGroup) {\n                var col = colGroup.children[resizeColumnIndex];\n                var nextCol = col.nextElementSibling;\n                col.style.width = newColumnWidth + 'px';\n                if (nextCol && nextColumnWidth) {\n                    nextCol.style.width = nextColumnWidth + 'px';\n                }\n            }\n            else {\n                throw \"Scrollable tables require a colgroup to support resizable columns\";\n            }\n        }\n    };\n    Table.prototype.onColumnDragStart = function (event, columnElement) {\n        this.reorderIconWidth = domhandler_1.DomHandler.getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);\n        this.reorderIconHeight = domhandler_1.DomHandler.getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);\n        this.draggedColumn = columnElement;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n    };\n    Table.prototype.onColumnDragEnter = function (event, dropHeader) {\n        if (this.reorderableColumns && this.draggedColumn && dropHeader) {\n            event.preventDefault();\n            var containerOffset = domhandler_1.DomHandler.getOffset(this.containerViewChild.nativeElement);\n            var dropHeaderOffset = domhandler_1.DomHandler.getOffset(dropHeader);\n            if (this.draggedColumn != dropHeader) {\n                var dragIndex = domhandler_1.DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n                var dropIndex = domhandler_1.DomHandler.indexWithinGroup(dropHeader, 'preorderablecolumn');\n                var targetLeft = dropHeaderOffset.left - containerOffset.left;\n                var targetTop = containerOffset.top - dropHeaderOffset.top;\n                var columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n                this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';\n                this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n                if (event.pageX > columnCenter) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = 1;\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.left = (targetLeft - Math.ceil(this.reorderIconWidth / 2)) + 'px';\n                    this.dropPosition = -1;\n                }\n                if ((dropIndex - dragIndex === 1 && this.dropPosition === -1) || (dropIndex - dragIndex === -1 && this.dropPosition === 1)) {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n                }\n                else {\n                    this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';\n                    this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';\n                }\n            }\n            else {\n                event.dataTransfer.dropEffect = 'none';\n            }\n        }\n    };\n    Table.prototype.onColumnDragLeave = function (event) {\n        if (this.reorderableColumns && this.draggedColumn) {\n            event.preventDefault();\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n        }\n    };\n    Table.prototype.onColumnDrop = function (event, dropColumn) {\n        event.preventDefault();\n        if (this.draggedColumn) {\n            var dragIndex = domhandler_1.DomHandler.indexWithinGroup(this.draggedColumn, 'preorderablecolumn');\n            var dropIndex = domhandler_1.DomHandler.indexWithinGroup(dropColumn, 'preorderablecolumn');\n            var allowDrop = (dragIndex != dropIndex);\n            if (allowDrop && ((dropIndex - dragIndex == 1 && this.dropPosition === -1) || (dragIndex - dropIndex == 1 && this.dropPosition === 1))) {\n                allowDrop = false;\n            }\n            if (allowDrop && ((dropIndex < dragIndex && this.dropPosition === 1))) {\n                dropIndex = dropIndex + 1;\n            }\n            if (allowDrop && ((dropIndex > dragIndex && this.dropPosition === -1))) {\n                dropIndex = dropIndex - 1;\n            }\n            if (allowDrop) {\n                objectutils_1.ObjectUtils.reorderArray(this.columns, dragIndex, dropIndex);\n                this.onColReorder.emit({\n                    dragIndex: dragIndex,\n                    dropIndex: dropIndex,\n                    columns: this.columns\n                });\n                if (this.isStateful()) {\n                    this.saveState();\n                }\n            }\n            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';\n            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';\n            this.draggedColumn.draggable = false;\n            this.draggedColumn = null;\n            this.dropPosition = null;\n        }\n    };\n    Table.prototype.onRowDragStart = function (event, index) {\n        this.rowDragging = true;\n        this.draggedRowIndex = index;\n        event.dataTransfer.setData('text', 'b'); // For firefox\n    };\n    Table.prototype.onRowDragOver = function (event, index, rowElement) {\n        if (this.rowDragging && this.draggedRowIndex !== index) {\n            var rowY = domhandler_1.DomHandler.getOffset(rowElement).top + domhandler_1.DomHandler.getWindowScrollTop();\n            var pageY = event.pageY;\n            var rowMidY = rowY + domhandler_1.DomHandler.getOuterHeight(rowElement) / 2;\n            var prevRowElement = rowElement.previousElementSibling;\n            if (pageY < rowMidY) {\n                domhandler_1.DomHandler.removeClass(rowElement, 'ui-table-dragpoint-bottom');\n                this.droppedRowIndex = index;\n                if (prevRowElement)\n                    domhandler_1.DomHandler.addClass(prevRowElement, 'ui-table-dragpoint-bottom');\n                else\n                    domhandler_1.DomHandler.addClass(rowElement, 'ui-table-dragpoint-top');\n            }\n            else {\n                if (prevRowElement)\n                    domhandler_1.DomHandler.removeClass(prevRowElement, 'ui-table-dragpoint-bottom');\n                else\n                    domhandler_1.DomHandler.addClass(rowElement, 'ui-table-dragpoint-top');\n                this.droppedRowIndex = index + 1;\n                domhandler_1.DomHandler.addClass(rowElement, 'ui-table-dragpoint-bottom');\n            }\n        }\n    };\n    Table.prototype.onRowDragLeave = function (event, rowElement) {\n        var prevRowElement = rowElement.previousElementSibling;\n        if (prevRowElement) {\n            domhandler_1.DomHandler.removeClass(prevRowElement, 'ui-table-dragpoint-bottom');\n        }\n        domhandler_1.DomHandler.removeClass(rowElement, 'ui-table-dragpoint-bottom');\n        domhandler_1.DomHandler.removeClass(rowElement, 'ui-table-dragpoint-top');\n    };\n    Table.prototype.onRowDragEnd = function (event) {\n        this.rowDragging = false;\n        this.draggedRowIndex = null;\n        this.droppedRowIndex = null;\n    };\n    Table.prototype.onRowDrop = function (event, rowElement) {\n        if (this.droppedRowIndex != null) {\n            var dropIndex = (this.draggedRowIndex > this.droppedRowIndex) ? this.droppedRowIndex : (this.droppedRowIndex === 0) ? 0 : this.droppedRowIndex - 1;\n            objectutils_1.ObjectUtils.reorderArray(this.value, this.draggedRowIndex, dropIndex);\n            this.onRowReorder.emit({\n                dragIndex: this.draggedRowIndex,\n                dropIndex: dropIndex\n            });\n        }\n        //cleanup\n        this.onRowDragLeave(event, rowElement);\n        this.onRowDragEnd(event);\n    };\n    Table.prototype.handleVirtualScroll = function (event) {\n        var _this = this;\n        this.first = (event.page - 1) * this.rows;\n        this.firstChange.emit(this.first);\n        this.virtualScrollCallback = event.callback;\n        this.zone.run(function () {\n            if (_this.virtualScrollTimer) {\n                clearTimeout(_this.virtualScrollTimer);\n            }\n            _this.virtualScrollTimer = setTimeout(function () {\n                _this.onLazyLoad.emit(_this.createLazyLoadMetadata());\n            }, _this.virtualScrollDelay);\n        });\n    };\n    Table.prototype.isEmpty = function () {\n        var data = this.filteredValue || this.value;\n        return data == null || data.length == 0;\n    };\n    Table.prototype.getBlockableElement = function () {\n        return this.el.nativeElement.children[0];\n    };\n    Table.prototype.getStorage = function () {\n        switch (this.stateStorage) {\n            case 'local':\n                return window.localStorage;\n            case 'session':\n                return window.sessionStorage;\n            default:\n                throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n        }\n    };\n    Table.prototype.isStateful = function () {\n        return this.stateKey != null;\n    };\n    Table.prototype.saveState = function () {\n        var storage = this.getStorage();\n        var state = {};\n        if (this.paginator) {\n            state.first = this.first;\n            state.rows = this.rows;\n        }\n        if (this.sortField) {\n            state.sortField = this.sortField;\n            state.sortOrder = this.sortOrder;\n        }\n        if (this.multiSortMeta) {\n            state.multiSortMeta = this.multiSortMeta;\n        }\n        if (this.hasFilter()) {\n            state.filters = this.filters;\n        }\n        if (this.resizableColumns) {\n            this.saveColumnWidths(state);\n        }\n        if (this.reorderableColumns) {\n            this.saveColumnOrder(state);\n        }\n        if (this.selection) {\n            state.selection = this.selection;\n        }\n        if (Object.keys(this.expandedRowKeys).length) {\n            state.expandedRowKeys = this.expandedRowKeys;\n        }\n        if (Object.keys(state).length) {\n            storage.setItem(this.stateKey, JSON.stringify(state));\n        }\n        this.onStateSave.emit(state);\n    };\n    Table.prototype.clearState = function () {\n        var storage = this.getStorage();\n        if (this.stateKey) {\n            storage.removeItem(this.stateKey);\n        }\n    };\n    Table.prototype.restoreState = function () {\n        var storage = this.getStorage();\n        var stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            var state = JSON.parse(stateString);\n            if (this.paginator) {\n                this.first = state.first;\n                this.rows = state.rows;\n                this.firstChange.emit(this.first);\n                this.rowsChange.emit(this.rows);\n            }\n            if (state.sortField) {\n                this.restoringSort = true;\n                this._sortField = state.sortField;\n                this._sortOrder = state.sortOrder;\n            }\n            if (state.multiSortMeta) {\n                this.restoringSort = true;\n                this._multiSortMeta = state.multiSortMeta;\n            }\n            if (state.filters) {\n                this.restoringFilter = true;\n                this.filters = state.filters;\n            }\n            if (this.resizableColumns) {\n                this.columnWidthsState = state.columnWidths;\n                this.tableWidthState = state.tableWidth;\n            }\n            if (state.expandedRowKeys) {\n                this.expandedRowKeys = state.expandedRowKeys;\n            }\n            if (state.selection) {\n                this.selection = state.selection;\n            }\n            this.stateRestored = true;\n            this.onStateRestore.emit(state);\n        }\n    };\n    Table.prototype.saveColumnWidths = function (state) {\n        var widths = [];\n        var headers = domhandler_1.DomHandler.find(this.containerViewChild.nativeElement, '.ui-table-thead > tr:first-child > th');\n        headers.map(function (header) { return widths.push(domhandler_1.DomHandler.getOuterWidth(header)); });\n        state.columnWidths = widths.join(',');\n        if (this.columnResizeMode === 'expand') {\n            state.tableWidth = this.scrollable ? domhandler_1.DomHandler.findSingle(this.containerViewChild.nativeElement, '.ui-table-scrollable-header-table').style.width :\n                domhandler_1.DomHandler.getOuterWidth(this.tableViewChild.nativeElement) + 'px';\n        }\n    };\n    Table.prototype.restoreColumnWidths = function () {\n        if (this.columnWidthsState) {\n            var widths_1 = this.columnWidthsState.split(',');\n            if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n                if (this.scrollable) {\n                    this.setScrollableItemsWidthOnExpandResize(null, this.tableWidthState, 0);\n                }\n                else {\n                    this.tableViewChild.nativeElement.style.width = this.tableWidthState;\n                    this.containerViewChild.nativeElement.style.width = this.tableWidthState;\n                }\n            }\n            if (this.scrollable) {\n                var headerCols = domhandler_1.DomHandler.find(this.containerViewChild.nativeElement, '.ui-table-scrollable-header-table > colgroup > col');\n                var bodyCols = domhandler_1.DomHandler.find(this.containerViewChild.nativeElement, '.ui-table-scrollable-body-table > colgroup > col');\n                headerCols.map(function (col, index) { return col.style.width = widths_1[index] + 'px'; });\n                bodyCols.map(function (col, index) { return col.style.width = widths_1[index] + 'px'; });\n            }\n            else {\n                var headers = domhandler_1.DomHandler.find(this.tableViewChild.nativeElement, '.ui-table-thead > tr:first-child > th');\n                headers.map(function (header, index) { return header.style.width = widths_1[index] + 'px'; });\n            }\n        }\n    };\n    Table.prototype.saveColumnOrder = function (state) {\n        if (this.columns) {\n            var columnOrder_1 = [];\n            this.columns.map(function (column) {\n                columnOrder_1.push(column.field || column.key);\n            });\n            state.columnOrder = columnOrder_1;\n        }\n    };\n    Table.prototype.restoreColumnOrder = function () {\n        var _this = this;\n        var storage = this.getStorage();\n        var stateString = storage.getItem(this.stateKey);\n        if (stateString) {\n            var state = JSON.parse(stateString);\n            var columnOrder = state.columnOrder;\n            if (columnOrder) {\n                var reorderedColumns_1 = [];\n                columnOrder.map(function (key) { return reorderedColumns_1.push(_this.findColumnByKey(key)); });\n                this.columnOrderStateRestored = true;\n                this.columns = reorderedColumns_1;\n            }\n        }\n    };\n    Table.prototype.findColumnByKey = function (key) {\n        if (this.columns) {\n            for (var _i = 0, _a = this.columns; _i < _a.length; _i++) {\n                var col = _a[_i];\n                if (col.key === key || col.field === key)\n                    return col;\n                else\n                    continue;\n            }\n        }\n        else {\n            return null;\n        }\n    };\n    Table.prototype.ngOnDestroy = function () {\n        this.unbindDocumentEditListener();\n        this.editingCell = null;\n        this.initialized = null;\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array)\n    ], Table.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array)\n    ], Table.prototype, \"frozenValue\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Table.prototype, \"style\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"styleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Table.prototype, \"tableStyle\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"tableStyleClass\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"paginator\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Table.prototype, \"pageLinks\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array)\n    ], Table.prototype, \"rowsPerPageOptions\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"alwaysShowPaginator\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"paginatorPosition\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Table.prototype, \"paginatorDropdownAppendTo\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"paginatorDropdownScrollHeight\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"currentPageReportTemplate\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"showCurrentPageReport\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Table.prototype, \"defaultSortOrder\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"sortMode\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"resetPageOnSort\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"selectionMode\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"selectionChange\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Table.prototype, \"contextMenuSelection\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"contextMenuSelectionChange\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"contextMenuSelectionMode\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"dataKey\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"metaKeySelection\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Function)\n    ], Table.prototype, \"rowTrackBy\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"lazy\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"lazyLoadOnInit\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"compareSelectionBy\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"csvSeparator\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"exportFilename\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Table.prototype, \"filters\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array)\n    ], Table.prototype, \"globalFilterFields\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Table.prototype, \"filterDelay\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Table.prototype, \"expandedRowKeys\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Table.prototype, \"editingRowKeys\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"rowExpandMode\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"scrollable\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"scrollHeight\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"virtualScroll\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Table.prototype, \"virtualScrollDelay\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], Table.prototype, \"virtualRowHeight\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"frozenWidth\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"responsive\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Table.prototype, \"contextMenu\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"resizableColumns\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"columnResizeMode\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"reorderableColumns\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"loading\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"loadingIcon\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"showLoader\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"rowHover\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"customSort\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], Table.prototype, \"autoLayout\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Table.prototype, \"exportFunction\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"stateKey\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"stateStorage\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], Table.prototype, \"editMode\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onRowSelect\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onRowUnselect\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onPage\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onSort\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onFilter\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onLazyLoad\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onRowExpand\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onRowCollapse\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onContextMenuSelect\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onColResize\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onColReorder\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onRowReorder\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onEditInit\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onEditComplete\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onEditCancel\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onHeaderCheckboxToggle\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"sortFunction\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"firstChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"rowsChange\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onStateSave\", void 0);\n    __decorate([\n        core_1.Output(),\n        __metadata(\"design:type\", core_1.EventEmitter)\n    ], Table.prototype, \"onStateRestore\", void 0);\n    __decorate([\n        core_1.ViewChild('container', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], Table.prototype, \"containerViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('resizeHelper', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], Table.prototype, \"resizeHelperViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('reorderIndicatorUp', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], Table.prototype, \"reorderIndicatorUpViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('reorderIndicatorDown', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], Table.prototype, \"reorderIndicatorDownViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('table', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], Table.prototype, \"tableViewChild\", void 0);\n    __decorate([\n        core_1.ContentChildren(shared_1.PrimeTemplate),\n        __metadata(\"design:type\", core_1.QueryList)\n    ], Table.prototype, \"templates\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], Table.prototype, \"value\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], Table.prototype, \"columns\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], Table.prototype, \"first\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], Table.prototype, \"rows\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], Table.prototype, \"totalRecords\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], Table.prototype, \"sortField\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], Table.prototype, \"sortOrder\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], Table.prototype, \"multiSortMeta\", null);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], Table.prototype, \"selection\", null);\n    Table = __decorate([\n        core_1.Component({\n            selector: 'p-table',\n            template: \"\\n        <div #container [ngStyle]=\\\"style\\\" [class]=\\\"styleClass\\\"\\n            [ngClass]=\\\"{'ui-table ui-widget': true, 'ui-table-responsive': responsive, 'ui-table-resizable': resizableColumns,\\n                'ui-table-resizable-fit': (resizableColumns && columnResizeMode === 'fit'),\\n                'ui-table-hoverable-rows': (rowHover||selectionMode), 'ui-table-auto-layout': autoLayout}\\\">\\n            <div class=\\\"ui-table-loading ui-widget-overlay\\\" *ngIf=\\\"loading && showLoader\\\"></div>\\n            <div class=\\\"ui-table-loading-content\\\" *ngIf=\\\"loading && showLoader\\\">\\n                <i [class]=\\\"'ui-table-loading-icon pi-spin ' + loadingIcon\\\"></i>\\n            </div>\\n            <div *ngIf=\\\"captionTemplate\\\" class=\\\"ui-table-caption ui-widget-header\\\">\\n                <ng-container *ngTemplateOutlet=\\\"captionTemplate\\\"></ng-container>\\n            </div>\\n            <p-paginator [rows]=\\\"rows\\\" [first]=\\\"first\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinkSize]=\\\"pageLinks\\\" styleClass=\\\"ui-paginator-top\\\" [alwaysShow]=\\\"alwaysShowPaginator\\\"\\n                (onPageChange)=\\\"onPageChange($event)\\\" [rowsPerPageOptions]=\\\"rowsPerPageOptions\\\" *ngIf=\\\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\\\"\\n                [templateLeft]=\\\"paginatorLeftTemplate\\\" [templateRight]=\\\"paginatorRightTemplate\\\" [dropdownAppendTo]=\\\"paginatorDropdownAppendTo\\\" [dropdownScrollHeight]=\\\"paginatorDropdownScrollHeight\\\"\\n                [currentPageReportTemplate]=\\\"currentPageReportTemplate\\\" [showCurrentPageReport]=\\\"showCurrentPageReport\\\"></p-paginator>\\n            \\n            <div class=\\\"ui-table-wrapper\\\" *ngIf=\\\"!scrollable\\\">\\n                <table #table [ngClass]=\\\"tableStyleClass\\\" [ngStyle]=\\\"tableStyle\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <thead class=\\\"ui-table-thead\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"headerTemplate; context: {$implicit: columns}\\\"></ng-container>\\n                    </thead>\\n                    <tfoot *ngIf=\\\"footerTemplate\\\" class=\\\"ui-table-tfoot\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"footerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </tfoot>\\n                    <tbody class=\\\"ui-table-tbody\\\" [pTableBody]=\\\"columns\\\" [pTableBodyTemplate]=\\\"bodyTemplate\\\"></tbody>\\n                </table>\\n            </div>\\n\\n            <div class=\\\"ui-table-scrollable-wrapper\\\" *ngIf=\\\"scrollable\\\">\\n               <div class=\\\"ui-table-scrollable-view ui-table-frozen-view\\\" *ngIf=\\\"frozenColumns||frozenBodyTemplate\\\" [pScrollableView]=\\\"frozenColumns\\\" [frozen]=\\\"true\\\" [ngStyle]=\\\"{width: frozenWidth}\\\" [scrollHeight]=\\\"scrollHeight\\\"></div>\\n               <div class=\\\"ui-table-scrollable-view\\\" [pScrollableView]=\\\"columns\\\" [frozen]=\\\"false\\\" [scrollHeight]=\\\"scrollHeight\\\" [ngStyle]=\\\"{left: frozenWidth, width: 'calc(100% - '+frozenWidth+')'}\\\"></div>\\n            </div>\\n            \\n            <p-paginator [rows]=\\\"rows\\\" [first]=\\\"first\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinkSize]=\\\"pageLinks\\\" styleClass=\\\"ui-paginator-bottom\\\" [alwaysShow]=\\\"alwaysShowPaginator\\\"\\n                (onPageChange)=\\\"onPageChange($event)\\\" [rowsPerPageOptions]=\\\"rowsPerPageOptions\\\" *ngIf=\\\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\\\"\\n                [templateLeft]=\\\"paginatorLeftTemplate\\\" [templateRight]=\\\"paginatorRightTemplate\\\" [dropdownAppendTo]=\\\"paginatorDropdownAppendTo\\\" [dropdownScrollHeight]=\\\"paginatorDropdownScrollHeight\\\"\\n                [currentPageReportTemplate]=\\\"currentPageReportTemplate\\\" [showCurrentPageReport]=\\\"showCurrentPageReport\\\"></p-paginator>\\n            \\n                <div *ngIf=\\\"summaryTemplate\\\" class=\\\"ui-table-summary ui-widget-header\\\">\\n                <ng-container *ngTemplateOutlet=\\\"summaryTemplate\\\"></ng-container>\\n            </div>\\n\\n            <div #resizeHelper class=\\\"ui-column-resizer-helper ui-state-highlight\\\" style=\\\"display:none\\\" *ngIf=\\\"resizableColumns\\\"></div>\\n\\n            <span #reorderIndicatorUp class=\\\"pi pi-arrow-down ui-table-reorder-indicator-up\\\" style=\\\"display:none\\\" *ngIf=\\\"reorderableColumns\\\"></span>\\n            <span #reorderIndicatorDown class=\\\"pi pi-arrow-up ui-table-reorder-indicator-down\\\" style=\\\"display:none\\\" *ngIf=\\\"reorderableColumns\\\"></span>\\n        </div>\\n    \",\n            providers: [TableService]\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef, core_1.NgZone, TableService, core_1.ChangeDetectorRef])\n    ], Table);\n    return Table;\n}());\nexports.Table = Table;\nvar TableBody = /** @class */ (function () {\n    function TableBody(dt) {\n        this.dt = dt;\n    }\n    __decorate([\n        core_1.Input(\"pTableBody\"),\n        __metadata(\"design:type\", Array)\n    ], TableBody.prototype, \"columns\", void 0);\n    __decorate([\n        core_1.Input(\"pTableBodyTemplate\"),\n        __metadata(\"design:type\", core_1.TemplateRef)\n    ], TableBody.prototype, \"template\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TableBody.prototype, \"frozen\", void 0);\n    TableBody = __decorate([\n        core_1.Component({\n            selector: '[pTableBody]',\n            template: \"\\n        <ng-container *ngIf=\\\"!dt.expandedRowTemplate\\\">\\n            <ng-template ngFor let-rowData let-rowIndex=\\\"index\\\" [ngForOf]=\\\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\\\" [ngForTrackBy]=\\\"dt.rowTrackBy\\\">\\n                <ng-container *ngTemplateOutlet=\\\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\\\"></ng-container>\\n            </ng-template>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"dt.expandedRowTemplate\\\">\\n            <ng-template ngFor let-rowData let-rowIndex=\\\"index\\\" [ngForOf]=\\\"(dt.paginator && !dt.lazy) ? ((dt.filteredValue||dt.value) | slice:dt.first:(dt.first + dt.rows)) : (dt.filteredValue||dt.value)\\\" [ngForTrackBy]=\\\"dt.rowTrackBy\\\">\\n                <ng-container *ngTemplateOutlet=\\\"template; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns, expanded: dt.isRowExpanded(rowData), editing: (dt.editMode === 'row' && dt.isRowEditing(rowData))}\\\"></ng-container>\\n                <ng-container *ngIf=\\\"dt.isRowExpanded(rowData)\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"dt.expandedRowTemplate; context: {$implicit: rowData, rowIndex: dt.paginator ? (dt.first + rowIndex) : rowIndex, columns: columns}\\\"></ng-container>\\n                </ng-container>\\n            </ng-template>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"dt.isEmpty()\\\">\\n            <ng-container *ngTemplateOutlet=\\\"dt.emptyMessageTemplate; context: {$implicit: columns, frozen: frozen}\\\"></ng-container>\\n        </ng-container>\\n    \"\n        }),\n        __metadata(\"design:paramtypes\", [Table])\n    ], TableBody);\n    return TableBody;\n}());\nexports.TableBody = TableBody;\nvar ScrollableView = /** @class */ (function () {\n    function ScrollableView(dt, el, zone) {\n        var _this = this;\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n        this.loadingArray = [];\n        this.subscription = this.dt.tableService.valueSource$.subscribe(function () {\n            _this.zone.runOutsideAngular(function () {\n                setTimeout(function () {\n                    _this.alignScrollBar();\n                    if (_this.scrollLoadingTableViewChild && _this.scrollLoadingTableViewChild.nativeElement) {\n                        _this.scrollLoadingTableViewChild.nativeElement.style.display = 'none';\n                    }\n                }, 50);\n            });\n        });\n        if (this.dt.virtualScroll) {\n            this.totalRecordsSubscription = this.dt.tableService.totalRecordsSource$.subscribe(function () {\n                _this.zone.runOutsideAngular(function () {\n                    setTimeout(function () {\n                        _this.setVirtualScrollerHeight();\n                    }, 50);\n                });\n            });\n        }\n        this.loadingArray = Array(this.dt.rows).fill(1);\n        this.initialized = false;\n    }\n    Object.defineProperty(ScrollableView.prototype, \"scrollHeight\", {\n        get: function () {\n            return this._scrollHeight;\n        },\n        set: function (val) {\n            this._scrollHeight = val;\n            this.setScrollHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScrollableView.prototype.ngAfterViewChecked = function () {\n        if (!this.initialized && this.el.nativeElement.offsetParent) {\n            this.alignScrollBar();\n            this.setScrollHeight();\n            this.initialized = true;\n        }\n    };\n    ScrollableView.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        if (!this.frozen) {\n            if (this.dt.frozenColumns || this.dt.frozenBodyTemplate) {\n                domhandler_1.DomHandler.addClass(this.el.nativeElement, 'ui-table-unfrozen-view');\n            }\n            var frozenView = this.el.nativeElement.previousElementSibling;\n            if (frozenView) {\n                this.frozenSiblingBody = domhandler_1.DomHandler.findSingle(frozenView, '.ui-table-scrollable-body');\n            }\n        }\n        else {\n            this.scrollBodyViewChild.nativeElement.style.paddingBottom = domhandler_1.DomHandler.calculateScrollbarWidth() + 'px';\n            var scrollableView = this.el.nativeElement.nextElementSibling;\n            if (scrollableView) {\n                this.scrollableSiblingBody = domhandler_1.DomHandler.findSingle(scrollableView, '.ui-table-scrollable-body');\n            }\n        }\n        this.bindEvents();\n        this.setScrollHeight();\n        this.alignScrollBar();\n        if (this.frozen) {\n            this.columnsSubscription = this.dt.tableService.columnsSource$.subscribe(function () {\n                _this.zone.runOutsideAngular(function () {\n                    setTimeout(function () {\n                        _this.setScrollHeight();\n                    }, 50);\n                });\n            });\n        }\n        if (this.dt.virtualScroll) {\n            this.setVirtualScrollerHeight();\n            if (this.scrollLoadingTableViewChild && this.scrollLoadingTableViewChild.nativeElement) {\n                this.scrollLoadingTableViewChild.nativeElement.style.display = 'table';\n            }\n        }\n    };\n    ScrollableView.prototype.bindEvents = function () {\n        var _this = this;\n        this.zone.runOutsideAngular(function () {\n            var scrollBarWidth = domhandler_1.DomHandler.calculateScrollbarWidth();\n            if (_this.scrollHeaderViewChild && _this.scrollHeaderViewChild.nativeElement) {\n                _this.headerScrollListener = _this.onHeaderScroll.bind(_this);\n                _this.scrollHeaderViewChild.nativeElement.addEventListener('scroll', _this.headerScrollListener);\n            }\n            if (_this.scrollFooterViewChild && _this.scrollFooterViewChild.nativeElement) {\n                _this.footerScrollListener = _this.onFooterScroll.bind(_this);\n                _this.scrollFooterViewChild.nativeElement.addEventListener('scroll', _this.footerScrollListener);\n            }\n            if (!_this.frozen) {\n                _this.bodyScrollListener = _this.onBodyScroll.bind(_this);\n                _this.scrollBodyViewChild.nativeElement.addEventListener('scroll', _this.bodyScrollListener);\n            }\n        });\n    };\n    ScrollableView.prototype.unbindEvents = function () {\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);\n        }\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);\n        }\n        this.scrollBodyViewChild.nativeElement.removeEventListener('scroll', this.bodyScrollListener);\n    };\n    ScrollableView.prototype.onHeaderScroll = function (event) {\n        var scrollLeft = this.scrollHeaderViewChild.nativeElement.scrollLeft;\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n        this.preventBodyScrollPropagation = true;\n    };\n    ScrollableView.prototype.onFooterScroll = function (event) {\n        var scrollLeft = this.scrollFooterViewChild.nativeElement.scrollLeft;\n        this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;\n        }\n        this.preventBodyScrollPropagation = true;\n    };\n    ScrollableView.prototype.onBodyScroll = function (event) {\n        var _this = this;\n        if (this.preventBodyScrollPropagation) {\n            this.preventBodyScrollPropagation = false;\n            return;\n        }\n        if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * this.scrollBodyViewChild.nativeElement.scrollLeft + 'px';\n        }\n        if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {\n            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * this.scrollBodyViewChild.nativeElement.scrollLeft + 'px';\n        }\n        if (this.frozenSiblingBody) {\n            this.frozenSiblingBody.scrollTop = this.scrollBodyViewChild.nativeElement.scrollTop;\n        }\n        if (this.dt.virtualScroll) {\n            var viewport = domhandler_1.DomHandler.getOuterHeight(this.scrollBodyViewChild.nativeElement);\n            var tableHeight = domhandler_1.DomHandler.getOuterHeight(this.scrollTableViewChild.nativeElement);\n            var pageHeight_1 = this.dt.virtualRowHeight * this.dt.rows;\n            var virtualTableHeight = domhandler_1.DomHandler.getOuterHeight(this.virtualScrollerViewChild.nativeElement);\n            var pageCount = (virtualTableHeight / pageHeight_1) || 1;\n            var scrollBodyTop = this.scrollTableViewChild.nativeElement.style.top || '0';\n            if ((this.scrollBodyViewChild.nativeElement.scrollTop + viewport > parseFloat(scrollBodyTop) + tableHeight) || (this.scrollBodyViewChild.nativeElement.scrollTop < parseFloat(scrollBodyTop))) {\n                if (this.scrollLoadingTableViewChild && this.scrollLoadingTableViewChild.nativeElement) {\n                    this.scrollLoadingTableViewChild.nativeElement.style.display = 'table';\n                    this.scrollLoadingTableViewChild.nativeElement.style.top = this.scrollBodyViewChild.nativeElement.scrollTop + 'px';\n                }\n                var page_1 = Math.floor((this.scrollBodyViewChild.nativeElement.scrollTop * pageCount) / (this.scrollBodyViewChild.nativeElement.scrollHeight)) + 1;\n                this.dt.handleVirtualScroll({\n                    page: page_1,\n                    callback: function () {\n                        if (_this.scrollLoadingTableViewChild && _this.scrollLoadingTableViewChild.nativeElement) {\n                            _this.scrollLoadingTableViewChild.nativeElement.style.display = 'none';\n                        }\n                        _this.scrollTableViewChild.nativeElement.style.top = ((page_1 - 1) * pageHeight_1) + 'px';\n                        if (_this.frozenSiblingBody) {\n                            _this.frozenSiblingBody.children[0].style.top = _this.scrollTableViewChild.nativeElement.style.top;\n                        }\n                        _this.dt.anchorRowIndex = null;\n                    }\n                });\n            }\n        }\n    };\n    ScrollableView.prototype.setScrollHeight = function () {\n        if (this.scrollHeight && this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {\n            if (this.scrollHeight.indexOf('%') !== -1) {\n                var relativeHeight = void 0;\n                this.scrollBodyViewChild.nativeElement.style.visibility = 'hidden';\n                this.scrollBodyViewChild.nativeElement.style.height = '100px'; //temporary height to calculate static height\n                var containerHeight = domhandler_1.DomHandler.getOuterHeight(this.dt.el.nativeElement.children[0]);\n                if (this.scrollHeight.includes(\"calc\")) {\n                    var percentHeight = parseInt(this.scrollHeight.slice(this.scrollHeight.indexOf(\"(\") + 1, this.scrollHeight.indexOf(\"%\")));\n                    var diffValue = parseInt(this.scrollHeight.slice(this.scrollHeight.indexOf(\"-\") + 1, this.scrollHeight.indexOf(\")\")));\n                    relativeHeight = (domhandler_1.DomHandler.getOuterHeight(this.dt.el.nativeElement.parentElement) * percentHeight / 100) - diffValue;\n                }\n                else {\n                    relativeHeight = domhandler_1.DomHandler.getOuterHeight(this.dt.el.nativeElement.parentElement) * parseInt(this.scrollHeight) / 100;\n                }\n                var staticHeight = containerHeight - 100; //total height of headers, footers, paginators\n                var scrollBodyHeight = (relativeHeight - staticHeight);\n                if (this.frozen) {\n                    scrollBodyHeight -= domhandler_1.DomHandler.calculateScrollbarWidth();\n                }\n                this.scrollBodyViewChild.nativeElement.style.height = 'auto';\n                this.scrollBodyViewChild.nativeElement.style.maxHeight = scrollBodyHeight + 'px';\n                this.scrollBodyViewChild.nativeElement.style.visibility = 'visible';\n            }\n            else {\n                if (this.frozen && this.scrollableSiblingBody && domhandler_1.DomHandler.getOuterWidth(this.scrollableSiblingBody) < domhandler_1.DomHandler.getOuterWidth(this.scrollableSiblingBody.children[0]))\n                    this.scrollBodyViewChild.nativeElement.style.maxHeight = (parseInt(this.scrollHeight) - domhandler_1.DomHandler.calculateScrollbarWidth()) + 'px';\n                else\n                    this.scrollBodyViewChild.nativeElement.style.maxHeight = this.scrollHeight;\n            }\n        }\n    };\n    ScrollableView.prototype.setVirtualScrollerHeight = function () {\n        if (this.virtualScrollerViewChild.nativeElement) {\n            this.virtualScrollerViewChild.nativeElement.style.height = this.dt.totalRecords * this.dt.virtualRowHeight + 'px';\n        }\n    };\n    ScrollableView.prototype.hasVerticalOverflow = function () {\n        return domhandler_1.DomHandler.getOuterHeight(this.scrollTableViewChild.nativeElement) > domhandler_1.DomHandler.getOuterHeight(this.scrollBodyViewChild.nativeElement);\n    };\n    ScrollableView.prototype.alignScrollBar = function () {\n        if (!this.frozen) {\n            var scrollBarWidth = this.hasVerticalOverflow() ? domhandler_1.DomHandler.calculateScrollbarWidth() : 0;\n            this.scrollHeaderBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';\n            if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {\n                this.scrollFooterBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';\n            }\n        }\n        this.initialized = false;\n    };\n    ScrollableView.prototype.ngOnDestroy = function () {\n        this.unbindEvents();\n        this.frozenSiblingBody = null;\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        if (this.totalRecordsSubscription) {\n            this.totalRecordsSubscription.unsubscribe();\n        }\n        if (this.columnsSubscription) {\n            this.columnsSubscription.unsubscribe();\n        }\n        this.initialized = false;\n    };\n    __decorate([\n        core_1.Input(\"pScrollableView\"),\n        __metadata(\"design:type\", Array)\n    ], ScrollableView.prototype, \"columns\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], ScrollableView.prototype, \"frozen\", void 0);\n    __decorate([\n        core_1.ViewChild('scrollHeader', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], ScrollableView.prototype, \"scrollHeaderViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('scrollHeaderBox', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], ScrollableView.prototype, \"scrollHeaderBoxViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('scrollBody', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], ScrollableView.prototype, \"scrollBodyViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('scrollTable', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], ScrollableView.prototype, \"scrollTableViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('loadingTable', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], ScrollableView.prototype, \"scrollLoadingTableViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('scrollFooter', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], ScrollableView.prototype, \"scrollFooterViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('scrollFooterBox', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], ScrollableView.prototype, \"scrollFooterBoxViewChild\", void 0);\n    __decorate([\n        core_1.ViewChild('virtualScroller', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], ScrollableView.prototype, \"virtualScrollerViewChild\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], ScrollableView.prototype, \"scrollHeight\", null);\n    ScrollableView = __decorate([\n        core_1.Component({\n            selector: '[pScrollableView]',\n            template: \"\\n        <div #scrollHeader class=\\\"ui-table-scrollable-header ui-widget-header\\\">\\n            <div #scrollHeaderBox class=\\\"ui-table-scrollable-header-box\\\">\\n                <table class=\\\"ui-table-scrollable-header-table\\\" [ngClass]=\\\"dt.tableStyleClass\\\" [ngStyle]=\\\"dt.tableStyle\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <thead class=\\\"ui-table-thead\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenHeaderTemplate||dt.headerTemplate : dt.headerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </thead>\\n                    <tbody class=\\\"ui-table-tbody\\\">\\n                        <ng-template ngFor let-rowData let-rowIndex=\\\"index\\\" [ngForOf]=\\\"dt.frozenValue\\\" [ngForTrackBy]=\\\"dt.rowTrackBy\\\">\\n                            <ng-container *ngTemplateOutlet=\\\"dt.frozenRowsTemplate; context: {$implicit: rowData, rowIndex: rowIndex, columns: columns}\\\"></ng-container>\\n                        </ng-template>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n        <div #scrollBody class=\\\"ui-table-scrollable-body\\\">\\n            <table #scrollTable [ngClass]=\\\"{'ui-table-scrollable-body-table': true, 'ui-table-virtual-table': dt.virtualScroll}\\\" [class]=\\\"dt.tableStyleClass\\\" [ngStyle]=\\\"dt.tableStyle\\\">\\n                <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                <tbody class=\\\"ui-table-tbody\\\" [pTableBody]=\\\"columns\\\" [pTableBodyTemplate]=\\\"frozen ? dt.frozenBodyTemplate||dt.bodyTemplate : dt.bodyTemplate\\\" [frozen]=\\\"frozen\\\"></tbody>\\n            </table>\\n            <table #loadingTable *ngIf=\\\"dt.virtualScroll && dt.loadingBodyTemplate != null\\\" [ngClass]=\\\"{'ui-table-scrollable-body-table ui-table-loading-virtual-table': true, 'ui-table-virtual-table': dt.virtualScroll}\\\">\\n                <tbody class=\\\"ui-table-tbody\\\">\\n                    <ng-template ngFor [ngForOf]=\\\"loadingArray\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"dt.loadingBodyTemplate; context: {columns: columns}\\\"></ng-container>\\n                    </ng-template>\\n                </tbody>\\n            </table>\\n            <div #virtualScroller class=\\\"ui-table-virtual-scroller\\\" *ngIf=\\\"dt.virtualScroll\\\"></div>\\n        </div>\\n        <div #scrollFooter *ngIf=\\\"dt.footerTemplate\\\" class=\\\"ui-table-scrollable-footer ui-widget-header\\\">\\n            <div #scrollFooterBox class=\\\"ui-table-scrollable-footer-box\\\">\\n                <table class=\\\"ui-table-scrollable-footer-table\\\" [ngClass]=\\\"dt.tableStyleClass\\\" [ngStyle]=\\\"dt.tableStyle\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenColGroupTemplate||dt.colGroupTemplate : dt.colGroupTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    <tfoot class=\\\"ui-table-tfoot\\\">\\n                        <ng-container *ngTemplateOutlet=\\\"frozen ? dt.frozenFooterTemplate||dt.footerTemplate : dt.footerTemplate; context {$implicit: columns}\\\"></ng-container>\\n                    </tfoot>\\n                </table>\\n            </div>\\n        </div>\\n    \"\n        }),\n        __metadata(\"design:paramtypes\", [Table, core_1.ElementRef, core_1.NgZone])\n    ], ScrollableView);\n    return ScrollableView;\n}());\nexports.ScrollableView = ScrollableView;\nvar SortableColumn = /** @class */ (function () {\n    function SortableColumn(dt) {\n        var _this = this;\n        this.dt = dt;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {\n                _this.updateSortState();\n            });\n        }\n    }\n    SortableColumn.prototype.ngOnInit = function () {\n        if (this.isEnabled()) {\n            this.updateSortState();\n        }\n    };\n    SortableColumn.prototype.updateSortState = function () {\n        this.sorted = this.dt.isSorted(this.field);\n    };\n    SortableColumn.prototype.onClick = function (event) {\n        if (this.isEnabled()) {\n            this.updateSortState();\n            this.dt.sort({\n                originalEvent: event,\n                field: this.field\n            });\n            domhandler_1.DomHandler.clearSelection();\n        }\n    };\n    SortableColumn.prototype.onEnterKey = function (event) {\n        this.onClick(event);\n    };\n    SortableColumn.prototype.isEnabled = function () {\n        return this.pSortableColumnDisabled !== true;\n    };\n    SortableColumn.prototype.ngOnDestroy = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    };\n    __decorate([\n        core_1.Input(\"pSortableColumn\"),\n        __metadata(\"design:type\", String)\n    ], SortableColumn.prototype, \"field\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SortableColumn.prototype, \"pSortableColumnDisabled\", void 0);\n    __decorate([\n        core_1.HostListener('click', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [MouseEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], SortableColumn.prototype, \"onClick\", null);\n    __decorate([\n        core_1.HostListener('keydown.enter', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [MouseEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], SortableColumn.prototype, \"onEnterKey\", null);\n    SortableColumn = __decorate([\n        core_1.Directive({\n            selector: '[pSortableColumn]',\n            host: {\n                '[class.ui-sortable-column]': 'isEnabled()',\n                '[class.ui-state-highlight]': 'sorted',\n                '[attr.tabindex]': 'isEnabled() ? \"0\" : null'\n            }\n        }),\n        __metadata(\"design:paramtypes\", [Table])\n    ], SortableColumn);\n    return SortableColumn;\n}());\nexports.SortableColumn = SortableColumn;\nvar SortIcon = /** @class */ (function () {\n    function SortIcon(dt) {\n        var _this = this;\n        this.dt = dt;\n        this.subscription = this.dt.tableService.sortSource$.subscribe(function (sortMeta) {\n            _this.updateSortState();\n        });\n    }\n    SortIcon.prototype.ngOnInit = function () {\n        this.updateSortState();\n    };\n    SortIcon.prototype.onClick = function (event) {\n        event.preventDefault();\n    };\n    SortIcon.prototype.updateSortState = function () {\n        if (this.dt.sortMode === 'single') {\n            this.sortOrder = this.dt.isSorted(this.field) ? this.dt.sortOrder : 0;\n        }\n        else if (this.dt.sortMode === 'multiple') {\n            var sortMeta = this.dt.getSortMeta(this.field);\n            this.sortOrder = sortMeta ? sortMeta.order : 0;\n        }\n    };\n    SortIcon.prototype.ngOnDestroy = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], SortIcon.prototype, \"field\", void 0);\n    SortIcon = __decorate([\n        core_1.Component({\n            selector: 'p-sortIcon',\n            template: \"\\n        <i class=\\\"ui-sortable-column-icon pi pi-fw\\\" [ngClass]=\\\"{'pi-sort-up': sortOrder === 1, 'pi-sort-down': sortOrder === -1, 'pi-sort': sortOrder === 0}\\\"></i>\\n    \"\n        }),\n        __metadata(\"design:paramtypes\", [Table])\n    ], SortIcon);\n    return SortIcon;\n}());\nexports.SortIcon = SortIcon;\nvar SelectableRow = /** @class */ (function () {\n    function SelectableRow(dt, tableService) {\n        var _this = this;\n        this.dt = dt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n                _this.selected = _this.dt.isSelected(_this.data);\n            });\n        }\n    }\n    SelectableRow.prototype.ngOnInit = function () {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    };\n    SelectableRow.prototype.onClick = function (event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    };\n    SelectableRow.prototype.onTouchEnd = function (event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowTouchEnd(event);\n        }\n    };\n    SelectableRow.prototype.onKeyDown = function (event) {\n        if (this.isEnabled()) {\n            var row = event.target;\n            switch (event.which) {\n                //down arrow\n                case 40:\n                    var nextRow = this.findNextSelectableRow(row);\n                    if (nextRow) {\n                        nextRow.focus();\n                    }\n                    event.preventDefault();\n                    break;\n                //up arrow\n                case 38:\n                    var prevRow = this.findPrevSelectableRow(row);\n                    if (prevRow) {\n                        prevRow.focus();\n                    }\n                    event.preventDefault();\n                    break;\n                //enter\n                case 13:\n                    this.dt.handleRowClick({\n                        originalEvent: event,\n                        rowData: this.data,\n                        rowIndex: this.index\n                    });\n                    break;\n                default:\n                    //no op\n                    break;\n            }\n        }\n    };\n    SelectableRow.prototype.findNextSelectableRow = function (row) {\n        var nextRow = row.nextElementSibling;\n        if (nextRow) {\n            if (domhandler_1.DomHandler.hasClass(nextRow, 'ui-selectable-row'))\n                return nextRow;\n            else\n                return this.findNextSelectableRow(nextRow);\n        }\n        else {\n            return null;\n        }\n    };\n    SelectableRow.prototype.findPrevSelectableRow = function (row) {\n        var prevRow = row.previousElementSibling;\n        if (prevRow) {\n            if (domhandler_1.DomHandler.hasClass(prevRow, 'ui-selectable-row'))\n                return prevRow;\n            else\n                return this.findPrevSelectableRow(prevRow);\n        }\n        else {\n            return null;\n        }\n    };\n    SelectableRow.prototype.isEnabled = function () {\n        return this.pSelectableRowDisabled !== true;\n    };\n    SelectableRow.prototype.ngOnDestroy = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    };\n    __decorate([\n        core_1.Input(\"pSelectableRow\"),\n        __metadata(\"design:type\", Object)\n    ], SelectableRow.prototype, \"data\", void 0);\n    __decorate([\n        core_1.Input(\"pSelectableRowIndex\"),\n        __metadata(\"design:type\", Number)\n    ], SelectableRow.prototype, \"index\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SelectableRow.prototype, \"pSelectableRowDisabled\", void 0);\n    __decorate([\n        core_1.HostListener('click', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectableRow.prototype, \"onClick\", null);\n    __decorate([\n        core_1.HostListener('touchend', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectableRow.prototype, \"onTouchEnd\", null);\n    __decorate([\n        core_1.HostListener('keydown', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [KeyboardEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectableRow.prototype, \"onKeyDown\", null);\n    SelectableRow = __decorate([\n        core_1.Directive({\n            selector: '[pSelectableRow]',\n            host: {\n                '[class.ui-selectable-row]': 'isEnabled()',\n                '[class.ui-state-highlight]': 'selected',\n                '[attr.tabindex]': 'isEnabled() ? 0 : undefined',\n            }\n        }),\n        __metadata(\"design:paramtypes\", [Table, TableService])\n    ], SelectableRow);\n    return SelectableRow;\n}());\nexports.SelectableRow = SelectableRow;\nvar SelectableRowDblClick = /** @class */ (function () {\n    function SelectableRowDblClick(dt, tableService) {\n        var _this = this;\n        this.dt = dt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n                _this.selected = _this.dt.isSelected(_this.data);\n            });\n        }\n    }\n    SelectableRowDblClick.prototype.ngOnInit = function () {\n        if (this.isEnabled()) {\n            this.selected = this.dt.isSelected(this.data);\n        }\n    };\n    SelectableRowDblClick.prototype.onClick = function (event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n        }\n    };\n    SelectableRowDblClick.prototype.isEnabled = function () {\n        return this.pSelectableRowDisabled !== true;\n    };\n    SelectableRowDblClick.prototype.ngOnDestroy = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    };\n    __decorate([\n        core_1.Input(\"pSelectableRowDblClick\"),\n        __metadata(\"design:type\", Object)\n    ], SelectableRowDblClick.prototype, \"data\", void 0);\n    __decorate([\n        core_1.Input(\"pSelectableRowIndex\"),\n        __metadata(\"design:type\", Number)\n    ], SelectableRowDblClick.prototype, \"index\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], SelectableRowDblClick.prototype, \"pSelectableRowDisabled\", void 0);\n    __decorate([\n        core_1.HostListener('dblclick', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectableRowDblClick.prototype, \"onClick\", null);\n    SelectableRowDblClick = __decorate([\n        core_1.Directive({\n            selector: '[pSelectableRowDblClick]',\n            host: {\n                '[class.ui-selectable-row]': 'isEnabled()',\n                '[class.ui-state-highlight]': 'selected'\n            }\n        }),\n        __metadata(\"design:paramtypes\", [Table, TableService])\n    ], SelectableRowDblClick);\n    return SelectableRowDblClick;\n}());\nexports.SelectableRowDblClick = SelectableRowDblClick;\nvar ContextMenuRow = /** @class */ (function () {\n    function ContextMenuRow(dt, tableService) {\n        var _this = this;\n        this.dt = dt;\n        this.tableService = tableService;\n        if (this.isEnabled()) {\n            this.subscription = this.dt.tableService.contextMenuSource$.subscribe(function (data) {\n                _this.selected = _this.dt.equals(_this.data, data);\n            });\n        }\n    }\n    ContextMenuRow.prototype.onContextMenu = function (event) {\n        if (this.isEnabled()) {\n            this.dt.handleRowRightClick({\n                originalEvent: event,\n                rowData: this.data,\n                rowIndex: this.index\n            });\n            event.preventDefault();\n        }\n    };\n    ContextMenuRow.prototype.isEnabled = function () {\n        return this.pContextMenuRowDisabled !== true;\n    };\n    ContextMenuRow.prototype.ngOnDestroy = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    };\n    __decorate([\n        core_1.Input(\"pContextMenuRow\"),\n        __metadata(\"design:type\", Object)\n    ], ContextMenuRow.prototype, \"data\", void 0);\n    __decorate([\n        core_1.Input(\"pContextMenuRowIndex\"),\n        __metadata(\"design:type\", Number)\n    ], ContextMenuRow.prototype, \"index\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], ContextMenuRow.prototype, \"pContextMenuRowDisabled\", void 0);\n    __decorate([\n        core_1.HostListener('contextmenu', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], ContextMenuRow.prototype, \"onContextMenu\", null);\n    ContextMenuRow = __decorate([\n        core_1.Directive({\n            selector: '[pContextMenuRow]',\n            host: {\n                '[class.ui-contextmenu-selected]': 'selected'\n            }\n        }),\n        __metadata(\"design:paramtypes\", [Table, TableService])\n    ], ContextMenuRow);\n    return ContextMenuRow;\n}());\nexports.ContextMenuRow = ContextMenuRow;\nvar RowToggler = /** @class */ (function () {\n    function RowToggler(dt) {\n        this.dt = dt;\n    }\n    RowToggler.prototype.onClick = function (event) {\n        if (this.isEnabled()) {\n            this.dt.toggleRow(this.data, event);\n            event.preventDefault();\n        }\n    };\n    RowToggler.prototype.isEnabled = function () {\n        return this.pRowTogglerDisabled !== true;\n    };\n    __decorate([\n        core_1.Input('pRowToggler'),\n        __metadata(\"design:type\", Object)\n    ], RowToggler.prototype, \"data\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RowToggler.prototype, \"pRowTogglerDisabled\", void 0);\n    __decorate([\n        core_1.HostListener('click', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], RowToggler.prototype, \"onClick\", null);\n    RowToggler = __decorate([\n        core_1.Directive({\n            selector: '[pRowToggler]'\n        }),\n        __metadata(\"design:paramtypes\", [Table])\n    ], RowToggler);\n    return RowToggler;\n}());\nexports.RowToggler = RowToggler;\nvar ResizableColumn = /** @class */ (function () {\n    function ResizableColumn(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ResizableColumn.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        if (this.isEnabled()) {\n            domhandler_1.DomHandler.addClass(this.el.nativeElement, 'ui-resizable-column');\n            this.resizer = document.createElement('span');\n            this.resizer.className = 'ui-column-resizer ui-clickable';\n            this.el.nativeElement.appendChild(this.resizer);\n            this.zone.runOutsideAngular(function () {\n                _this.resizerMouseDownListener = _this.onMouseDown.bind(_this);\n                _this.resizer.addEventListener('mousedown', _this.resizerMouseDownListener);\n            });\n        }\n    };\n    ResizableColumn.prototype.bindDocumentEvents = function () {\n        var _this = this;\n        this.zone.runOutsideAngular(function () {\n            _this.documentMouseMoveListener = _this.onDocumentMouseMove.bind(_this);\n            document.addEventListener('mousemove', _this.documentMouseMoveListener);\n            _this.documentMouseUpListener = _this.onDocumentMouseUp.bind(_this);\n            document.addEventListener('mouseup', _this.documentMouseUpListener);\n        });\n    };\n    ResizableColumn.prototype.unbindDocumentEvents = function () {\n        if (this.documentMouseMoveListener) {\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\n            this.documentMouseMoveListener = null;\n        }\n        if (this.documentMouseUpListener) {\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\n            this.documentMouseUpListener = null;\n        }\n    };\n    ResizableColumn.prototype.onMouseDown = function (event) {\n        this.dt.onColumnResizeBegin(event);\n        this.bindDocumentEvents();\n    };\n    ResizableColumn.prototype.onDocumentMouseMove = function (event) {\n        this.dt.onColumnResize(event);\n    };\n    ResizableColumn.prototype.onDocumentMouseUp = function (event) {\n        this.dt.onColumnResizeEnd(event, this.el.nativeElement);\n        this.unbindDocumentEvents();\n    };\n    ResizableColumn.prototype.isEnabled = function () {\n        return this.pResizableColumnDisabled !== true;\n    };\n    ResizableColumn.prototype.ngOnDestroy = function () {\n        if (this.resizerMouseDownListener) {\n            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\n        }\n        this.unbindDocumentEvents();\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], ResizableColumn.prototype, \"pResizableColumnDisabled\", void 0);\n    ResizableColumn = __decorate([\n        core_1.Directive({\n            selector: '[pResizableColumn]'\n        }),\n        __metadata(\"design:paramtypes\", [Table, core_1.ElementRef, core_1.NgZone])\n    ], ResizableColumn);\n    return ResizableColumn;\n}());\nexports.ResizableColumn = ResizableColumn;\nvar ReorderableColumn = /** @class */ (function () {\n    function ReorderableColumn(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ReorderableColumn.prototype.ngAfterViewInit = function () {\n        if (this.isEnabled()) {\n            this.bindEvents();\n        }\n    };\n    ReorderableColumn.prototype.bindEvents = function () {\n        var _this = this;\n        this.zone.runOutsideAngular(function () {\n            _this.mouseDownListener = _this.onMouseDown.bind(_this);\n            _this.el.nativeElement.addEventListener('mousedown', _this.mouseDownListener);\n            _this.dragStartListener = _this.onDragStart.bind(_this);\n            _this.el.nativeElement.addEventListener('dragstart', _this.dragStartListener);\n            _this.dragOverListener = _this.onDragEnter.bind(_this);\n            _this.el.nativeElement.addEventListener('dragover', _this.dragOverListener);\n            _this.dragEnterListener = _this.onDragEnter.bind(_this);\n            _this.el.nativeElement.addEventListener('dragenter', _this.dragEnterListener);\n            _this.dragLeaveListener = _this.onDragLeave.bind(_this);\n            _this.el.nativeElement.addEventListener('dragleave', _this.dragLeaveListener);\n        });\n    };\n    ReorderableColumn.prototype.unbindEvents = function () {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n        if (this.dragEnterListener) {\n            document.removeEventListener('dragenter', this.dragEnterListener);\n            this.dragEnterListener = null;\n        }\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    };\n    ReorderableColumn.prototype.onMouseDown = function (event) {\n        if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || domhandler_1.DomHandler.hasClass(event.target, 'ui-column-resizer'))\n            this.el.nativeElement.draggable = false;\n        else\n            this.el.nativeElement.draggable = true;\n    };\n    ReorderableColumn.prototype.onDragStart = function (event) {\n        this.dt.onColumnDragStart(event, this.el.nativeElement);\n    };\n    ReorderableColumn.prototype.onDragOver = function (event) {\n        event.preventDefault();\n    };\n    ReorderableColumn.prototype.onDragEnter = function (event) {\n        this.dt.onColumnDragEnter(event, this.el.nativeElement);\n    };\n    ReorderableColumn.prototype.onDragLeave = function (event) {\n        this.dt.onColumnDragLeave(event);\n    };\n    ReorderableColumn.prototype.onDrop = function (event) {\n        if (this.isEnabled()) {\n            this.dt.onColumnDrop(event, this.el.nativeElement);\n        }\n    };\n    ReorderableColumn.prototype.isEnabled = function () {\n        return this.pReorderableColumnDisabled !== true;\n    };\n    ReorderableColumn.prototype.ngOnDestroy = function () {\n        this.unbindEvents();\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], ReorderableColumn.prototype, \"pReorderableColumnDisabled\", void 0);\n    __decorate([\n        core_1.HostListener('drop', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], ReorderableColumn.prototype, \"onDrop\", null);\n    ReorderableColumn = __decorate([\n        core_1.Directive({\n            selector: '[pReorderableColumn]'\n        }),\n        __metadata(\"design:paramtypes\", [Table, core_1.ElementRef, core_1.NgZone])\n    ], ReorderableColumn);\n    return ReorderableColumn;\n}());\nexports.ReorderableColumn = ReorderableColumn;\nvar EditableColumn = /** @class */ (function () {\n    function EditableColumn(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    EditableColumn.prototype.ngAfterViewInit = function () {\n        if (this.isEnabled()) {\n            domhandler_1.DomHandler.addClass(this.el.nativeElement, 'ui-editable-column');\n        }\n    };\n    EditableColumn.prototype.onClick = function (event) {\n        if (this.isEnabled()) {\n            this.dt.editingCellClick = true;\n            if (this.dt.editingCell) {\n                if (this.dt.editingCell !== this.el.nativeElement) {\n                    if (!this.dt.isEditingCellValid()) {\n                        return;\n                    }\n                    domhandler_1.DomHandler.removeClass(this.dt.editingCell, 'ui-editing-cell');\n                    this.openCell();\n                }\n            }\n            else {\n                this.openCell();\n            }\n        }\n    };\n    EditableColumn.prototype.openCell = function () {\n        var _this = this;\n        this.dt.updateEditingCell(this.el.nativeElement, this.data, this.field);\n        domhandler_1.DomHandler.addClass(this.el.nativeElement, 'ui-editing-cell');\n        this.dt.onEditInit.emit({ field: this.field, data: this.data });\n        this.zone.runOutsideAngular(function () {\n            setTimeout(function () {\n                var focusCellSelector = _this.pFocusCellSelector || 'input, textarea, select';\n                var focusableElement = domhandler_1.DomHandler.findSingle(_this.el.nativeElement, focusCellSelector);\n                if (focusableElement) {\n                    focusableElement.focus();\n                }\n            }, 50);\n        });\n    };\n    EditableColumn.prototype.closeEditingCell = function () {\n        domhandler_1.DomHandler.removeClass(this.dt.editingCell, 'ui-editing-cell');\n        this.dt.editingCell = null;\n        this.dt.editingCellData = null;\n        this.dt.editingCellField = null;\n        this.dt.unbindDocumentEditListener();\n    };\n    EditableColumn.prototype.onKeyDown = function (event) {\n        if (this.isEnabled()) {\n            //enter\n            if (event.keyCode == 13) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell();\n                    this.dt.onEditComplete.emit({ field: this.field, data: this.data });\n                }\n                event.preventDefault();\n            }\n            //escape\n            else if (event.keyCode == 27) {\n                if (this.dt.isEditingCellValid()) {\n                    this.closeEditingCell();\n                    this.dt.onEditCancel.emit({ field: this.field, data: this.data });\n                }\n                event.preventDefault();\n            }\n            //tab\n            else if (event.keyCode == 9) {\n                this.dt.onEditComplete.emit({ field: this.field, data: this.data });\n                if (event.shiftKey)\n                    this.moveToPreviousCell(event);\n                else\n                    this.moveToNextCell(event);\n            }\n        }\n    };\n    EditableColumn.prototype.findCell = function (element) {\n        if (element) {\n            var cell = element;\n            while (cell && !domhandler_1.DomHandler.hasClass(cell, 'ui-editing-cell')) {\n                cell = cell.parentElement;\n            }\n            return cell;\n        }\n        else {\n            return null;\n        }\n    };\n    EditableColumn.prototype.moveToPreviousCell = function (event) {\n        var currentCell = this.findCell(event.target);\n        var row = currentCell.parentElement;\n        var targetCell = this.findPreviousEditableColumn(currentCell);\n        if (targetCell) {\n            domhandler_1.DomHandler.invokeElementMethod(event.target, 'blur');\n            domhandler_1.DomHandler.invokeElementMethod(targetCell, 'click');\n            event.preventDefault();\n        }\n    };\n    EditableColumn.prototype.moveToNextCell = function (event) {\n        var currentCell = this.findCell(event.target);\n        var row = currentCell.parentElement;\n        var targetCell = this.findNextEditableColumn(currentCell);\n        if (targetCell) {\n            domhandler_1.DomHandler.invokeElementMethod(event.target, 'blur');\n            domhandler_1.DomHandler.invokeElementMethod(targetCell, 'click');\n            event.preventDefault();\n        }\n    };\n    EditableColumn.prototype.findPreviousEditableColumn = function (cell) {\n        var prevCell = cell.previousElementSibling;\n        if (!prevCell) {\n            var previousRow = cell.parentElement.previousElementSibling;\n            if (previousRow) {\n                prevCell = previousRow.lastElementChild;\n            }\n        }\n        if (prevCell) {\n            if (domhandler_1.DomHandler.hasClass(prevCell, 'ui-editable-column'))\n                return prevCell;\n            else\n                return this.findPreviousEditableColumn(prevCell);\n        }\n        else {\n            return null;\n        }\n    };\n    EditableColumn.prototype.findNextEditableColumn = function (cell) {\n        var nextCell = cell.nextElementSibling;\n        if (!nextCell) {\n            var nextRow = cell.parentElement.nextElementSibling;\n            if (nextRow) {\n                nextCell = nextRow.firstElementChild;\n            }\n        }\n        if (nextCell) {\n            if (domhandler_1.DomHandler.hasClass(nextCell, 'ui-editable-column'))\n                return nextCell;\n            else\n                return this.findNextEditableColumn(nextCell);\n        }\n        else {\n            return null;\n        }\n    };\n    EditableColumn.prototype.isEnabled = function () {\n        return this.pEditableColumnDisabled !== true;\n    };\n    __decorate([\n        core_1.Input(\"pEditableColumn\"),\n        __metadata(\"design:type\", Object)\n    ], EditableColumn.prototype, \"data\", void 0);\n    __decorate([\n        core_1.Input(\"pEditableColumnField\"),\n        __metadata(\"design:type\", Object)\n    ], EditableColumn.prototype, \"field\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], EditableColumn.prototype, \"pEditableColumnDisabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", String)\n    ], EditableColumn.prototype, \"pFocusCellSelector\", void 0);\n    __decorate([\n        core_1.HostListener('click', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [MouseEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], EditableColumn.prototype, \"onClick\", null);\n    __decorate([\n        core_1.HostListener('keydown', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [KeyboardEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], EditableColumn.prototype, \"onKeyDown\", null);\n    EditableColumn = __decorate([\n        core_1.Directive({\n            selector: '[pEditableColumn]'\n        }),\n        __metadata(\"design:paramtypes\", [Table, core_1.ElementRef, core_1.NgZone])\n    ], EditableColumn);\n    return EditableColumn;\n}());\nexports.EditableColumn = EditableColumn;\nvar EditableRow = /** @class */ (function () {\n    function EditableRow(el) {\n        this.el = el;\n    }\n    EditableRow.prototype.isEnabled = function () {\n        return this.pEditableRowDisabled !== true;\n    };\n    __decorate([\n        core_1.Input(\"pEditableRow\"),\n        __metadata(\"design:type\", Object)\n    ], EditableRow.prototype, \"data\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], EditableRow.prototype, \"pEditableRowDisabled\", void 0);\n    EditableRow = __decorate([\n        core_1.Directive({\n            selector: '[pEditableRow]'\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\n    ], EditableRow);\n    return EditableRow;\n}());\nexports.EditableRow = EditableRow;\nvar InitEditableRow = /** @class */ (function () {\n    function InitEditableRow(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    InitEditableRow.prototype.onClick = function (event) {\n        this.dt.initRowEdit(this.editableRow.data);\n        event.preventDefault();\n    };\n    __decorate([\n        core_1.HostListener('click', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], InitEditableRow.prototype, \"onClick\", null);\n    InitEditableRow = __decorate([\n        core_1.Directive({\n            selector: '[pInitEditableRow]'\n        }),\n        __metadata(\"design:paramtypes\", [Table, EditableRow])\n    ], InitEditableRow);\n    return InitEditableRow;\n}());\nexports.InitEditableRow = InitEditableRow;\nvar SaveEditableRow = /** @class */ (function () {\n    function SaveEditableRow(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    SaveEditableRow.prototype.onClick = function (event) {\n        this.dt.saveRowEdit(this.editableRow.data, this.editableRow.el.nativeElement);\n        event.preventDefault();\n    };\n    __decorate([\n        core_1.HostListener('click', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], SaveEditableRow.prototype, \"onClick\", null);\n    SaveEditableRow = __decorate([\n        core_1.Directive({\n            selector: '[pSaveEditableRow]'\n        }),\n        __metadata(\"design:paramtypes\", [Table, EditableRow])\n    ], SaveEditableRow);\n    return SaveEditableRow;\n}());\nexports.SaveEditableRow = SaveEditableRow;\nvar CancelEditableRow = /** @class */ (function () {\n    function CancelEditableRow(dt, editableRow) {\n        this.dt = dt;\n        this.editableRow = editableRow;\n    }\n    CancelEditableRow.prototype.onClick = function (event) {\n        this.dt.cancelRowEdit(this.editableRow.data);\n        event.preventDefault();\n    };\n    __decorate([\n        core_1.HostListener('click', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Event]),\n        __metadata(\"design:returntype\", void 0)\n    ], CancelEditableRow.prototype, \"onClick\", null);\n    CancelEditableRow = __decorate([\n        core_1.Directive({\n            selector: '[pCancelEditableRow]'\n        }),\n        __metadata(\"design:paramtypes\", [Table, EditableRow])\n    ], CancelEditableRow);\n    return CancelEditableRow;\n}());\nexports.CancelEditableRow = CancelEditableRow;\nvar CellEditor = /** @class */ (function () {\n    function CellEditor(dt, editableColumn, editableRow) {\n        this.dt = dt;\n        this.editableColumn = editableColumn;\n        this.editableRow = editableRow;\n    }\n    CellEditor.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.templates.forEach(function (item) {\n            switch (item.getType()) {\n                case 'input':\n                    _this.inputTemplate = item.template;\n                    break;\n                case 'output':\n                    _this.outputTemplate = item.template;\n                    break;\n            }\n        });\n    };\n    Object.defineProperty(CellEditor.prototype, \"editing\", {\n        get: function () {\n            return (this.dt.editingCell && this.editableColumn && this.dt.editingCell === this.editableColumn.el.nativeElement) ||\n                (this.editableRow && this.dt.editMode === 'row' && this.dt.isRowEditing(this.editableRow.data));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    __decorate([\n        core_1.ContentChildren(shared_1.PrimeTemplate),\n        __metadata(\"design:type\", core_1.QueryList)\n    ], CellEditor.prototype, \"templates\", void 0);\n    CellEditor = __decorate([\n        core_1.Component({\n            selector: 'p-cellEditor',\n            template: \"\\n        <ng-container *ngIf=\\\"editing\\\">\\n            <ng-container *ngTemplateOutlet=\\\"inputTemplate\\\"></ng-container>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"!editing\\\">\\n            <ng-container *ngTemplateOutlet=\\\"outputTemplate\\\"></ng-container>\\n        </ng-container>\\n    \"\n        }),\n        __param(1, core_1.Optional()), __param(2, core_1.Optional()),\n        __metadata(\"design:paramtypes\", [Table, EditableColumn, EditableRow])\n    ], CellEditor);\n    return CellEditor;\n}());\nexports.CellEditor = CellEditor;\nvar TableRadioButton = /** @class */ (function () {\n    function TableRadioButton(dt, tableService) {\n        var _this = this;\n        this.dt = dt;\n        this.tableService = tableService;\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n            _this.checked = _this.dt.isSelected(_this.value);\n        });\n    }\n    TableRadioButton.prototype.ngOnInit = function () {\n        this.checked = this.dt.isSelected(this.value);\n    };\n    TableRadioButton.prototype.onClick = function (event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithRadio({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        domhandler_1.DomHandler.clearSelection();\n    };\n    TableRadioButton.prototype.onFocus = function () {\n        domhandler_1.DomHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');\n    };\n    TableRadioButton.prototype.onBlur = function () {\n        domhandler_1.DomHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');\n    };\n    TableRadioButton.prototype.ngOnDestroy = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TableRadioButton.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], TableRadioButton.prototype, \"value\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], TableRadioButton.prototype, \"index\", void 0);\n    __decorate([\n        core_1.ViewChild('box', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], TableRadioButton.prototype, \"boxViewChild\", void 0);\n    TableRadioButton = __decorate([\n        core_1.Component({\n            selector: 'p-tableRadioButton',\n            template: \"\\n        <div class=\\\"ui-radiobutton ui-widget\\\" (click)=\\\"onClick($event)\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input type=\\\"radio\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\" [disabled]=\\\"disabled\\\">\\n            </div>\\n            <div #box [ngClass]=\\\"{'ui-radiobutton-box ui-widget ui-state-default':true,\\n                'ui-state-active':checked, 'ui-state-disabled':disabled}\\\">\\n                <span class=\\\"ui-radiobutton-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-circle-on':checked}\\\"></span>\\n            </div>\\n        </div>\\n    \"\n        }),\n        __metadata(\"design:paramtypes\", [Table, TableService])\n    ], TableRadioButton);\n    return TableRadioButton;\n}());\nexports.TableRadioButton = TableRadioButton;\nvar TableCheckbox = /** @class */ (function () {\n    function TableCheckbox(dt, tableService) {\n        var _this = this;\n        this.dt = dt;\n        this.tableService = tableService;\n        this.subscription = this.dt.tableService.selectionSource$.subscribe(function () {\n            _this.checked = _this.dt.isSelected(_this.value);\n        });\n    }\n    TableCheckbox.prototype.ngOnInit = function () {\n        this.checked = this.dt.isSelected(this.value);\n    };\n    TableCheckbox.prototype.onClick = function (event) {\n        if (!this.disabled) {\n            this.dt.toggleRowWithCheckbox({\n                originalEvent: event,\n                rowIndex: this.index\n            }, this.value);\n        }\n        domhandler_1.DomHandler.clearSelection();\n    };\n    TableCheckbox.prototype.onFocus = function () {\n        domhandler_1.DomHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');\n    };\n    TableCheckbox.prototype.onBlur = function () {\n        domhandler_1.DomHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');\n    };\n    TableCheckbox.prototype.ngOnDestroy = function () {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    };\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TableCheckbox.prototype, \"disabled\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], TableCheckbox.prototype, \"value\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Number)\n    ], TableCheckbox.prototype, \"index\", void 0);\n    __decorate([\n        core_1.ViewChild('box', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], TableCheckbox.prototype, \"boxViewChild\", void 0);\n    TableCheckbox = __decorate([\n        core_1.Component({\n            selector: 'p-tableCheckbox',\n            template: \"\\n        <div class=\\\"ui-chkbox ui-widget\\\" (click)=\\\"onClick($event)\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input type=\\\"checkbox\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\" [disabled]=\\\"disabled\\\">\\n            </div>\\n            <div #box [ngClass]=\\\"{'ui-chkbox-box ui-widget ui-state-default':true,\\n                'ui-state-active':checked, 'ui-state-disabled':disabled}\\\">\\n                <span class=\\\"ui-chkbox-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-check':checked}\\\"></span>\\n            </div>\\n        </div>\\n    \"\n        }),\n        __metadata(\"design:paramtypes\", [Table, TableService])\n    ], TableCheckbox);\n    return TableCheckbox;\n}());\nexports.TableCheckbox = TableCheckbox;\nvar TableHeaderCheckbox = /** @class */ (function () {\n    function TableHeaderCheckbox(dt, tableService) {\n        var _this = this;\n        this.dt = dt;\n        this.tableService = tableService;\n        this.valueChangeSubscription = this.dt.tableService.valueSource$.subscribe(function () {\n            _this.checked = _this.updateCheckedState();\n        });\n        this.selectionChangeSubscription = this.dt.tableService.selectionSource$.subscribe(function () {\n            _this.checked = _this.updateCheckedState();\n        });\n    }\n    TableHeaderCheckbox.prototype.ngOnInit = function () {\n        this.checked = this.updateCheckedState();\n    };\n    TableHeaderCheckbox.prototype.onClick = function (event) {\n        if (!this.disabled) {\n            if (this.dt.value && this.dt.value.length > 0) {\n                this.dt.toggleRowsWithCheckbox(event, !this.checked);\n            }\n        }\n        domhandler_1.DomHandler.clearSelection();\n    };\n    TableHeaderCheckbox.prototype.onFocus = function () {\n        domhandler_1.DomHandler.addClass(this.boxViewChild.nativeElement, 'ui-state-focus');\n    };\n    TableHeaderCheckbox.prototype.onBlur = function () {\n        domhandler_1.DomHandler.removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');\n    };\n    TableHeaderCheckbox.prototype.isDisabled = function () {\n        return this.disabled || !this.dt.value || !this.dt.value.length;\n    };\n    TableHeaderCheckbox.prototype.ngOnDestroy = function () {\n        if (this.selectionChangeSubscription) {\n            this.selectionChangeSubscription.unsubscribe();\n        }\n        if (this.valueChangeSubscription) {\n            this.valueChangeSubscription.unsubscribe();\n        }\n    };\n    TableHeaderCheckbox.prototype.updateCheckedState = function () {\n        if (this.dt.filteredValue) {\n            var val = this.dt.filteredValue;\n            return (val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.isAllFilteredValuesChecked());\n        }\n        else {\n            var val = this.dt.value;\n            return (val && val.length > 0 && this.dt.selection && this.dt.selection.length > 0 && this.dt.selection.length === val.length);\n        }\n    };\n    TableHeaderCheckbox.prototype.isAllFilteredValuesChecked = function () {\n        if (!this.dt.filteredValue) {\n            return false;\n        }\n        else {\n            for (var _i = 0, _a = this.dt.filteredValue; _i < _a.length; _i++) {\n                var rowData = _a[_i];\n                if (!this.dt.isSelected(rowData)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    };\n    __decorate([\n        core_1.ViewChild('box', { static: false }),\n        __metadata(\"design:type\", core_1.ElementRef)\n    ], TableHeaderCheckbox.prototype, \"boxViewChild\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], TableHeaderCheckbox.prototype, \"disabled\", void 0);\n    TableHeaderCheckbox = __decorate([\n        core_1.Component({\n            selector: 'p-tableHeaderCheckbox',\n            template: \"\\n        <div class=\\\"ui-chkbox ui-widget\\\" (click)=\\\"onClick($event)\\\">\\n            <div class=\\\"ui-helper-hidden-accessible\\\">\\n                <input #cb type=\\\"checkbox\\\" [checked]=\\\"checked\\\" (focus)=\\\"onFocus()\\\" (blur)=\\\"onBlur()\\\" [disabled]=\\\"isDisabled()\\\">\\n            </div>\\n            <div #box [ngClass]=\\\"{'ui-chkbox-box ui-widget ui-state-default':true,\\n                'ui-state-active':checked, 'ui-state-disabled': isDisabled()}\\\">\\n                <span class=\\\"ui-chkbox-icon ui-clickable\\\" [ngClass]=\\\"{'pi pi-check':checked}\\\"></span>\\n            </div>\\n        </div>\\n    \"\n        }),\n        __metadata(\"design:paramtypes\", [Table, TableService])\n    ], TableHeaderCheckbox);\n    return TableHeaderCheckbox;\n}());\nexports.TableHeaderCheckbox = TableHeaderCheckbox;\nvar ReorderableRowHandle = /** @class */ (function () {\n    function ReorderableRowHandle(el) {\n        this.el = el;\n    }\n    ReorderableRowHandle.prototype.ngAfterViewInit = function () {\n        domhandler_1.DomHandler.addClass(this.el.nativeElement, 'ui-table-reorderablerow-handle');\n    };\n    __decorate([\n        core_1.Input(\"pReorderableRowHandle\"),\n        __metadata(\"design:type\", Number)\n    ], ReorderableRowHandle.prototype, \"index\", void 0);\n    ReorderableRowHandle = __decorate([\n        core_1.Directive({\n            selector: '[pReorderableRowHandle]'\n        }),\n        __metadata(\"design:paramtypes\", [core_1.ElementRef])\n    ], ReorderableRowHandle);\n    return ReorderableRowHandle;\n}());\nexports.ReorderableRowHandle = ReorderableRowHandle;\nvar ReorderableRow = /** @class */ (function () {\n    function ReorderableRow(dt, el, zone) {\n        this.dt = dt;\n        this.el = el;\n        this.zone = zone;\n    }\n    ReorderableRow.prototype.ngAfterViewInit = function () {\n        if (this.isEnabled()) {\n            this.el.nativeElement.droppable = true;\n            this.bindEvents();\n        }\n    };\n    ReorderableRow.prototype.bindEvents = function () {\n        var _this = this;\n        this.zone.runOutsideAngular(function () {\n            _this.mouseDownListener = _this.onMouseDown.bind(_this);\n            _this.el.nativeElement.addEventListener('mousedown', _this.mouseDownListener);\n            _this.dragStartListener = _this.onDragStart.bind(_this);\n            _this.el.nativeElement.addEventListener('dragstart', _this.dragStartListener);\n            _this.dragEndListener = _this.onDragEnd.bind(_this);\n            _this.el.nativeElement.addEventListener('dragend', _this.dragEndListener);\n            _this.dragOverListener = _this.onDragOver.bind(_this);\n            _this.el.nativeElement.addEventListener('dragover', _this.dragOverListener);\n            _this.dragLeaveListener = _this.onDragLeave.bind(_this);\n            _this.el.nativeElement.addEventListener('dragleave', _this.dragLeaveListener);\n        });\n    };\n    ReorderableRow.prototype.unbindEvents = function () {\n        if (this.mouseDownListener) {\n            document.removeEventListener('mousedown', this.mouseDownListener);\n            this.mouseDownListener = null;\n        }\n        if (this.dragStartListener) {\n            document.removeEventListener('dragstart', this.dragStartListener);\n            this.dragStartListener = null;\n        }\n        if (this.dragEndListener) {\n            document.removeEventListener('dragend', this.dragEndListener);\n            this.dragEndListener = null;\n        }\n        if (this.dragOverListener) {\n            document.removeEventListener('dragover', this.dragOverListener);\n            this.dragOverListener = null;\n        }\n        if (this.dragLeaveListener) {\n            document.removeEventListener('dragleave', this.dragLeaveListener);\n            this.dragLeaveListener = null;\n        }\n    };\n    ReorderableRow.prototype.onMouseDown = function (event) {\n        if (domhandler_1.DomHandler.hasClass(event.target, 'ui-table-reorderablerow-handle'))\n            this.el.nativeElement.draggable = true;\n        else\n            this.el.nativeElement.draggable = false;\n    };\n    ReorderableRow.prototype.onDragStart = function (event) {\n        this.dt.onRowDragStart(event, this.index);\n    };\n    ReorderableRow.prototype.onDragEnd = function (event) {\n        this.dt.onRowDragEnd(event);\n        this.el.nativeElement.draggable = false;\n    };\n    ReorderableRow.prototype.onDragOver = function (event) {\n        this.dt.onRowDragOver(event, this.index, this.el.nativeElement);\n        event.preventDefault();\n    };\n    ReorderableRow.prototype.onDragLeave = function (event) {\n        this.dt.onRowDragLeave(event, this.el.nativeElement);\n    };\n    ReorderableRow.prototype.isEnabled = function () {\n        return this.pReorderableRowDisabled !== true;\n    };\n    ReorderableRow.prototype.onDrop = function (event) {\n        if (this.isEnabled() && this.dt.rowDragging) {\n            this.dt.onRowDrop(event, this.el.nativeElement);\n        }\n        event.preventDefault();\n    };\n    __decorate([\n        core_1.Input(\"pReorderableRow\"),\n        __metadata(\"design:type\", Number)\n    ], ReorderableRow.prototype, \"index\", void 0);\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Boolean)\n    ], ReorderableRow.prototype, \"pReorderableRowDisabled\", void 0);\n    __decorate([\n        core_1.HostListener('drop', ['$event']),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], ReorderableRow.prototype, \"onDrop\", null);\n    ReorderableRow = __decorate([\n        core_1.Directive({\n            selector: '[pReorderableRow]'\n        }),\n        __metadata(\"design:paramtypes\", [Table, core_1.ElementRef, core_1.NgZone])\n    ], ReorderableRow);\n    return ReorderableRow;\n}());\nexports.ReorderableRow = ReorderableRow;\nvar TableModule = /** @class */ (function () {\n    function TableModule() {\n    }\n    TableModule = __decorate([\n        core_1.NgModule({\n            imports: [common_1.CommonModule, paginator_1.PaginatorModule],\n            exports: [Table, shared_1.SharedModule, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow],\n            declarations: [Table, SortableColumn, SelectableRow, RowToggler, ContextMenuRow, ResizableColumn, ReorderableColumn, EditableColumn, CellEditor, TableBody, ScrollableView, SortIcon, TableRadioButton, TableCheckbox, TableHeaderCheckbox, ReorderableRowHandle, ReorderableRow, SelectableRowDblClick, EditableRow, InitEditableRow, SaveEditableRow, CancelEditableRow]\n        })\n    ], TableModule);\n    return TableModule;\n}());\nexports.TableModule = TableModule;\n//# sourceMappingURL=table.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ObjectUtils = /** @class */ (function () {\n    function ObjectUtils() {\n    }\n    ObjectUtils.equals = function (obj1, obj2, field) {\n        if (field)\n            return (this.resolveFieldData(obj1, field) === this.resolveFieldData(obj2, field));\n        else\n            return this.equalsByValue(obj1, obj2);\n    };\n    ObjectUtils.equalsByValue = function (obj1, obj2) {\n        if (obj1 === obj2)\n            return true;\n        if (obj1 && obj2 && typeof obj1 == 'object' && typeof obj2 == 'object') {\n            var arrA = Array.isArray(obj1), arrB = Array.isArray(obj2), i, length, key;\n            if (arrA && arrB) {\n                length = obj1.length;\n                if (length != obj2.length)\n                    return false;\n                for (i = length; i-- !== 0;)\n                    if (!this.equalsByValue(obj1[i], obj2[i]))\n                        return false;\n                return true;\n            }\n            if (arrA != arrB)\n                return false;\n            var dateA = obj1 instanceof Date, dateB = obj2 instanceof Date;\n            if (dateA != dateB)\n                return false;\n            if (dateA && dateB)\n                return obj1.getTime() == obj2.getTime();\n            var regexpA = obj1 instanceof RegExp, regexpB = obj2 instanceof RegExp;\n            if (regexpA != regexpB)\n                return false;\n            if (regexpA && regexpB)\n                return obj1.toString() == obj2.toString();\n            var keys = Object.keys(obj1);\n            length = keys.length;\n            if (length !== Object.keys(obj2).length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!Object.prototype.hasOwnProperty.call(obj2, keys[i]))\n                    return false;\n            for (i = length; i-- !== 0;) {\n                key = keys[i];\n                if (!this.equalsByValue(obj1[key], obj2[key]))\n                    return false;\n            }\n            return true;\n        }\n        return obj1 !== obj1 && obj2 !== obj2;\n    };\n    ObjectUtils.resolveFieldData = function (data, field) {\n        if (data && field) {\n            if (this.isFunction(field)) {\n                return field(data);\n            }\n            else if (field.indexOf('.') == -1) {\n                return data[field];\n            }\n            else {\n                var fields = field.split('.');\n                var value = data;\n                for (var i = 0, len = fields.length; i < len; ++i) {\n                    if (value == null) {\n                        return null;\n                    }\n                    value = value[fields[i]];\n                }\n                return value;\n            }\n        }\n        else {\n            return null;\n        }\n    };\n    ObjectUtils.isFunction = function (obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    };\n    ObjectUtils.filter = function (value, fields, filterValue) {\n        var filteredItems = [];\n        var filterText = this.removeAccents(filterValue).toLowerCase();\n        if (value) {\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                var item = value_1[_i];\n                for (var _a = 0, fields_1 = fields; _a < fields_1.length; _a++) {\n                    var field = fields_1[_a];\n                    var fieldValue = this.removeAccents(String(this.resolveFieldData(item, field))).toLowerCase();\n                    if (fieldValue.indexOf(filterText) > -1) {\n                        filteredItems.push(item);\n                        break;\n                    }\n                }\n            }\n        }\n        return filteredItems;\n    };\n    ObjectUtils.reorderArray = function (value, from, to) {\n        var target;\n        if (value && from !== to) {\n            if (to >= value.length) {\n                to %= value.length;\n                from %= value.length;\n            }\n            value.splice(to, 0, value.splice(from, 1)[0]);\n        }\n    };\n    ObjectUtils.generateSelectItems = function (val, field) {\n        var selectItems;\n        if (val && val.length) {\n            selectItems = [];\n            for (var _i = 0, val_1 = val; _i < val_1.length; _i++) {\n                var item = val_1[_i];\n                selectItems.push({ label: this.resolveFieldData(item, field), value: item });\n            }\n        }\n        return selectItems;\n    };\n    ObjectUtils.insertIntoOrderedArray = function (item, index, arr, sourceArr) {\n        if (arr.length > 0) {\n            var injected = false;\n            for (var i = 0; i < arr.length; i++) {\n                var currentItemIndex = this.findIndexInList(arr[i], sourceArr);\n                if (currentItemIndex > index) {\n                    arr.splice(i, 0, item);\n                    injected = true;\n                    break;\n                }\n            }\n            if (!injected) {\n                arr.push(item);\n            }\n        }\n        else {\n            arr.push(item);\n        }\n    };\n    ObjectUtils.findIndexInList = function (item, list) {\n        var index = -1;\n        if (list) {\n            for (var i = 0; i < list.length; i++) {\n                if (list[i] == item) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    ObjectUtils.removeAccents = function (str) {\n        if (str && str.search(/[\\xC0-\\xFF]/g) > -1) {\n            str = str\n                .replace(/[\\xC0-\\xC5]/g, \"A\")\n                .replace(/[\\xC6]/g, \"AE\")\n                .replace(/[\\xC7]/g, \"C\")\n                .replace(/[\\xC8-\\xCB]/g, \"E\")\n                .replace(/[\\xCC-\\xCF]/g, \"I\")\n                .replace(/[\\xD0]/g, \"D\")\n                .replace(/[\\xD1]/g, \"N\")\n                .replace(/[\\xD2-\\xD6\\xD8]/g, \"O\")\n                .replace(/[\\xD9-\\xDC]/g, \"U\")\n                .replace(/[\\xDD]/g, \"Y\")\n                .replace(/[\\xDE]/g, \"P\")\n                .replace(/[\\xE0-\\xE5]/g, \"a\")\n                .replace(/[\\xE6]/g, \"ae\")\n                .replace(/[\\xE7]/g, \"c\")\n                .replace(/[\\xE8-\\xEB]/g, \"e\")\n                .replace(/[\\xEC-\\xEF]/g, \"i\")\n                .replace(/[\\xF1]/g, \"n\")\n                .replace(/[\\xF2-\\xF6\\xF8]/g, \"o\")\n                .replace(/[\\xF9-\\xFC]/g, \"u\")\n                .replace(/[\\xFE]/g, \"p\")\n                .replace(/[\\xFD\\xFF]/g, \"y\");\n        }\n        return str;\n    };\n    return ObjectUtils;\n}());\nexports.ObjectUtils = ObjectUtils;\n//# sourceMappingURL=objectutils.js.map","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/table/table\"));"],"sourceRoot":""}